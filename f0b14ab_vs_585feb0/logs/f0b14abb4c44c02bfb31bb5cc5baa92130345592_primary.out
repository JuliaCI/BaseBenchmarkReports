cset: moving following pidspec: 13816
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.37860902 seconds)
loading group "string"... done (took 0.57190551 seconds)
loading group "linalg"... done (took 7.446405015 seconds)
loading group "parallel"... done (took 0.172888192 seconds)
loading group "find"... done (took 1.14674325 seconds)
loading group "tuple"... done (took 1.803929253 seconds)
loading group "dates"... done (took 1.233678083 seconds)
loading group "micro"... done (took 0.228189945 seconds)
loading group "io"... done (took 1.115726688 seconds)
loading group "scalar"... done (took 41.113327617 seconds)
loading group "sparse"... done (took 12.59814724 seconds)
loading group "broadcast"... done (took 1.020401606 seconds)
loading group "union"... done (took 13.943342664 seconds)
loading group "simd"... done (took 4.719382019 seconds)
loading group "random"... done (took 9.519860284 seconds)
loading group "problem"... done (took 1.997328649 seconds)
loading group "array"... done (took 22.478738316 seconds)
loading group "misc"... done (took 2.065564324 seconds)
loading group "sort"... done (took 3.432676855 seconds)
loading group "collection"... done (took 19.51213385 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.457711015 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207726114 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259037052 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151478255 seconds)
  done (took 2.081517974 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.16008596 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.074462843 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.093688517 seconds)
  done (took 1.148802417 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324635442 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253047369 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224954433 seconds)
  done (took 1.584325757 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30265991 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243544624 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457530207 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30603593 seconds)
  done (took 2.189808713 seconds)
done (took 7.795109801 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.589856634 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42128751 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.243343898 seconds)
  done (took 2.076533701 seconds)
done (took 2.864044095 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.719226543 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27757886 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20113986 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46401404 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195786532 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21384012 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689544581 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336688269 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250484724 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099222658 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133759355 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388253452 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135899012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690919297 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090423658 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124646112 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178152975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4384694 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081235924 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109442601 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116766048 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139632792 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130782131 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088992256 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184044912 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080759449 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193031102 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107025767 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079404121 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27261182 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200018557 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685369997 seconds)
  done (took 10.921785123 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116180146 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.125927333 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097774837 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136458902 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134916073 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099033656 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083408 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095827938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120797962 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174086148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111967178 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135825409 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094029089 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093824817 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113887782 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243018128 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120593753 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098262194 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099906081 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086568434 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136756297 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111397708 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091901582 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10840184 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165406095 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20954794 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.128120128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127298775 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097408327 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093798186 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144892003 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155715458 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093434311 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079445899 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171203225 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122401896 seconds)
  done (took 5.220095495 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.070728124 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184952804 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120331618 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167794409 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079451188 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142498567 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094303263 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112693193 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255705023 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109636781 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.447589561 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141051671 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.158300136 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097470119 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099312584 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080914945 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098581832 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465078605 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157694991 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155161815 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113641865 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101505165 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082582234 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363296787 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096556216 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07813246 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096164872 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065217501 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159066365 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096793033 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.170506408 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121077763 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079296727 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135405585 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208529175 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126393734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115095665 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096665343 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076385248 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171951132 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104395711 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121720201 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07812474 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120258668 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131721345 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134571708 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.080653659 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096931666 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194937462 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096149976 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094380292 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.942587631 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181106081 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095409972 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09615586 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282532816 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116129659 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095765526 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077347154 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280404531 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189829417 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098477554 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095951866 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07873314 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097038868 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378908538 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079558937 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.861276328 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082590773 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105023417 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081316977 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097173852 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102419813 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086463643 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118364342 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078276212 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098521643 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077385754 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096011693 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079180823 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107797085 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209531614 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097545793 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078587295 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094865442 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097491857 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126914549 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09929724 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076341287 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130196922 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094142736 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079816132 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098707918 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132041181 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080426804 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106972183 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099620231 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125825099 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096680085 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.133671281 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095267281 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075363595 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1235545 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099801545 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128885991 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112179617 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079955874 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.163145653 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094860269 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07638236 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096682713 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077217442 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097278889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0794645 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109945728 seconds)
  done (took 22.761026204 seconds)
done (took 40.759505859 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442275614 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.516394782 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.898584418 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159370728 seconds)
  done (took 2.838530687 seconds)
done (took 3.673436625 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086911735 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107023533 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090164367 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.104709368 seconds)
  done (took 1.213715574 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101774547 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.102195385 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.086704255 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.101363382 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104999125 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.084298873 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102855396 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.086890998 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100769579 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.084232854 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.102373334 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099049968 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.086191968 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102060815 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.080612185 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10394323 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.08639865 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101626345 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104365988 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.083973219 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09943414 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.084945669 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105428861 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.081685661 seconds)
  done (took 3.110430195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098278084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098850059 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083656945 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.098819237 seconds)
  done (took 1.215053765 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.087664302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120101338 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118366891 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087616321 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121689189 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114014261 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.079426078 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097368151 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.08271306 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.104193343 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.078140845 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.126875245 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116222458 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086697428 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107357116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.076390877 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097867029 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114420104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.088244627 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109864486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.080572408 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104525244 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.077728638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11918083 seconds)
  done (took 3.230897532 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.14422779 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130327333 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118897795 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.082572032 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.135026096 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.130836943 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.098276695 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121223874 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.120105892 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.090244592 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099926424 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.138326964 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.090271652 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.094021576 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.076209524 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.094486109 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.088367999 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.109102897 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.096084152 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105007021 seconds)
  done (took 2.999654093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.094728028 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108091614 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076471174 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097672842 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.087249345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102449299 seconds)
  done (took 1.407916729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.078667459 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09464707 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.078931375 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094610508 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.082937054 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095590268 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.076923834 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095618429 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.077899907 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094970418 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.077962594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092913512 seconds)
  done (took 1.880624923 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.444917602 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.080405428 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.102293999 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096719174 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.083919369 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096407825 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089987583 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098827917 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119317392 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0831845 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095250637 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.079138624 seconds)
  done (took 2.348706848 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219816734 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114394109 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254395711 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16687798 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138664246 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147316111 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130467663 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142237395 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173444446 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135043614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199270236 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1717174 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12963981 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166945247 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118376955 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132475143 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174636233 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212758881 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133572054 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180650541 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195521822 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143235326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158547766 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130022402 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099206337 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146659243 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101565956 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110077866 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183218142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17357795 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166403119 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141593635 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126335035 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206095572 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218446995 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174893742 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165917642 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116673821 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121611341 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.147584859 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23485612 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1180731 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182500697 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137877756 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110494751 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168755584 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164404889 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152938647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12905394 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09870789 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193767992 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188442362 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188143772 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115868998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119985562 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157585073 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144010273 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111544421 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219280834 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193294236 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157467921 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.082171042 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126322563 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167631465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179087251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144850085 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160004019 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125117126 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166203874 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163452145 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160793176 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167810102 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.160754795 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11873927 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147082929 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150259056 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147304401 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223876454 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154680757 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102275886 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144760694 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128019995 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110561107 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153616778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106156649 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187466258 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128629968 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113697325 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14084019 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136625502 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138679867 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173946475 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166044416 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126017732 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090063993 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13329305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114646579 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183004989 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117156477 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118086459 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156769025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.090443389 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153272441 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103316901 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156976378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09704822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152618746 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160315286 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105616088 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116662763 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130522887 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128015545 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152081587 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194290184 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099974094 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113091775 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1813425 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170144145 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127156719 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155574472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176750959 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120994458 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126837682 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175282684 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211036498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099027885 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201565941 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132683625 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094375554 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112128333 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15435203 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132496586 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147464099 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111922371 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157928329 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200913987 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.086565092 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117820908 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27222353 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111607008 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110508375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138893711 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125399958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099544685 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124605108 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129315656 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157388568 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15431769 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131420947 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142644348 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129457841 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218056044 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119156053 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130599794 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106749295 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100394891 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168206902 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192628758 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091060947 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197361956 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.148259693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13314002 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149160389 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111985577 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152333945 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090346431 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098803293 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170046002 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144408737 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138447437 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.170303821 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133055568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175899582 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159427036 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14927205 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150813509 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.142442626 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137184225 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116923077 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135071896 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141984555 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.083582299 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121684708 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113203384 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134066118 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121028163 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09798584 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192042921 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145429739 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12542967 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117075554 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128147615 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157005076 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107796613 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150791949 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152215168 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125116757 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.191739201 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168627807 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161874862 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121175845 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199303342 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.081430508 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10428832 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101602053 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16484068 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094557042 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114778019 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143222317 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15764618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158768584 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151412789 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141798454 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169289406 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166654577 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.08218664 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146687097 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161681195 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154461856 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157334377 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122713173 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128436434 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152478802 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134219984 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200791756 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142576414 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174317645 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184616246 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12816573 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111105538 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12723348 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160999678 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13201427 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153292931 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125589313 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118305524 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137806867 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.093171171 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136751346 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178018806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139765731 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16677814 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12821301 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162392879 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106752998 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143038035 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136304802 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141896443 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069479279 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150426254 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198313888 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126104849 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149095396 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167118281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111302489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156637057 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18611146 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189856355 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095814954 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135556125 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138093982 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142819645 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148770693 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153291231 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136851611 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185030695 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11577628 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115667676 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118362508 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126959945 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1278342 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092158967 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127090182 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151607391 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.118301237 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162812654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138699528 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135582032 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147513777 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129126234 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123188347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126644332 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192400337 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154133725 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206632309 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125951676 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15704077 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179974492 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105603551 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090709482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.11224668 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153300735 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115431194 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164370448 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126852141 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135424954 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157294265 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166384933 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120786359 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.078801569 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135605661 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149608786 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143056923 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130039935 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13598143 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200371261 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099680766 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111873596 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148412343 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13575686 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12472584 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172895287 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067323022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126941349 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10657305 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092794505 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14169696 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200258466 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114008731 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.136472297 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151664086 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144347801 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141280027 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128103213 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128252167 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143489854 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174701058 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178959358 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091412488 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134963529 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15154334 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191609985 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139434128 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098915743 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200511895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170029667 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.172166794 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.121256851 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143818172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144520839 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135248305 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182935185 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094422809 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200762426 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093240301 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193396993 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131107947 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121702036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151160159 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126144403 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100087155 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184015259 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150788401 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11446504 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092444369 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144215896 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17400229 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133429736 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.087797445 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154273207 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104742204 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16603302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225507556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112397324 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130924394 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106103065 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114241304 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134231912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136334068 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118461709 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.117050309 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200463544 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.112005535 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167113574 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176296456 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165146242 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150877191 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121055778 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669710381 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.090491212 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188245632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113043809 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200659399 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128516068 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149127117 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136001858 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146186938 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172698512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136982334 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208429739 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167082502 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177339349 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09105981 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136205808 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138893887 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122723101 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130090292 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143385056 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137431728 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130443636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153747258 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145265504 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.114061651 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11804501 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1746063 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132494421 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160608547 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156216245 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118224791 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148756723 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162565286 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113212617 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155996091 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203528395 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119305095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1091365 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112928863 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132992571 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226980403 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.083549075 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196356625 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154445421 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135682761 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143611489 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125108068 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165441908 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134889434 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152819232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124690301 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136750529 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133375333 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116194438 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.088097048 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132717978 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142684178 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126981486 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136265014 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138121854 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170141099 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.084577363 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123749194 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134263258 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164177838 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21120593 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115398825 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094078715 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140226607 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130212368 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150310998 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152573073 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11535565 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114931595 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.113985677 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.109739139 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120465372 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112209433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134046446 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141281136 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201861811 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.095046854 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254647931 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119320465 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133329548 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07660629 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112725515 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129143036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125755457 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134600273 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108952578 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22680787 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128555107 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111841384 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106189788 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106150306 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114021223 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142164207 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142141647 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152871972 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124069012 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069817621 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137542242 seconds)
  done (took 69.64649138 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149328685 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.113027919 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.127869511 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.287438617 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15713019 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246168081 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.190104376 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231693043 seconds)
  done (took 2.409778404 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.161000307 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.106394293 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.132009564 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.113167637 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.079436954 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.135362352 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.302249578 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112822963 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.097830057 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100211857 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144200393 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.081340404 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.460960065 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.099583111 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097728154 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071103054 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09806118 seconds)
  done (took 3.298732565 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425871353 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.589525533 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.445388354 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.105995738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.611031798 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.117954946 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.951675463 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.173230597 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082629771 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.406915665 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.750704424 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136039434 seconds)
  done (took 16.711210369 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086885052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.102528162 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094194885 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.114473743 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082998285 seconds)
  done (took 1.401838043 seconds)
done (took 111.710325729 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.082294519 seconds)
  done (took 0.991089488 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.360194603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.062531102 seconds)
  done (took 1.367266981 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.092892815 seconds)
  done (took 1.014964016 seconds)
done (took 4.293794437 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121245453 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.275332051 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.211798143 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094702382 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.215767874 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.230487209 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.201625563 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161141826 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.105273996 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.185286667 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.252334878 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111267214 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084066628 seconds)
    (14/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199293549 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.23709067 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114340577 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.113614924 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.089022989 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.176314627 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.152349626 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181250986 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.139403167 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.079623803 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110722392 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120238585 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184073174 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129188919 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114012734 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.186816072 seconds)
    (30/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.171964527 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.124029748 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.107148399 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087761645 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10993994 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177825113 seconds)
    (36/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.116550627 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.189047415 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199894803 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129046559 seconds)
    (40/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.071472065 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.102262762 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080888893 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060689228 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.160788069 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108974943 seconds)
    (46/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.060665793 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.18192325 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.180298265 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075179898 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109951544 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.087619723 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.106099742 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124162102 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106973261 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.102756539 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.126899646 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106328433 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061534328 seconds)
    (59/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.147787034 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.171145075 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.081452777 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106543786 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145757704 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08088759 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.122326239 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079095992 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.255798958 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060506926 seconds)
    (69/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.189521414 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078735852 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.205425986 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.106803534 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.172017512 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.138084385 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062427151 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.155475463 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.146249806 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080997662 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.107290163 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.100835065 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208279258 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.099468009 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.232020034 seconds)
    (84/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109865268 seconds)
    (85/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.126146477 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.180887923 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177127174 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060444543 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084170068 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.173063555 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196747788 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142829199 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088839099 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.124623187 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089343031 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126487598 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160279524 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060942017 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.104478254 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.201921292 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089159726 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.089851108 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.221582366 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091630572 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.19486408 seconds)
    (106/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139421272 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087357458 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.175683756 seconds)
    (109/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.119411748 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105123879 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.082135727 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.165627426 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165899692 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116741425 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061377446 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.18487264 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0621193 seconds)
    (118/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10517197 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.205334512 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109129253 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107637673 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107214773 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112406523 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089582537 seconds)
    (125/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.115717217 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.129042695 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.169662836 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.088506278 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082704371 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132654908 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122968132 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085604275 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111192058 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.125616325 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100984208 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106432742 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086644998 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.108583882 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086141133 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.105966417 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060382011 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13032055 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.106191747 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063253398 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.086982178 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 0.16165918 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162590852 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099627789 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22149385 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.080955523 seconds)
    (151/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072804881 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11189823 seconds)
    (153/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.108312731 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101596413 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107537364 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.104845899 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156664536 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174558723 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062503936 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.125401133 seconds)
    (161/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070179587 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101494204 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083942172 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148346378 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080877704 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109340678 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.210177148 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0608203 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.210368498 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.078012374 seconds)
    (171/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130049152 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061440838 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082901689 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.146616571 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101328501 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06096879 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.102438906 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077975436 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167937115 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099242175 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06253705 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.108374346 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102621357 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100381922 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062475832 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.120390669 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.105952485 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128254321 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078532537 seconds)
    (190/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104975509 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.085206441 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083200117 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.124215825 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080401677 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.108852513 seconds)
    (196/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070788522 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060457747 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082112302 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062272138 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110576499 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156518154 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171993081 seconds)
    (203/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.12692586 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094001463 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09933186 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.091548861 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108520093 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060407996 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10045601 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.061143068 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069772195 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.100029908 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.061552266 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117158248 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.111469532 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082666351 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086130291 seconds)
    (218/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.11598728 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110528284 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103932332 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.110473163 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08695416 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100423765 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062968802 seconds)
    (225/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10020597 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06266333 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.125963173 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093590906 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.126985334 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.125811134 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.086019834 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.060418026 seconds)
    (233/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.107076792 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.084919568 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.09140494 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060330423 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.099154437 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.079069291 seconds)
    (239/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081889159 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.114233317 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102165241 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084940673 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.176623134 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100052489 seconds)
    (245/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090815954 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100020249 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.081477002 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.059995877 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.200689283 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083923845 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060721577 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.169402515 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.18643376 seconds)
    (254/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.061970792 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.061689234 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.126070777 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.124272559 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146157624 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.103551651 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078847119 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083681792 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111534717 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131583867 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.184164312 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061673291 seconds)
    (266/309) benchmarking ("sort", Int8, false)...
    done (took 0.17681704 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108368183 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060540476 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.093433506 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.089107589 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070609964 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.104929713 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.107146818 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062148945 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081492012 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.108813223 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.079272401 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101501059 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060257895 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101085906 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.084104969 seconds)
    (282/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082306906 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079937334 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.108017924 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.078420538 seconds)
    (286/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.080869525 seconds)
    (287/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.071337648 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.060600393 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.099302065 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.182467433 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.101294191 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.114242286 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.061038963 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099975492 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061833324 seconds)
    (296/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.085123107 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107122533 seconds)
    (298/309) benchmarking ("sort", Float32, false)...
    done (took 0.162400708 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.081801278 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101936858 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.061591559 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.070766312 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.108266803 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.124528864 seconds)
    (305/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.105331423 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12922683 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.086837446 seconds)
    (308/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.104832164 seconds)
    (309/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070960194 seconds)
  done (took 36.938101985 seconds)
done (took 37.856239174 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.225475259 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201125113 seconds)
  done (took 1.379224475 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.112589669 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136887996 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.113677827 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.144225022 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104117688 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11311851 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133711569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.092817511 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104251318 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081531017 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103711141 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081018232 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166971446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081186439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104549588 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.101190621 seconds)
  done (took 2.774392157 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.110002503 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.237480595 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11787662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.080527864 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107648346 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104250105 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.080742738 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109966607 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082625721 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101208547 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083741055 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102326762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080173391 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102407198 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081845912 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10522379 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.079478784 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.105105307 seconds)
  done (took 2.829968816 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113567766 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146584086 seconds)
  done (took 1.220808082 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.236488779 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.158563679 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.223096453 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.470118645 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275265086 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.399230001 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19875457 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208727755 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16071259 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.193422565 seconds)
  done (took 3.481665618 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115081281 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175898083 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.336729545 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.151659814 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.128357317 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09967115 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151624086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13047226 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.120613793 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.118316853 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.097716222 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114715313 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13474825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110131277 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093445802 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.113880448 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135800739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089197938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11092575 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.089669485 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133590315 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102059457 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.090791725 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109720263 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.11345187 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.095269507 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102742228 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080810202 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113003584 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110691764 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.088433007 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120049107 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115840492 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.147306312 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122015887 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.147886842 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11362236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086583167 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11247142 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085100648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114155135 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113975827 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122961983 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092763336 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102520072 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.092364969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103107893 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080618133 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111444749 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.115921953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.088356191 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10971606 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.146210676 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116201337 seconds)
  done (took 7.28429241 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.774421716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149875331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085510623 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.861403542 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108912422 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121638669 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.758025463 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106895884 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24459648 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.733875106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126302531 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093146709 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219088054 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.228500861 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.946638078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305982508 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.619576798 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120464624 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122370081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147395807 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111424565 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127940278 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121518387 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446793422 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.089178074 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108461803 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108483779 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.093239835 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15172545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119249727 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10968695 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169406819 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243067071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196689538 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109532475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085592613 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106260689 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162255829 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.255835414 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184660142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173873973 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104087185 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084348197 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11432457 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123200764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081670284 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176932839 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166547687 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.162362713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110393348 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113690746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089797828 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113528455 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15556218 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.116232248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311354337 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.298020678 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085962509 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114024594 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098612294 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254482146 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117503163 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215268049 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107779428 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.203434834 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106936285 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.741582146 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182814486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086073057 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112229297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090031352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11198503 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112607424 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163764781 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384833993 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094171513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110117093 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105813644 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223624956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.119318717 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084763947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173436375 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089828685 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113132577 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092660974 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115005386 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.158587287 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247975511 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093080855 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112907009 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110122303 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095456483 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11139747 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20357119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21072124 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15500349 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.198679175 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113070827 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.155494195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182916995 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092024525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186284925 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091062637 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119539337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113871876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.206864031 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138996279 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097786334 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111722734 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090799758 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141754113 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122386117 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111291699 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162942598 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491380612 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161099582 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08228219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122572304 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113236401 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156748402 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111652773 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.228092789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114137621 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160612447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111932979 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082631746 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113191065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.155590082 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117340059 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113383585 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092873342 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114751927 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.22836004 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208499897 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115827843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212070278 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177028385 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113646512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164124227 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114813216 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.159261874 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11591346 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091826314 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112485974 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780243106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09278456 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113212097 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110583253 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188786736 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086575621 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119038312 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.11952502 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083703368 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765735554 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120388346 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095900913 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.119355699 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112988241 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091242031 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110892871 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089938748 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177972747 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21958932 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093448189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113073609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.119323557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154658548 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.088808111 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.120770766 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120000135 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.119187835 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.091713214 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111096583 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118606374 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16148525 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156079824 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.210257693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580922 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086664417 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119367519 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217686135 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085979752 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.279683754 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112242017 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.193248564 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180445167 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093698329 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.298006577 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.15769601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188144569 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.122066806 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.164107971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10511973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111046188 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158330735 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084614534 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113733285 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153836413 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116226991 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115616619 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927843585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108741813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217221723 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105664655 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165045055 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111552398 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092604804 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286487759 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107402025 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096155428 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179603224 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088564504 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119976862 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721518533 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098928817 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114412483 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112873762 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190235914 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.177279813 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090169101 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111490326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113715708 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155277659 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.200927975 seconds)
  done (took 42.36033303 seconds)
done (took 62.292266834 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094848819 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127384944 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.090188145 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118096287 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.115005254 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086967475 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.110254621 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.091848354 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.116582141 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095152729 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.115907797 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064146876 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114195141 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112452224 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.091592335 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126774976 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.093673284 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.111156162 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.111686209 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081960306 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111400506 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082059512 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.104451836 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.065836767 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.113508189 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089826968 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.109044362 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.090208218 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.103582174 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.080876582 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10759253 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.088367714 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104498075 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.093633333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.111304946 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.110380286 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.092854742 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.112601496 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.085768581 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.103641643 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.090387984 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103224437 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088177393 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112303565 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.086861605 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109033179 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.089086964 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.115641124 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127246189 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083921318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11212361 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.092046649 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.11308694 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087668213 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.107943025 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.109591522 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087587915 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127273019 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.089622436 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106088377 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089470822 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.112193281 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086089027 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.113046474 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110473264 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09238736 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113831488 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08725994 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113461143 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086879933 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.103420473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089740308 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.108111504 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.080105188 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.1133048 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.091619692 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.103660911 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086825788 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11103399 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.107724606 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.082208994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105560386 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084253145 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109874299 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08506204 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.065226595 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.108075947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.086191761 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104273943 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112199784 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.088899311 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.10902388 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.083693364 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.114984838 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081270065 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.109616012 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081720655 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103794478 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083203111 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.10777382 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081595459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105861073 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.089846011 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.105625723 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087313049 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11605504 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081037758 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.110191379 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080268707 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.104695544 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.116771131 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091925566 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.10408601 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083825423 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.105489365 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.088990452 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.103653885 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08138084 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10328643 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081854287 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110088191 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.080676407 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106417913 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088445346 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.117821554 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080696583 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.107727295 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083020266 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.104634158 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086493019 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104581899 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.080774653 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.106362566 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072376393 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106750728 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081694042 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112736679 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08304688 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.112369321 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10425737 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091461262 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.107481853 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088856301 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.108905248 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08144883 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069375833 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107578911 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083533161 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.107630673 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.103054913 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085272378 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.103089821 seconds)
done (took 15.96614026 seconds)
RUNNING BENCHMARKS...
(1/9) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.053740495 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.052774272 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.037656537 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.056253357 seconds)
  done (took 25.18826794 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 1.059645333 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 1.060155812 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 1.058946721 seconds)
  done (took 4.166632982 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.182016401 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.056194434 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.054883551 seconds)
  done (took 18.282347848 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.255772219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.143958397 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.372855736 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.782365745 seconds)
  done (took 8.543575352 seconds)
done (took 57.172066691 seconds)
(2/9) benchmarking "io"...
  (1/1) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.775710671 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.778775545 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.060299572 seconds)
  done (took 10.607401804 seconds)
done (took 11.594855129 seconds)
(3/9) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.043547637 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.068551588 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.093949934 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.035041179 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.157831453 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.088576982 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.592377978 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.056544262 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.070330747 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.035930192 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.060424474 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.055632902 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.060336432 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.054565874 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.062989008 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.054471757 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.059856356 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.524032584 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.403517449 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.05617183 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.066163689 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.071701179 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.073144608 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.059514692 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.074815117 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.060073768 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.061499184 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.064520776 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.834499942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.05633652 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.129741566 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.215758169 seconds)
  done (took 184.393562887 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.055925748 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.975603558 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.109349941 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.074744526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.407591845 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.255133246 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.183584611 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.497798228 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.074227719 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.067851081 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.27158248 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.057311041 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.325775839 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.041888326 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.065458642 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.169550057 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.276484123 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.3293624 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.07188902 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.307777663 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.068149127 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.159068264 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.101843496 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.23007506 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.069892283 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.172557185 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.084281599 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.07972444 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.248488614 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.220472697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.097906432 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.089187885 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.568315729 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.91530469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.082908374 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.071423938 seconds)
  done (took 143.87132209 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.324512445 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.057026321 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.057981457 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.057874593 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.084677692 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.058804182 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.511102711 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.514485751 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.565364913 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.44455722 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.117630145 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.208020159 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.059026809 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.058775683 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.146223673 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.071226836 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.060008848 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.074245834 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.09995012 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.058310208 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.059660601 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.51456001 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.074498384 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419355199 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.068037189 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.05938804 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.085343799 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.443943333 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.059219002 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.084556728 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.361397966 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.100331152 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.0595463 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.299550377 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.686857266 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.164135071 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.060744727 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.085876583 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.059426765 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.318947137 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.061385304 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.061252772 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.060654515 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.062937448 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.58185624 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.063793384 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.513981611 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.061106064 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.892793489 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.059846801 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.060643376 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.661328604 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.503270828 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.077546141 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.060696137 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.063814029 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.060676325 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.060282572 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.086364573 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.602086008 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.15488976 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.075998363 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.065151652 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.086436702 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.062658493 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.188686787 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.061627574 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.704032301 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.134517659 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.169653556 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.518727559 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.064613627 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.149112733 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.175153556 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.061167471 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.061514956 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.062317358 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.062050759 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.162605697 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.062580568 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.413305792 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.068439822 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.063188687 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.118570078 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.150970547 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.062423874 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.306610965 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.065024633 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.062927295 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.707057114 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.061643064 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.150277574 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.062843786 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.0625669 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.062256376 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.414714311 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.521484749 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.238310571 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.066044366 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.101528547 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.08054067 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.063346225 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.432592576 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.512690663 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64212666 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.066735654 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.165205442 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.067368313 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.064904092 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.06289658 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.091286654 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.078321897 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.122048916 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.063071631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.453072305 seconds)
  done (took 327.836363408 seconds)
done (took 658.415722083 seconds)
(4/9) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.143707895 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.085906157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.080165004 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.083434613 seconds)
  done (took 25.392139579 seconds)
done (took 26.389517837 seconds)
(5/9) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.064296485 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.066057949 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.064051611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.065065133 seconds)
  done (took 25.259524905 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.105989388 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.104556279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.107342191 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.116100041 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.108604913 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.108309735 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.099571759 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.100274501 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.117141255 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.113249554 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.122120771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.11160225 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.107299 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.098487948 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.108517459 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.107958793 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.117256487 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.107635485 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.098860512 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.109277535 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.074001282 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.117668486 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.109255864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.073756016 seconds)
  done (took 27.546520993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.599653727 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.144428035 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.228539939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.127907292 seconds)
  done (took 6.101198109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.126185588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.127201619 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.140247806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.17671424 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.206137054 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.136515065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.100184583 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.095324896 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.081907088 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.127730443 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.202696486 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.143166108 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.214180943 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.074178418 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.291817246 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.074174377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.073590528 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.125962497 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.17880804 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.194829136 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.07556386 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.12559496 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.137963612 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.144177698 seconds)
  done (took 28.377349865 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.087623645 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.081734265 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.073925589 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.078843552 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.09529246 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.07375291 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.074545438 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.075286722 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.074523 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.081157613 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.073447127 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.087025618 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.074907657 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.073996153 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.080058351 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.075659484 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.081227821 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.074052137 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.075033147 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.078475015 seconds)
  done (took 22.57402298 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.068485878 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.944974497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.419405833 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.325314811 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.067584714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.074769505 seconds)
  done (took 25.904659088 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.131135353 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.25837818 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.078652882 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.347271293 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.437455462 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.091538367 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.076288193 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.273086822 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.514159677 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.490079634 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.124150108 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.134129699 seconds)
  done (took 15.959598796 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.079343247 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.073260497 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.073218022 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.089689241 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.120255192 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.094512088 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.084143672 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.06970962 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.123154583 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.139272394 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.094872832 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.12181008 seconds)
  done (took 34.168412429 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.158635123 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119324266 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.838358848 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934758726 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796464806 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.284292986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.941986686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515790612 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.079015601 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346282009 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280068308 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.180243595 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54172942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071542541 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.075780918 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.921203511 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316590361 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516947849 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076293523 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49853441 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.101477563 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.079047974 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.658818828 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.103096681 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.284925684 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.056105402 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.335919615 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849556683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303178532 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.090035747 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.084272107 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.074001546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348873204 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668184809 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.185365355 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.084246074 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974975333 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.623229726 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.069053126 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.575794515 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066347831 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.080460979 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.084532833 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073898283 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.007761374 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.08157075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52744269 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.082757373 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.784689652 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.07499858 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.085467094 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.169444759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.07880241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.06681321 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28067046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085475538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.072394984 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.08182837 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648631141 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.107454388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081266586 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.012953644 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.589134342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504546954 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672137076 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.191567319 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.079853172 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.079433562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009130554 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.569626249 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.0963818 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225979912 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.104809976 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.772286766 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811126377 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.33033881 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023931906 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586599757 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.089106758 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.013410764 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304835661 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851859203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015450731 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.020626922 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.010477411 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714736637 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.087055071 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.367974075 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.086540164 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.518366915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.090765166 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.097268768 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.099561197 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.301786434 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.955191577 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076881889 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.055267461 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221508922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.102884517 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.522190565 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014715469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.081740212 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336309262 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.289077019 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.077367441 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.939090107 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294897401 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089722314 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.100331386 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.079003947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.091537666 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.61976619 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.104922535 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.034218307 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.098979512 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854303329 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745213724 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081984178 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.197357975 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.312224197 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309457491 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.768028648 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964466575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.146718275 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.081817128 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.07955903 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.597597632 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.933011638 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.960765718 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.075524853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.078516087 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.09245228 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.080005545 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04566392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.077198402 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356943827 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.860051279 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.303082905 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.082333091 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358252196 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012826569 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229236189 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130875549 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.307943971 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.099338006 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.097439781 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340672777 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.080209785 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.091785388 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.094643299 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.099466508 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.178114013 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.101858013 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.087516056 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.341650337 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.084747439 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.084389567 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627832143 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863263366 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084633571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.087654744 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989711979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62692048 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085338103 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.094009969 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297659053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.096565764 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.148247179 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.087082519 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.091925311 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.567856653 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.07040432 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.087039838 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.079033282 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320589368 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.092868066 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.534958541 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.163780411 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.272811158 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631032269 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.109037184 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.015746817 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.793198493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.77611647 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082980035 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284136979 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.083046023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.091713644 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.093638772 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.757113071 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628949016 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.099099838 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.546158075 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.092824242 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.093021107 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.090289324 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.083516728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.536859112 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.139607103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.09102012 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.098583964 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.228399245 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.098454182 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.018016353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.601765431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.089758573 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.08361043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.86110627 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.11899255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.535713283 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558914516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345914238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.996756531 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.095372521 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.698968935 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.116586711 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.091634357 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114701836 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105194542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.090657268 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.093802363 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.096198898 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.631508154 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.575893192 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658122067 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774586786 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599373892 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911564143 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.101497358 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.982995178 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.534189636 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022802636 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.7473436 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.242113514 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542228527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042319194 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2805248 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.109733063 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737845005 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.096576856 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315592379 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888691603 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.120711911 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.116408912 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297042768 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.120125446 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.092049018 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014894595 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.367575314 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343691927 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.129722882 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.168098998 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540078547 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117069376 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882887182 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.086217941 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303983817 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257533129 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.72085034 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.481579947 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.090281987 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.365958068 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590237422 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.096249827 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.616015626 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67012291 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.114191628 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.284050252 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029793298 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.099060465 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.098697688 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.083927322 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.033434878 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.380527485 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.361782137 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.098753337 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022804807 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.089391607 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579971685 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.997415635 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.093248175 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.088462509 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780458954 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.095892641 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32304776 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.096651149 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.515539328 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096128549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.027146728 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022498438 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.781836096 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.091286689 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07735092 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550672491 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.549745551 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283458308 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.109955521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043688573 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34778284 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.104300314 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639491957 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330565396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.061725664 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.115345618 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.189735305 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.177353136 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.091574869 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972554877 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.327325659 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998825211 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.314970713 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.866012409 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.989978969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.088010144 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.303583772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.973198421 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.394352887 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.320788777 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.816310363 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.100971609 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775466962 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.130803041 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.360915534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16092737 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.610539881 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.101525171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.16108259 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.101825692 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.101858026 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.101651191 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241943818 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390270223 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.113630621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.105797575 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.186450233 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.088583836 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.535268835 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.864760906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644842866 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855444846 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658129324 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.119598558 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.0921228 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090714049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026705119 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.240474964 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.619847773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365800231 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222190785 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.685368115 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.114366788 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.198399027 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.11530245 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308095854 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367064314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967576604 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093443572 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.758555494 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.990474133 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.103991959 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.305435365 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553882466 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62192387 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211299397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.098640102 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.543816755 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369649796 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18484055 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.093058665 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689075128 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.093881826 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324192678 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.118046944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435761863 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.245645129 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.103625875 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68794438 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.120058044 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.254695862 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.867743327 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682209506 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.357166535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463642583 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.107429561 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649142381 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.76075796 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35966337 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.164212044 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.105993829 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.222044094 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.240026611 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.450514095 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007604852 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.09676642 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946962115 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.80520626 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.105908565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649723302 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375350513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.092901955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.459903299 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.133102442 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.105253638 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.321164011 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731428913 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.323405974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.106734019 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.097189627 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.672628486 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6507804 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.123739228 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030686447 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.099959408 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306642576 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348374278 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.121103274 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.549158628 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.806903302 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6091486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.076370844 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.118026351 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.099669243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751416766 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648683082 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.559643 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54366464 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.761375687 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102819932 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375908131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.101710681 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.097131542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376968782 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.10132171 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.097208156 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.127507773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.64958401 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757580331 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.116973092 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60582047 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.037832957 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.326730533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.832756504 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036569787 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.106784675 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.257678746 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.101762055 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230516764 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.113112343 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.471302983 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.122782514 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.853903222 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415164704 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.108341795 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.094806077 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.218242572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.111815734 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.110610163 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349814358 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.104423569 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.774714772 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.450168793 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.356729909 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.10830242 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.081906117 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.103218144 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.100272058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825437767 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.077262902 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.778266131 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634148225 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.103684374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.128808412 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.102559261 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.316111846 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31186373 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.427841967 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.132253734 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106603718 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.119342854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.005971254 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.91615048 seconds)
  done (took 1436.525059093 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.103953818 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.142614068 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.141809906 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.188114993 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.149457711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.160367316 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.144154617 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.164415372 seconds)
  done (took 50.226866414 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.106583028 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.242073768 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.12740773 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.105178738 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.111876089 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.102119621 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.500634654 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.107374845 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.108144838 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.108951007 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.105311844 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.107388778 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.704642475 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.108215543 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.108764231 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.083804102 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.107902091 seconds)
  done (took 60.986381689 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.109531552 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.239466386 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.167469095 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.109599669 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.218871492 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.122846522 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.320829705 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.103971762 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.098794805 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.259724101 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.747269926 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.126655995 seconds)
  done (took 78.657154211 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.108301496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.106723171 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.107820917 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.107865321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.107066675 seconds)
  done (took 6.569162566 seconds)
done (took 1819.853310021 seconds)
(6/9) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 6.081884049 seconds)
  done (took 7.113957465 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.672405654 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.636326294 seconds)
  done (took 4.339867587 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.399598519 seconds)
  done (took 2.434519818 seconds)
done (took 14.916934882 seconds)
(7/9) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.129388873 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.533981918 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.116840585 seconds)
    (4/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.252942313 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.378151068 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.829705027 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.296749309 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.118622345 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.413678914 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.093546972 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.465353969 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.142530585 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.321686241 seconds)
    (14/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.322516475 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.180553407 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.104128638 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.146329239 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.129632 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.206520281 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.220757477 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.108640279 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.68064955 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.103860672 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.246642693 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.103317664 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.512702416 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.892538585 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.214163709 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.726952894 seconds)
    (30/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.734504257 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.679434662 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.207093604 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.155279792 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.131375383 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.213106197 seconds)
    (36/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.724641197 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.575215566 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.088565469 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.46498232 seconds)
    (40/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.42352901 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.18640276 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.105270491 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.085872627 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.226418888 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.187777018 seconds)
    (46/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.805726344 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.742628765 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.354866715 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.643948513 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.131108067 seconds)
    (51/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.129334247 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.21485761 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.173925031 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.133016489 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.361473865 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.41693691 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.742658681 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.086584763 seconds)
    (59/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.776065373 seconds)
    (60/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.460578473 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.167529267 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.488963679 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.088964335 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.319024023 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.421164233 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.240622941 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.105840249 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.583788939 seconds)
    (69/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.037679057 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.617101495 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.107111033 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.150330745 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.242629781 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.154116045 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.656403686 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.125824115 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.181152153 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.161355752 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.281315543 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.233413146 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 6.111060937 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.178959076 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.092198586 seconds)
    (84/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.433163852 seconds)
    (85/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.128594482 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.625901298 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.222066443 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.425489254 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.301173699 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.093905336 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265338852 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.184346817 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.134475041 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.257742467 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.201621828 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.439731764 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.141131467 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.106059284 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.174191152 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.110069544 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.253715163 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.118332392 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.49674502 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.11316988 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.850455398 seconds)
    (106/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.181494142 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.327108063 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.108991617 seconds)
    (109/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.089742316 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.247769983 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.174443107 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.093774392 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.446539047 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.139493828 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.661268318 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.113914425 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.095891222 seconds)
    (118/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.19477349 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.110198149 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.620711113 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.139884426 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.281117061 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.133977051 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.439185142 seconds)
    (125/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.021520574 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.131063806 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.618680546 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.148657207 seconds)
    (129/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.119013 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.135831312 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.244600486 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.39061697 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.110609538 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.05808809 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.168197914 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.753516827 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.218419132 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.386514386 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.803539719 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.134931185 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.268744262 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.112257046 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.264495936 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.092675487 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.229613476 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 5.331290653 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.207064585 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.552561334 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.470344623 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.1122238 seconds)
    (151/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.059547709 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.229911971 seconds)
    (153/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.646347546 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.775832217 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.139605661 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.157272993 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.091515943 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.141053028 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.404664302 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.182890172 seconds)
    (161/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.42597219 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.114375095 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.131991206 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.153230089 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.85519533 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.139694292 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.114044446 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.355796071 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.132098825 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.863286959 seconds)
    (171/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.626532847 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.050607065 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.09710882 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.1930816 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.113588886 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.59588059 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.238466299 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.290863307 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.259870314 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.537967603 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.487691439 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.867449882 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.126417036 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.115247774 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.491279107 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.414867027 seconds)
    (187/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.157197753 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.857626693 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.922391778 seconds)
    (190/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.202295014 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.141548898 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.681159299 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.134065095 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.516828003 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.170732083 seconds)
    (196/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.425727428 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.881599239 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.858155965 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.889046977 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.22510699 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.30912367 seconds)
    (202/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.386824876 seconds)
    (203/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.291716825 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.326133194 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.198016718 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.12338554 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.143069546 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.467535362 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.522920184 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.259712303 seconds)
    (211/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.178355592 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.173523728 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067776037 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.806025212 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.249594673 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.510114551 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.84856123 seconds)
    (218/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.158222796 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.204788345 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.039968966 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.76411076 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.341280934 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.687716948 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.104774355 seconds)
    (225/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.117489657 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.612572624 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.131809977 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.128595284 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 1.927566313 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.941230403 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.149404897 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.314894485 seconds)
    (233/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.158823646 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.140484706 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.354437639 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.606060656 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.163044925 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.758601715 seconds)
    (239/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.098037264 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.132102004 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.129482259 seconds)
    (242/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.344073114 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.131483832 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.91662487 seconds)
    (245/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.128532745 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.306417578 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.181264774 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.37405124 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.238382481 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.542018317 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.599386752 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.12416976 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.317486183 seconds)
    (254/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.458920219 seconds)
    (255/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.373435608 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.296466182 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.72677263 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.119527984 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.218686683 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.307261655 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.113314273 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.190675474 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.605347302 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.124364867 seconds)
    (265/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.9106385 seconds)
    (266/309) benchmarking ("sort", Int8, false)...
    done (took 4.130156221 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.147300652 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.417359041 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.110596464 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.504153374 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.703622338 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.184592187 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.127445838 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.560510187 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.179794572 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.228763458 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.508421767 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.5222501 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.300761077 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.120213383 seconds)
    (281/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.262816513 seconds)
    (282/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.773836028 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.935124406 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.203935928 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.199151223 seconds)
    (286/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.635743861 seconds)
    (287/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.4384746 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.243586925 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.253490804 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.120042548 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.952581137 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.045142414 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.525881205 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.776013311 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.451013104 seconds)
    (296/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.148446971 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.162744465 seconds)
    (298/309) benchmarking ("sort", Float32, false)...
    done (took 5.081123072 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.14656062 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.573945215 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.528005016 seconds)
    (302/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.249793723 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.1443881 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.280343309 seconds)
    (305/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.212995246 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.102271184 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.156710465 seconds)
    (308/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.205969446 seconds)
    (309/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.225215341 seconds)
  done (took 832.070510704 seconds)
done (took 833.103261485 seconds)
(8/9) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.204740254 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.149524274 seconds)
  done (took 13.407070973 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.289489916 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.244142733 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.127256982 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.176833371 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.128101113 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.122746556 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.138102004 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.128477705 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.127501435 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.126030848 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.128092175 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.314773195 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.165454984 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.128075408 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.127938664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.220253892 seconds)
  done (took 39.755850571 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.151541253 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.133898364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.230727709 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.147407204 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.150540071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.297217056 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.182891753 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.132002671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.27944437 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.167584458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.487389468 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.151766401 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.132136567 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.091024738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.147778424 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.297917246 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.350675455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.489588035 seconds)
  done (took 26.07562409 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.517333133 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.133999668 seconds)
  done (took 8.706040802 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.129591494 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.180959184 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.146780387 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.142662656 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.151923759 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.210120585 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.127384374 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.134143632 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.165219127 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.20668836 seconds)
  done (took 62.657993122 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.149306162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.133043676 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.134007563 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.131306987 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.125264248 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.13793704 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.131961847 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.130358277 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.181236294 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.248410738 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.149536443 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.138202524 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.149287557 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.134066067 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.131034327 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.166803732 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.274692773 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.146270173 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.129984528 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.138444821 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.134099019 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.220613143 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.171666085 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.13177675 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.243576629 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.195288894 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.139484568 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.139433357 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.257984495 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.148612002 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.13354999 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.13468335 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.136682753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.687269168 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.642921713 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.141411699 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.15564392 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.141999884 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.131362892 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.254278342 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.150845368 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.139032223 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.127109028 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.613313723 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.288018165 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.237969184 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.249246029 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.136157185 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.135490013 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.192280099 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.136076419 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.136451281 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.162565205 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.873798462 seconds)
  done (took 99.040260425 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.166067424 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.61843471 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.29765214 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.149728803 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95401913 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.907939093 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.146152523 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.375404256 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.158158252 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 4.348046328 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.403345831 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.597661597 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.153690629 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.188668519 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.717547258 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.206825662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.129642227 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.972637534 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.143692166 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.135201948 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.496744034 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.732108978 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.092588991 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.431564911 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.166703306 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.551247865 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 3.388241958 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.561985473 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.147788583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.129677609 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.559213451 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.149662631 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.164118584 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.134544326 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.386295537 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.444500834 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.435026755 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.145257854 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.141440441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.130793584 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.15616612 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.551064622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.448344789 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.066744677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.135083812 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.56851512 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.14673861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.136132243 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.136889605 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.336644897 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.043794945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.131896676 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 3.379360976 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.144465838 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.392285898 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.195174239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.176916206 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.581619819 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.146240077 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.235821461 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.196133033 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.133080331 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.138282312 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.134709278 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.150545428 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.438172721 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.474296612 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.13517697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.440140699 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.568572128 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 5.984161854 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.634993317 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.770109083 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.138321715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.174785111 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.133870448 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.804210242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.596072259 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.201814421 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.132870896 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.425109394 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.151015155 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.394499542 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.147894995 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 4.444063808 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.52224326 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.160643932 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.192312586 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 4.444750274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.133122327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.889994077 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.135264123 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.384527587 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.157740895 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.135260103 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.134362278 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.173787042 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 3.897805957 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.148800993 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.135934554 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.62179266 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.160864332 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.12026919 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.136459553 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.464001228 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.134443591 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.137331582 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.136609094 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.356114795 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.265400386 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.136701 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.135095287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 4.43065708 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.139096541 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371232997 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.139431779 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.400787872 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.149651118 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.769699944 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.13522961 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.934355309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.168546715 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.135659623 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.137501693 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.953768823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.360237471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.162348181 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.136006962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.136542233 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.156239575 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.137206098 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.136517088 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.206385925 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.139659701 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803110853 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.179294003 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.170665501 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.735044378 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.146138497 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.765895495 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.154771441 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.137312545 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.402524004 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.396218075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.356385277 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.13769927 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.153859155 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803080133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.170787873 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.268975265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.154482167 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.133260441 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.333576691 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.439147545 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.138419676 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.707327994 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.137975964 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.351408273 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.138954577 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.430111558 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.592980754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.155504125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.143206859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.808450786 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.781155294 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.800048265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.140430709 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.395915428 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.112707823 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.590129974 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.138640988 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.138509349 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.710979347 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.142128424 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.145491792 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.139128616 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.137489638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.204058802 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.311714452 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.257949409 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.138107926 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.557355272 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.162891689 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 4.520174165 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.148948344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.140594424 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.490851003 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.205598631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.143508882 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.158896598 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.139767956 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.149293571 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.568146676 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.801783242 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.139371562 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.290288622 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.730522673 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.159617428 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.140244715 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.421355798 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.383823761 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.648023388 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.17707648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.408352042 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.156581127 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.179718136 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.895087862 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221068647 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.569177523 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.155579119 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.146117937 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.702665341 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.160733736 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.21212009 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.142486515 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.142056924 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64199421 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.160667248 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.142569628 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.15445791 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 3.914322556 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411173517 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.14251021 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.178713284 seconds)
  done (took 1044.015998258 seconds)
done (took 1294.709088777 seconds)
(9/9) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.175395746 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.168545821 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.152158654 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.174232028 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.263815884 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.177228265 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.1622077 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.154782983 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.200084001 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.201564079 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.151557079 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.175869212 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.154226084 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.153509042 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.152622451 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.168018261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.064550526 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.153772968 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.170139168 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.162909176 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.170709655 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.15277318 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.202821573 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.175465241 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.156445501 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.157105452 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.156831871 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.174118625 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.265513078 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.157247941 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.157374535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.164818799 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.067586596 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.151947732 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.1489974 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.174251694 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.165927519 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.163751584 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.157360544 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.186792185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.413801694 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.168656581 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.156042171 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.155920101 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.156403775 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.159369929 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.155726152 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.162824635 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.168342099 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.169587195 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.402261366 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.185536398 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.158620647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.157036216 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.167176089 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.155742665 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.159270126 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.17085133 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.175466988 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.172012349 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.057232187 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.160267325 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.15836661 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.171794753 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.163851605 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.44170894 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.16694082 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.159099529 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.418441965 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.177207562 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.442374867 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.179961475 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.159128451 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.171655811 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.189105184 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.073071046 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.153164697 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.156070744 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.165852155 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.155918525 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.168126799 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.169610403 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.162503429 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.157980855 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.170762437 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.181533212 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.168044463 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.158704652 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.16730889 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.177443348 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.165201894 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.169111288 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.160863182 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.153102683 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.168155331 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.161972044 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.160313709 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.161827697 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.163574446 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.169273757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.418924006 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.190008403 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.155821056 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.155829247 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.158002327 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.173317443 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.419626513 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.174861984 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.180326616 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.206534075 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.161370473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.062494514 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.162740816 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.175831911 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.167829174 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.16356847 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.1552063 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.064252326 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.411941669 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.189631505 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.160919011 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.158827182 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.175712823 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.16090562 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.157035906 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.092116049 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.162077211 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.173424334 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.281295995 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.170850131 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.192568013 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.160304218 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.164172685 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.183687793 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.176238837 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.191193416 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.163731978 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.176151629 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.177565152 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.157817637 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.172412866 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.171707471 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.162498275 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.168206721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.156685323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.184512834 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.173963471 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.17421855 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.181532361 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.280812053 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.158639543 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.07624114 seconds)
done (took 196.174062473 seconds)
SAVING RESULT...
DONE!
