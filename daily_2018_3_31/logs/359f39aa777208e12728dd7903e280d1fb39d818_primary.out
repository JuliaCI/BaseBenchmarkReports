cset: moving following pidspec: 20230
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.554855879 seconds)
loading group "string"... done (took 0.519573415 seconds)
loading group "linalg"... done (took 9.370494788 seconds)
loading group "parallel"... done (took 0.170836957 seconds)
loading group "find"... done (took 4.507803865 seconds)
loading group "tuple"... done (took 2.06567092 seconds)
loading group "dates"... done (took 1.386478939 seconds)
loading group "micro"... done (took 0.190259004 seconds)
loading group "io"... done (took 0.516595501 seconds)
loading group "scalar"... done (took 58.416511656 seconds)
loading group "sparse"... done (took 13.749228614 seconds)
loading group "broadcast"... done (took 1.718132229 seconds)
loading group "union"... done (took 10.590422249 seconds)
loading group "simd"... done (took 3.571501509 seconds)
loading group "random"... done (took 13.52284481 seconds)
loading group "problem"... done (took 2.23462193 seconds)
loading group "array"... done (took 24.28876095 seconds)
loading group "misc"... done (took 1.167861291 seconds)
loading group "sort"... done (took 3.701836475 seconds)
loading group "collection"... done (took 21.917488885 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.700079979 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146050722 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.254822124 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.210354387 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276912012 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164560112 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158384307 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170376827 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.626257961 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209434142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135525482 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417021589 seconds)
done (took 6.246251279 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262009804 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.243165632 seconds)
    (2/2) benchmarking "String"...
    done (took 0.187897456 seconds)
  done (took 1.145349563 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076207568 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157512816 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109646872 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094121387 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093328911 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108728917 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092656346 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110043988 seconds)
  done (took 1.488651568 seconds)
done (took 3.697733748 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.514086318 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.874542484 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.506746172 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180414654 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315591802 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30689727 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263409731 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221572108 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091303013 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085747033 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177496614 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.445142085 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.386825878 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.991528929 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068451312 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094420714 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154184251 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.800996631 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080719002 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109718956 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.532458358 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213755629 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11493018 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105575866 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184211156 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133348119 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143019146 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100481535 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.655083721 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131909751 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213912403 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082755078 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140158316 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163254275 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212586037 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109612584 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688985011 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200048736 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097406009 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100171284 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.698663677 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116993104 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204338903 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105947666 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067629375 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161384642 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117521333 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078177943 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093360636 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101911129 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159039581 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.439848896 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105809681 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.190895109 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092699688 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702903523 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097438728 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271847341 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123998136 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09213116 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090911874 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087335771 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153389019 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093755843 seconds)
  done (took 20.199683856 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168152266 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184839275 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078413946 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156422706 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12125722 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097420415 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084516518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078397344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124390756 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176610231 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143168439 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172005498 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09510784 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08979365 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167685519 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228878757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124789795 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10274796 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087289482 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105541706 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122299673 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094782891 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107496463 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090471103 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171118562 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203182443 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110693498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122672583 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089742514 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094046742 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140981572 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14280646 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090740847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087629303 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169699224 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122554994 seconds)
  done (took 5.288937827 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.24216394 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10506634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249469401 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19770285 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151712244 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18222399 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174671199 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295298712 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.225646981 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161623878 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127253672 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096445758 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078557004 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07985468 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094898168 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.322646828 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.193088863 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.171156771 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18554987 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097563278 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097954529 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363238221 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100225544 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08555422 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11123945 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064208835 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226222894 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09366777 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.06306029 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082626955 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121224458 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113430618 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207701473 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123300332 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119021713 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112479516 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085540894 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221582261 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118813019 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079683694 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.112371013 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13191465 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113573271 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111889217 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125463492 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218228956 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087718836 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110511798 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.031015191 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196258946 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.17385151 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105379843 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292673507 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108291269 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120208795 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091883587 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.781762365 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113908004 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080483255 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095935268 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094507633 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077441402 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.46658142 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108170382 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.668753397 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082893708 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15727867 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096703129 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118086191 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085104785 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100015763 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110644877 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088266441 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.0952481 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087138533 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078376511 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106750087 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11400177 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.176404732 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082591906 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097977938 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147432045 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087497485 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11249605 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10903071 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123161091 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090204076 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084777512 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130083402 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08391797 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096062743 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089309369 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.187975137 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097818903 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129717835 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098403189 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145813622 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088779336 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.242024688 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086637744 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080564119 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.136294065 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085004793 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127754393 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098881449 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096564406 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083854816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077495786 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098161939 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146546261 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089119864 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096970722 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089245939 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091843647 seconds)
  done (took 28.808510143 seconds)
done (took 55.016939555 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.424804771 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081986266 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081139758 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101845472 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082366118 seconds)
  done (took 1.572522573 seconds)
done (took 2.345576653 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310493648 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200026254 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086367437 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188352097 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086919121 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19666582 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183544768 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100770845 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206123128 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084761069 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192024725 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08629898 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104355092 seconds)
  done (took 2.828752178 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103183826 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104912664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100932077 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118637536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084633526 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100684799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118502256 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10716821 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100938627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111800064 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086085621 seconds)
  done (took 1.903856531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100784848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102288845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090237076 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115650852 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084603497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096605914 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114885108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10568665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097698175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111810177 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085625798 seconds)
  done (took 1.878402552 seconds)
done (took 7.381630072 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.214343766 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.872909274 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189296313 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243820115 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350773017 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296411658 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608501806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.198792027 seconds)
  done (took 15.880120431 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.204037197 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109210022 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091023139 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094586658 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113089758 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09426519 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091509666 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114359193 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093327213 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090084616 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090541466 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106724869 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091006431 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094792989 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111623464 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089769162 seconds)
  done (took 2.514714035 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143594594 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12290455 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096792901 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099060834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111188575 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098172349 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099866343 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.115403575 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092389152 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094914192 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101104934 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11424558 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096408878 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092451252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113933038 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116679123 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092474677 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112562328 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116675222 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113418824 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098646955 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09514577 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112949763 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096696214 seconds)
  done (took 3.425937387 seconds)
done (took 22.595486274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149702647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100991886 seconds)
  done (took 1.033282403 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165627364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183658827 seconds)
  done (took 1.131444106 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111979981 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089033313 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137157008 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103270248 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090328055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106179712 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11527577 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107601558 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09047147 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090763928 seconds)
  done (took 1.829547425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096174701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095841154 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120853345 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167303698 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118224214 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093013113 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094991933 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110716893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096393788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089871804 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111999646 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108913836 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095595482 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126689977 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095303362 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094627102 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116263492 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093442051 seconds)
  done (took 2.715912364 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091958793 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092340949 seconds)
  done (took 0.974408639 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0953727 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091015442 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092056947 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108899046 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090600536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089195855 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106654325 seconds)
  done (took 1.464432693 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.526958044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.235961097 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37162526 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072256152 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12372404 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.446099766 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105701444 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0718257 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091004474 seconds)
  done (took 2.870612027 seconds)
done (took 12.806100905 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092295626 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241479981 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633922754 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111607124 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089355843 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159823084 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.318202316 seconds)
done (took 2.444227845 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350147866 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164930257 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083352083 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090183191 seconds)
  done (took 1.48257008 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082628918 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097915372 seconds)
  done (took 0.982166959 seconds)
done (took 3.267339737 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090741498 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088045908 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088086452 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105213314 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.121140603 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088190195 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109564457 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088119623 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089021484 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.087243432 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.107229728 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088924163 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087502945 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107220634 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088249661 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089313991 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088582849 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105295944 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08911667 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087804288 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.104996338 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087710329 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087459581 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087181413 seconds)
  done (took 3.093330098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112083969 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090844144 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110557114 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093876025 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093805913 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110809816 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093875525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090210118 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110518342 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090427537 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092448783 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092426196 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107145561 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093683166 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08967989 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.11016658 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093828821 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09028616 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10759513 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093687283 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093162389 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108067914 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09313347 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092698534 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110274536 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094336183 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08986638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107633606 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093440777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093868864 seconds)
  done (took 3.744402146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097355969 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085679313 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090162909 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115558033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086555512 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088390164 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103373048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09114839 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090097137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087843641 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10942558 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090041025 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088652985 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106550914 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090642498 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0935149 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098126042 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107266186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090167887 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089753751 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109563224 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089755623 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090783249 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088122558 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10804254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08922235 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08912497 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10651907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091807847 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090051315 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091837152 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110257787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09033288 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100253719 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109643344 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090090443 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094433178 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103432217 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091897625 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087321458 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085794005 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107032776 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089420655 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094503792 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106587921 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089782521 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089240892 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089432619 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106960071 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09183813 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085399405 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105912955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091606576 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090590586 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091041 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103394513 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090654021 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086491448 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106914975 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088910888 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086330222 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085402352 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111436838 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091018482 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104369203 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112133377 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089428344 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089926621 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10787568 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095748704 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091088364 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117118915 seconds)
  done (took 7.701558943 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114928872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097783657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10934061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090223709 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090066697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088565184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112858366 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090246904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090506263 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114519303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090786311 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089922958 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107568226 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091735402 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089731817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091646782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112998215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09011759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088914888 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108298341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090411943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093885582 seconds)
  done (took 2.952663266 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240727345 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096506226 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138117256 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120871202 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10797201 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120095776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09519478 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095417802 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111923019 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099245677 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099596462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111602552 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108168269 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099223565 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117739446 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1012348 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110707976 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101112036 seconds)
  done (took 2.886100963 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106102264 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092274575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153129467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093602151 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09124794 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111268728 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097387354 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110068347 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110348606 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093004984 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098468468 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11007612 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092576213 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091766876 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0914181 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110168137 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09275831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091874162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116428687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097446722 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096223135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116838215 seconds)
  done (took 3.077820709 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10958013 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091044944 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127609313 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096008979 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090662991 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090986695 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116000171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09171019 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098509621 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111065097 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092264648 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09114069 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124168062 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09331086 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096773234 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110103965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091911002 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092162274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109322032 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091313863 seconds)
  done (took 2.82885362 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196999576 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124429337 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107723092 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116089237 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12604084 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107765569 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134175815 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10864074 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108426093 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136295102 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11051985 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107575276 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132998673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11252694 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125264142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116145044 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115408074 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133627598 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107736435 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124990018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119051422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1076511 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133664334 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107181252 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107017199 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125650071 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1078327 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129856631 seconds)
  done (took 4.2087627 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092147455 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090523192 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089499327 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107640217 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091777624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090376563 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08865627 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108958747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091127587 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089383567 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108672899 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090403531 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09044696 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089949766 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107478201 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092470768 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090564297 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107430181 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089601267 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091143187 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088874684 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107899632 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090491291 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090224911 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089903914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108252248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091354877 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08998712 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107345262 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091417115 seconds)
  done (took 3.6682502 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106112668 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100615916 seconds)
  done (took 1.026638799 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100998362 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103696032 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089184861 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10889963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097620466 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091284029 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117793036 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097673315 seconds)
  done (took 1.62727457 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168615955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.188699526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094837322 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120368828 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168953496 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180996854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129745303 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115645815 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090174209 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083883444 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182386608 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082793125 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110806524 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089658603 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090590725 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117428304 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092618077 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100216922 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116730424 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094409477 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097216255 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114249936 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095357322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102157212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104294689 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095657113 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094535105 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120470895 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088555446 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093433421 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107423362 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093329652 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09523622 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094901156 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111116352 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169262968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119759102 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089695338 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092475344 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116779686 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124256181 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090569723 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113407132 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091226226 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093547554 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114414846 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09624718 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091373963 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102526229 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089042238 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094138724 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105479527 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092598859 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093173364 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109661158 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099657516 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094265772 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087809483 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108669774 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088764676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090470341 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106528547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094584703 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093517305 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111145805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093606435 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089891773 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110615741 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094327813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093222999 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108901666 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107222176 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093280076 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114284189 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097685683 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092619478 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106733127 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098122264 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091811041 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110558934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096248637 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121831522 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093026453 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107417729 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08895279 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097121323 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112438073 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096239457 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085577235 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119332529 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094110702 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092415794 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103404377 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092820918 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088019534 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112630645 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086251856 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092740426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090091874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11475826 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097007499 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090019531 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112834197 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096836857 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096850216 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109635119 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156226868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10844415 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088697561 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093621062 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115422454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087164241 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09216816 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090033374 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108718978 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08792744 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095426003 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110074312 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093736506 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096474617 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113310674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094919784 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093176217 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109700397 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089629013 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096335236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100419859 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113078624 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093690998 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092064499 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111754573 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092777716 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095005842 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.1084545 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09849405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089181364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.109289307 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093996565 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096082795 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111334874 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089154976 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090940533 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092085302 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111900577 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09585749 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093042548 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106806541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085325992 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092962905 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106725776 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093223875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10041595 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107479743 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095043193 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089117952 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119565801 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090267795 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096649076 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093978847 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117342652 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097909463 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084112012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110026413 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095301857 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093079055 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10749328 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093587396 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091964884 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.116980604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087800697 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095726771 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083826625 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109102475 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097732166 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093522819 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.113379956 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088498078 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130044978 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121949213 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098243155 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091697898 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111041584 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097039179 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090927817 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115303252 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099536873 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09674812 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107796793 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091275094 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09785092 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088971344 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113870937 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092974776 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093580247 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103984452 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095319734 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085003257 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.114414817 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095548865 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096350136 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115490083 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095636604 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091505617 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101049156 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10845352 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096480172 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085327564 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116872082 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103370584 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099337462 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117061304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095503311 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09040794 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.112054598 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102520282 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095068147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11099341 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094790614 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087164833 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089469875 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116654835 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09709615 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089335952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.110616472 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097963397 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095780413 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109232974 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087649452 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099021109 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115362108 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100493506 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094377213 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088763524 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110322484 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100341438 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086262305 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108799516 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094692186 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096841063 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.112295001 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094481289 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095560697 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116576496 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097211433 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095233703 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090181906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12192736 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091024072 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091113295 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108731416 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096347972 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086689731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112640446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094647104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08985142 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108655182 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097985507 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098660343 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117281005 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092815932 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098059439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098610278 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120014772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091675517 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107045338 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108366017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088011544 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089118324 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105319652 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09716432 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089364545 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117335718 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093302039 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09299677 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09659581 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116128227 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091119475 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098926992 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123910374 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087884098 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087031447 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110994663 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094082694 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089387297 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109071501 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09483491 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094315256 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117236507 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096336837 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091317154 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112287514 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100460382 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090745775 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118635714 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099527416 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098615393 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088917976 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116924356 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090989914 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096902614 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107972056 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093705809 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092719579 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112917328 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090677761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091438298 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108513331 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087254367 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09092087 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118537006 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092859672 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098461303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092270145 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112411088 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090255286 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090268228 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.118586541 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092684645 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100272646 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.114791333 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087744089 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086994565 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116813801 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095228614 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099174584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089775606 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.118244332 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101132681 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097695325 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.113389064 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102427711 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102109452 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119092799 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099812695 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087265708 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109890232 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099007323 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093727855 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095416375 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115307285 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087848685 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095018492 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119751746 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095705692 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091183632 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105786594 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095823704 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098720718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.116660345 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098699491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095966455 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094450009 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109789713 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097978778 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099432003 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113527831 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100921652 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094618014 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116703079 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09175774 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099631566 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114369587 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088979339 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088601001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090296524 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.119941119 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08885405 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098212305 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118058749 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092485223 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092906092 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117239018 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09096479 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096828755 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117117017 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092998701 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103713063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094506953 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111894671 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097986074 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099198149 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107047512 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09380062 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092771021 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118771857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093813306 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09906834 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112950494 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100018674 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096086528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098280259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.118687357 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100173593 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087928636 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120591595 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098275844 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095735806 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110812112 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093596297 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089343409 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11222213 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100920391 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09165579 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101523431 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120481431 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092529697 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091420843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119687539 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095105558 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101429014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110434414 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097005774 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088308719 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115937946 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094880923 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10125987 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109466232 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090108199 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101251374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09896109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119284383 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097434241 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100004026 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107407045 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089970102 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096786539 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11045785 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10368172 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096633976 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110709219 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093986821 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096181883 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095256408 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120341096 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089990321 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090093995 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114435313 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097255663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091778961 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108323889 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099431501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093652518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115414976 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093936414 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089121867 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112671958 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101687001 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091860932 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08945755 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112756802 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100956792 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093548487 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110994561 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088663658 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09960757 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116454602 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101548927 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09145092 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114518741 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093695862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096636158 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.120629945 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093410573 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093500268 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111829154 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100542963 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099858776 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087528446 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112712493 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105073881 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098712901 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115970052 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097398869 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094026368 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12190414 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102912251 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095777275 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106875752 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090922898 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09317697 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088407554 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116760315 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100357792 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093180405 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112819579 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098265091 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097978457 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.116906788 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097966341 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089152994 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120730514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093376581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097388351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088209259 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108855437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097243942 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099184669 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113114887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095862628 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095368014 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11766827 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092183099 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09310424 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097658627 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120153061 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100939957 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09406205 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11257312 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100076598 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103687569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.115855906 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094209207 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101510696 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.120385933 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095703692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094240347 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11746675 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103725854 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096593537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12040047 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093561234 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093217047 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100339617 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121689833 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104707987 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092104995 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108813607 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0991918 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09151247 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109286616 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099886004 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101365635 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.12250905 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095252067 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091202371 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121918415 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101246024 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09382358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111920552 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094690104 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097867365 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09279206 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118666798 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092133011 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101179612 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121867537 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100679575 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10219823 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108508829 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101201682 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095846887 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.122552071 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096870561 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089127381 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088065306 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117204865 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102062714 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099967837 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.117962065 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098984804 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099406824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11518143 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096673415 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092698747 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101270229 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.123277709 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096577124 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096777933 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114733606 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096504344 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096921925 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121519902 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103219243 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095860402 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124653189 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102798138 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094354998 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111986916 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097212859 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097637269 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094829996 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119945073 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092302043 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089707608 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119972322 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102472253 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094890154 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122741783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103185912 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093416784 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117148876 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10353676 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100793379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097062077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11697223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098081301 seconds)
  done (took 61.51598804 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148795106 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103578492 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117728467 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098531379 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114812675 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119366655 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098768162 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098124519 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119134575 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107604539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097944895 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115915662 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113338712 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118095576 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135467031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107865886 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117066351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10025408 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097149116 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098197918 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131971213 seconds)
  done (took 3.229232758 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118757096 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11017273 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128777447 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112584065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104246202 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129883669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108272658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127458851 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111067407 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104949719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131758928 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108511396 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12477713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107721721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105596276 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124757234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111713065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105250052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130300791 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109653786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105791288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128504561 seconds)
  done (took 3.41842883 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132373968 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100702736 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095386334 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118076329 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101313111 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096364635 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121354088 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098290707 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106613744 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092572017 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110447892 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093712389 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096415045 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118789854 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09351433 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097681057 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126187437 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102538935 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102410946 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096927948 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110009118 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097900505 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097837792 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10909901 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104862393 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10226098 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097189913 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12165692 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09007289 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101843368 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117204884 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093001997 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089699683 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088982237 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109439271 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101034426 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099823085 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118266464 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099868596 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089067028 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097349739 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122567772 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089588004 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098134654 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117802055 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093126199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100805794 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118053478 seconds)
  done (took 5.849437522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131505316 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163833624 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.334842711 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136359411 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135054617 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10791402 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099563659 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136273648 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098791462 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122548307 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114323521 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110743205 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125453229 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105710394 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101392934 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125246974 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104957648 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099398112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125896182 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100675901 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104983003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123014997 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11072676 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130605555 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104757261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100439416 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120150372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10607219 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110648103 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126759365 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104660163 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105279596 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131036813 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103227974 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099521029 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123200331 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113502353 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101818265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123036755 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099920455 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100831379 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124946983 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102965611 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112538777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122535451 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10288587 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100604802 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120027709 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111926232 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121609179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108344264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111877622 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124106556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102865136 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10441892 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132110275 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102754829 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100041285 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123287284 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11128102 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098201802 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125393871 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111593977 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101466064 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127869549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111129176 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123493296 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104901817 seconds)
  done (took 8.974964028 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136703864 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106168263 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133149772 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114300124 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105060783 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126506287 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105266905 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104765385 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127883955 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11194743 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124929534 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224285385 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124568386 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110656379 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105184816 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129025597 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106131824 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105251873 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129292654 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106461395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126005711 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114279459 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106634081 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133697261 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117788991 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102761246 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126951059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106747905 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133898858 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106326508 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116749482 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126431207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106118529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114052142 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141056854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105885723 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099242059 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128368826 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107274403 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125669547 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103565905 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114593309 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125657752 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103942663 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10596166 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126067263 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115287238 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116453423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131133195 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110929515 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.12614622 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115318568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105665181 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127086928 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115334184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140936114 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114686456 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113188821 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126685962 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115512575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113043143 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14247679 seconds)
  done (took 8.274691946 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104792062 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099656727 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098711586 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120314467 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10008851 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099527328 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098162938 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120327038 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101232585 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098321595 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119427866 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099764719 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099165093 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099567559 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119848023 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099613968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098282302 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118828529 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100730142 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099917853 seconds)
  done (took 2.979877927 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113327049 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115981773 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122406656 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108600996 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10206777 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12656893 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10287964 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101789662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101424931 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123134899 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109866442 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107974615 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123420342 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10789558 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129171688 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108365532 seconds)
  done (took 2.692642875 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124826256 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11644204 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.20992894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10319206 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124605251 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109926249 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101557472 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125075331 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101726661 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108240537 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126986011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105720639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101624664 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102235887 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124504769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105663273 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100547351 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126180868 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102935569 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214804149 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106205541 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103388305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12610329 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106298046 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10254682 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128748444 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108908466 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101117732 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124033202 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103878138 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104357999 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128180269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102185987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106670351 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102847062 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124797007 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102299845 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102764834 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126161226 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103046761 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103304145 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125022218 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.1039667 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10473029 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.1215655 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104294158 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101003133 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105889455 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124815163 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106219784 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101764163 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129777413 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107439344 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110224616 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129433585 seconds)
  done (took 7.220847113 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117787934 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103758433 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132977276 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102266937 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103008538 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102878839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124882299 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105008623 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102759012 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122262878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105308321 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103972496 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122596016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105326287 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10404056 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102790213 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122158775 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103884128 seconds)
  done (took 2.878204602 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112132057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101839285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106262435 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123212548 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102717337 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101875322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121517536 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102459187 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101336959 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102119362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124195394 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102151968 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100784652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123004731 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103076615 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102877336 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122536536 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103178213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101438694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100743503 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123841505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102710781 seconds)
  done (took 3.280561231 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118417625 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213266657 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108326967 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221037867 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.0992167 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096328036 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.13269786 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099209689 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13623752 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098738918 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098741523 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118374056 seconds)
  done (took 2.436120228 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134424266 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139970954 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124834348 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1049138 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111629197 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128860479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10770331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106367444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137922513 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117804463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126824238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117271514 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115383937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135513627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11181561 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133374142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108252344 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107975362 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123786201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122495548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106951864 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13630935 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107372514 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10660124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128898109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115624209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135770354 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119027144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107138642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137222152 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11252703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106621592 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136372594 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117946675 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123239922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115562994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106466513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1443922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112362469 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134990607 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104881262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111978509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135400369 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11307948 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114879956 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129405044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11209341 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128942412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10808803 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127793898 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133469957 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115785902 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132798435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116573356 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114632085 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149340719 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117249585 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13710906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113321378 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137751161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116408277 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112340324 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137394349 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119284667 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132899533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117922839 seconds)
  done (took 8.913335419 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14725467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103408384 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12893088 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119139156 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1140034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129165566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107634119 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127821566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110300756 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104879906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17030659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107821438 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116109258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138002936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108675389 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129735981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109435681 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115377289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125933679 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130064032 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1073478 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138133555 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115997179 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136311845 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12080871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132776828 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10878151 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107637094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129465689 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109150139 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111984979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129179607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116832237 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104518686 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13745621 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108311579 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10693603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134088699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108433285 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13252951 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117307872 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122354576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129470138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107461458 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138630119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108753942 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107967786 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127389691 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109244914 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104781539 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139317578 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119766009 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118849903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137125226 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107454644 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128316341 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109804245 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107670308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129225343 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113515021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115657224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130103719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129265388 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129865908 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109620803 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115388667 seconds)
  done (took 8.861535514 seconds)
done (took 168.143901318 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179950068 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212905076 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196189239 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157569753 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094591613 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151854944 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128146224 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.198063415 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095322472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094278178 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093304237 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120265224 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162273723 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093997391 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117050205 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098550983 seconds)
  done (took 3.093355855 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.188320144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332834792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109570693 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120424746 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101261756 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098168173 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12076128 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101780975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09930524 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.1282754 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100065335 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095313711 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126740487 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096197129 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099159374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120412418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107792765 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099455836 seconds)
  done (took 3.156265812 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124870072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144301974 seconds)
  done (took 1.181894357 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135187792 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.2137527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.283346303 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168821469 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120053226 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140823076 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149307893 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134125304 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189325805 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134924877 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112778563 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09692378 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146905174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105346762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137076492 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098210463 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128039115 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135218392 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114439891 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100963195 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144931379 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103586869 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103925325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13579186 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179893416 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133447869 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103428003 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102896758 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124410235 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11409996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105259523 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139869493 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111980378 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178965155 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102542567 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175423799 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105265601 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122126239 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113017552 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098340224 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124547419 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10302345 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133506408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098715451 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102938912 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127894549 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104535859 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103209849 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129242949 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107929152 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106646339 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12844776 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173262407 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108692081 seconds)
  done (took 7.908151522 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.878463857 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140931657 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09865749 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.000044734 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144480108 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1139634 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.866133773 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14593003 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250732152 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.890562147 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114496077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108264682 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259322879 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258856572 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.289818794 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360560318 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.726217752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11339526 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128362212 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161960975 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107914411 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142882307 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121283093 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521405428 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100845974 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09874971 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129617464 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108783963 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176595044 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100244448 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102986047 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195584018 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290722502 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208971744 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100097895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121539157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100061055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184648358 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270603011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220200986 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17034379 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118848394 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099457097 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106369091 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141532156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096595013 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177169888 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188556118 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166873765 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126209494 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109119948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109660768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129022005 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.173380225 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098231415 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35805703 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361026729 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12030687 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110605246 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112415347 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264739128 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123422965 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237652521 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127345973 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214574321 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120829958 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839563778 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16118071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121251542 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105262213 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107195759 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128849783 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107214813 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188773214 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479617395 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132117837 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105254043 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098490169 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233580785 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120968768 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10132662 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179192596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102181701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109047218 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134498727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109291602 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187275856 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268332677 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110066314 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109163992 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128856633 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113585099 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099753188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23233126 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227205749 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174015459 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228988674 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1080052 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178417356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184264686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106206516 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186844932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10767404 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132325834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108398777 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224055257 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152994412 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10238828 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106800654 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129972897 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136655808 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105033062 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132178815 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185567822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.540257174 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183708345 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096390769 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127181561 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109882324 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180532777 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108366722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263074943 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132121013 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161861461 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130744744 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099162516 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108394552 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177646598 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129653844 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109716971 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107046772 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132388082 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257835566 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220201352 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131956006 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250549529 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176100556 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128572244 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19057687 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110237394 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185959957 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110928276 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106942529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123981251 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832314622 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114264235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129669332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106688164 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186670968 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123543184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10453149 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099454006 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120049911 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813006741 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107002123 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097995604 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123007677 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107003016 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108149312 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131398578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106371299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176579565 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2420644 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109583427 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130341433 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101253301 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177547057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102823435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100316155 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123004283 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102549524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110344118 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128108085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103693212 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18898337 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153091129 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251251891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.635861631 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101352974 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10205213 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239398486 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122792215 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329682 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109134541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234372115 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182530826 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096671328 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381382228 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160864289 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209227423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103666761 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18941881 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098083321 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131697752 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154442709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123749125 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107722138 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176798069 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113166534 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13349324 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.287990219 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101736629 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250726626 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098871739 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187109078 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102181442 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12782212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325915264 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1013861 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116099587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17826797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104076661 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124208116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.676902456 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102404999 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111823647 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129319503 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234362575 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183058981 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110328657 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109798303 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132702733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177329903 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210575622 seconds)
  done (took 47.602621268 seconds)
done (took 63.852250726 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269559078 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177178732 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281576805 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178138336 seconds)
  done (took 1.91628409 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.277266901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16072508 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.261892344 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098178821 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.261106287 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097134053 seconds)
  done (took 2.095939461 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.184238761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169063457 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146944297 seconds)
  done (took 1.444491749 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203345991 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2170097 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327512246 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233123698 seconds)
  done (took 2.00963801 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.295253227 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118488627 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124192325 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.236667609 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254310472 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210398899 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126615104 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177802585 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128830434 seconds)
  done (took 2.661108881 seconds)
done (took 11.068506226 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.411866494 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.281505248 seconds)
    (3/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.354157863 seconds)
    (4/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.202155724 seconds)
    (5/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.397907442 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.141199239 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.238077517 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111576212 seconds)
    (9/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.288856118 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.303699889 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.220240477 seconds)
    (12/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109278859 seconds)
    (13/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.26052306 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125491812 seconds)
    (15/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.274258383 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.311607503 seconds)
    (17/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.186913701 seconds)
    (18/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.287914903 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.309143271 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086515894 seconds)
    (21/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129370161 seconds)
    (22/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.249189688 seconds)
    (23/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079207576 seconds)
    (24/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.37380609 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195033889 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.214439349 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138276843 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152410477 seconds)
    (29/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175021361 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.24496962 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.314007197 seconds)
    (32/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10988437 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087173335 seconds)
    (34/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.231586311 seconds)
    (35/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.188056274 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155365212 seconds)
    (37/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.175365063 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.243412835 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112942268 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.18590785 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133736669 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100769635 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122717297 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220043854 seconds)
    (45/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.135077127 seconds)
    (46/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.143635883 seconds)
    (47/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.161052872 seconds)
    (48/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078182328 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112099494 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.228056945 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.131850584 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.264443003 seconds)
    (53/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.146874433 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081258513 seconds)
    (55/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.165986095 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.150070383 seconds)
    (57/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117816175 seconds)
    (58/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.159043406 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183041579 seconds)
    (60/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081699297 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102449338 seconds)
    (62/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.157587693 seconds)
    (63/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127955737 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152837806 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.191854687 seconds)
    (66/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154336786 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.22126005 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086548037 seconds)
    (69/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085685194 seconds)
    (70/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.147085046 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.130460339 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124327932 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111414783 seconds)
    (74/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134025992 seconds)
    (75/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08648257 seconds)
    (76/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087173033 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103225112 seconds)
    (78/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.111448348 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108571981 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103668582 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128638321 seconds)
    (82/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111499163 seconds)
    (83/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142200388 seconds)
    (84/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089405784 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143929893 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108017746 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130867292 seconds)
    (88/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.141464648 seconds)
    (89/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082459642 seconds)
    (90/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.181875563 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099755998 seconds)
    (92/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110402492 seconds)
    (93/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.144941525 seconds)
    (94/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103397374 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135046017 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101465913 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110053879 seconds)
    (98/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.177010852 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104761271 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119560245 seconds)
    (101/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077793538 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.151140504 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087869351 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116123963 seconds)
    (105/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.111625477 seconds)
    (106/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.145600942 seconds)
    (107/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11291737 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102645315 seconds)
    (109/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.201156673 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.08024998 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084294216 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102130816 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.127719826 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081597592 seconds)
    (115/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.135902334 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125812056 seconds)
    (117/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080877218 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109230666 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085324425 seconds)
    (120/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104383377 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104735017 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082642913 seconds)
    (123/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083051102 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124010383 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08710075 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10329791 seconds)
    (127/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082771764 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084542755 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108143032 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.133499251 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086427552 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.125297115 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086794121 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109544883 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080366444 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128296479 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125092909 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123994956 seconds)
    (139/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081781255 seconds)
    (140/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.131111139 seconds)
    (141/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085729914 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11142229 seconds)
    (143/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084340985 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156625987 seconds)
    (145/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080575068 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103551646 seconds)
    (147/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086035881 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126606187 seconds)
    (149/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082690699 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079108781 seconds)
    (151/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081831761 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082088123 seconds)
    (153/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102731757 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.138139777 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07983269 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082092818 seconds)
    (157/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136135291 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086810528 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103046371 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122842485 seconds)
    (161/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083385959 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110897482 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087094718 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14715084 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101909076 seconds)
    (166/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081391709 seconds)
    (167/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109490459 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101928786 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094603625 seconds)
    (170/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085971226 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104834531 seconds)
    (172/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082151973 seconds)
    (173/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136043438 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102003189 seconds)
    (175/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081598693 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131944376 seconds)
    (177/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082272991 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123766117 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086393055 seconds)
    (180/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132597577 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087472582 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110468533 seconds)
    (183/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110898634 seconds)
    (184/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.108688179 seconds)
    (185/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083308521 seconds)
    (186/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080401329 seconds)
    (187/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079859382 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100816766 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130044895 seconds)
    (190/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082257517 seconds)
    (191/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110172834 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126933951 seconds)
  done (took 27.332474482 seconds)
done (took 28.281410381 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231855095 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13041144 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111715682 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110186174 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232800898 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119388532 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153060175 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114421678 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122915733 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136638976 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102706973 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123236531 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135718895 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20517225 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139153405 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104512836 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102586159 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146435776 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12723031 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127526634 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234804714 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103566803 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146675954 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103585594 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233901508 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105514036 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110938628 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.13698016 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12528407 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112844396 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137125469 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103841289 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128705405 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149374556 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102936196 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112433179 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102286908 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111075693 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113680392 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113896307 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148369443 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113681337 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111546614 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127552284 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113984512 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112162468 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102316737 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140662794 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101763189 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111393541 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129213401 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128163118 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110572197 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124318534 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101905021 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104232486 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146617002 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10447674 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124541534 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12668739 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105687087 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103738265 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113873982 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126600056 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112400077 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10339742 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135053647 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116019395 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110953115 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129009334 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104426832 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110905894 seconds)
done (took 10.099336824 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113300909 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147002594 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.23244441 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.234957592 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131687222 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145958717 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117726292 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127065069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141355222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12311022 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140493992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159793916 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.238110333 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120322814 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119271326 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140074709 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114771437 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111416363 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236725072 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127393404 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153089682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119263506 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154424861 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12149134 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107231548 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165003204 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111686773 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115110745 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130674947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117058971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128593181 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130403621 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11188273 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125545254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.14811135 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118726199 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119762636 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138943377 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109040744 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107275851 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139081088 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125901985 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107436578 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143872154 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115014915 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121782906 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139384415 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120371604 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107315941 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138399553 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109409204 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131935631 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144296944 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124574273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118687566 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144137037 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120781605 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119647383 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134611315 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121018509 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108037746 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131050725 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109321646 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129947617 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134910817 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120047746 seconds)
  done (took 9.792770934 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.13142283 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137109943 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140226337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119155397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112282935 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124561201 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102629122 seconds)
  done (took 1.862457884 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109712039 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.241728387 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217162105 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.2420694 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.24235184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.253341531 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127123497 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102164776 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165070526 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113883359 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245571535 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271944884 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113236646 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117467095 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.247478504 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12705283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.220640661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128829269 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118037464 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.247537546 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119889507 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15899032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116670779 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105068922 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239118734 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104493429 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.292717918 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14764105 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113177352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118232257 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142795298 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18319308 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240811984 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118674076 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13637976 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218490012 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.240571735 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116859104 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.257068312 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134591299 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.214266913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144303013 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120010078 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119291278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144121706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.205011509 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148123014 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118456336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116244457 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.24949988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139764349 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216992959 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.14112354 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118374715 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114216068 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145337907 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125923653 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118740507 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252359894 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119406751 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244593412 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246464105 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244689213 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24474621 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128917311 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245084107 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205493993 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142773608 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113039247 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118575406 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248560107 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116457634 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.142238638 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236601826 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121635929 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.249930346 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.221036508 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14250428 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117202659 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107720285 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.143885785 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104090335 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.239168863 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117446226 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115759659 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14841845 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117490107 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144340549 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110423916 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126860472 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.14203218 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117069786 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123531446 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14216263 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121937505 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.251520528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114698142 seconds)
  done (took 17.045171808 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111715506 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105572431 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109846067 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13000576 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106458257 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105914063 seconds)
  done (took 1.690140863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147036792 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119164398 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152006348 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121031394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167292472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250904177 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258975381 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111581165 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165052673 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130494221 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253201776 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.25465121 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254377363 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123979216 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258052831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121765088 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262242384 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117298655 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127028927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14237616 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119161388 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121933828 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142850404 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245011785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120815756 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.1211213 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138688741 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127927408 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126068773 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.157895015 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122554843 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11856277 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136244273 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113272801 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258713042 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110788945 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140837887 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122008039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121069685 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144843801 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232236288 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142334578 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125773891 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12215804 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140863988 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111973382 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122239339 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138431216 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259097409 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121441904 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122501497 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145828905 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120170344 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121000917 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139320711 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114173134 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120959224 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259654255 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147584235 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111856717 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.1194728 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145015878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113950141 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122675175 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145817426 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121858914 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111940839 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144872585 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117531126 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11949819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146983182 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120026949 seconds)
  done (took 11.818854877 seconds)
done (took 43.197399563 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.532013871 seconds)
  done (took 2.546505899 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.950269634 seconds)
  done (took 1.967085684 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.413115707 seconds)
  done (took 18.463657547 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.439595312 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464555292 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.141338916 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149405559 seconds)
  done (took 3.211327447 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.832725858 seconds)
  done (took 1.87158135 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.30764355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264474966 seconds)
  done (took 1.593708537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720016524 seconds)
  done (took 1.754379175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.543948446 seconds)
  done (took 2.564878944 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293832697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242388445 seconds)
  done (took 1.57420385 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.650757678 seconds)
  done (took 1.68588999 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.164458626 seconds)
  done (took 20.205271215 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266001482 seconds)
  done (took 1.305437484 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288278258 seconds)
  done (took 1.330649628 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.4552385 seconds)
  done (took 4.49834458 seconds)
done (took 65.601592789 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12115417 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118132665 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117465548 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140214869 seconds)
  done (took 1.526900374 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128963494 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119267259 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121328665 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142990656 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124488441 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117824737 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142905828 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121226238 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117074751 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145549365 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119642742 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116798048 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146466074 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118980434 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116406747 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14639937 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122495989 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119288913 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145027088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120392101 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119385933 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144531423 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123302467 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121435416 seconds)
  done (took 4.103387392 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120167429 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109922821 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11075651 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132556924 seconds)
  done (took 1.519732638 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132848706 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131264919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152933249 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127714181 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131354618 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154011327 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117880219 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115328297 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141450822 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127437535 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133876499 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156450187 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130953252 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119597862 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154357208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11274714 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119111905 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155435878 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12598807 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127451033 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143964488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125179191 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122610034 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15239465 seconds)
  done (took 4.252939386 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199016864 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130626386 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174702895 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162915197 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177392172 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116506424 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146266769 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14985139 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125506431 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119582055 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147350954 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163379065 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149366644 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120182796 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118784706 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148654737 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130753162 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123762126 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191290659 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122860523 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149905179 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131127752 seconds)
  done (took 4.24458065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127247731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109629171 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104950548 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136334058 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121622565 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.11188771 seconds)
  done (took 1.763821514 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113546594 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103868502 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103816522 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128062274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107091418 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103296223 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103003164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129499121 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103228885 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102951505 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129493041 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102884658 seconds)
  done (took 2.382350362 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.339287157 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107741881 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135030291 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110223621 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.138749777 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.108880427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.11781101 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.133806518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.237875852 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.131656811 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.107000471 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.219705353 seconds)
  done (took 2.939821145 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210197087 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146407328 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255798018 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.684975511 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163402837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19024101 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282639559 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189198947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206355269 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137370788 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215872937 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16145729 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183732632 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185524261 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165969413 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159846587 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192581783 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23467627 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14213414 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237691555 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157160061 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201160479 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214228505 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150117943 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138294567 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188852433 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117674936 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154169543 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168779349 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194519228 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202737543 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150235601 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141849441 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217697073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261252415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206612694 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271490089 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133708125 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198127217 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190791335 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259221363 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167306859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218180361 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154740009 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131436896 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210987877 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179575266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183432115 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158263435 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144841992 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213043045 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181792116 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197905216 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136311947 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321182692 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161033164 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14459148 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252484788 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213553125 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200633053 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20675465 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123067175 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20153776 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218159333 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214860081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168621758 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164166758 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153542519 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164800584 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231321655 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209900148 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159818962 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237417817 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158937743 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172116611 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196276985 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154974601 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232774676 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199162688 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120024144 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151355087 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161629908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128670987 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.215696732 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121657151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242744576 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131748721 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341349074 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207875803 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156264661 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188707019 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160733927 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190018055 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147364056 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130069332 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143539088 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187538076 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158993995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128328279 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182067063 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138977734 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153137283 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152373655 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148802936 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169439341 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134349887 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192185809 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19513171 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132056427 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20219344 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149289748 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187358015 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1711409 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220384589 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130930282 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158098557 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21937761 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196024348 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137412613 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202841656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224209686 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149804964 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16031015 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165421707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221077614 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142474578 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22715066 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137366145 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162929192 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141041173 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200111416 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160256341 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185757944 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127248639 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192714586 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218655426 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127491525 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139616723 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207641737 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132509647 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152413828 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137524177 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135816551 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.168919753 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148127096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166288347 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155203644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191925033 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164322846 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186148449 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134450324 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200589221 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13096348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196253451 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148447971 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.144783282 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17588806 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224215315 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128252237 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209233131 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1615265 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209551961 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198571784 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129881876 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211881576 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127054495 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120527921 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188557691 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196052751 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16478915 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215306825 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205048331 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165606977 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190177946 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148991709 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196823665 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.21051451 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156031296 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1691787 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171510771 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198230055 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120544343 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122236447 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154472482 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137300808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129078993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163682031 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209322492 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164959577 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203032643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19298822 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138063702 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21579595 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125576776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159045977 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202182443 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137907227 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214001438 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21892509 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177628874 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167293146 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162848702 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.146591213 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125923074 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132467924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188111541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135558653 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162854758 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141362488 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218783146 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19951823 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148277705 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217172209 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166434271 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225390432 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11912133 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189011647 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169273193 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19480647 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182926069 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158459381 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161235497 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220021626 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141229448 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22050651 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193955032 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178645589 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223253444 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163983044 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158051207 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147613007 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188389203 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137950843 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189072935 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145871687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129324301 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179366551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136796508 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167692656 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215081901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144934507 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205257522 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157185639 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199813051 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12473814 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169397476 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173002872 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173501606 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10707502 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197029351 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195534987 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176569765 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156125701 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201444249 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129944491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341638956 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188579038 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205432205 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134916875 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166792319 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170403549 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187657824 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190800082 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183949052 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167285721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208281858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199787789 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142525411 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158850176 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14917929 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177874853 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141163534 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178999695 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162192515 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169662519 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189013659 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163477104 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169621895 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204008114 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145857971 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177670082 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138947584 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252442925 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166890464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203669733 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189935103 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165545572 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210856631 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124246461 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125638785 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161604047 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184168265 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157319783 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177352435 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191450198 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209240564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174199881 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188478429 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140695241 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154990388 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166200174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17506965 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211077218 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135590887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137464236 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218199844 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128643625 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159947005 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160856623 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312994146 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14834 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200030379 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107983258 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310064363 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128267033 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159112796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162194482 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198401663 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.1333403 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184676355 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198629237 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139277743 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190024513 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134626504 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207170121 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210986114 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165859587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205290888 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173780539 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163318638 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188801705 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174674761 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174560524 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146919502 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185199094 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194520906 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205207247 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130537026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196179394 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169695806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19824729 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174507364 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166966472 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181228318 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156083472 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165368086 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166097873 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12403145 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188963793 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.166333062 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157322224 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17695494 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199734018 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129535502 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154605464 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147335592 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191993996 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140957215 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129135519 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214417267 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128878286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209334516 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239843699 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129946587 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193447271 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146775234 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130416706 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167509289 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143951466 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15861768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172426915 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207470549 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133522553 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204139549 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1683381 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192736494 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159549288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172899101 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262727571 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155328381 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191108962 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178440046 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196889469 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178164218 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174756959 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197490278 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150872664 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194546461 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147583841 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.248564332 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166046071 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19584752 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130572802 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170322706 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138905496 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160370224 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153195024 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193764193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143486406 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13585666 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195144395 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14457419 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17635227 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141525715 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229754645 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15251974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215039575 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216344354 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138502901 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20304692 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175878728 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156912457 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165088241 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200409324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14382365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180619356 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13368712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165245309 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213102358 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.154031237 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162009379 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201040709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168216098 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199559592 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135374522 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206804954 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141760171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203896787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127066716 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178567793 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172017653 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134302542 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155312153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171092416 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189503301 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16305286 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169792755 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174397208 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221614612 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123306337 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132207656 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313083316 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191424735 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194532893 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165447407 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136291384 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173982777 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158886655 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192902405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172582108 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129654096 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157295499 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144967909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184390224 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143366964 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195850958 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182390792 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190175469 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183957326 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162904753 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252334719 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171325805 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171463816 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145606453 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.610812737 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14002674 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161704696 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142940423 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209222533 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242863456 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162578692 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175709357 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135892603 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125556912 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158178159 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163325895 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179536891 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16774769 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175698736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.1048601 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141109334 seconds)
  done (took 86.15392497 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166200211 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149973543 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167058893 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222459366 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194468164 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29011899 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227400934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24612706 seconds)
  done (took 2.801512083 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125015353 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157158937 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141978049 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141732699 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109919387 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.48247408 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158162758 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121737625 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16167591 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150833027 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134743392 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568744667 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116484168 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143847924 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122270532 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133371276 seconds)
  done (took 4.097217441 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.629142627 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522854786 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.791325363 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.275604546 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259882177 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205464184 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743156097 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201991512 seconds)
  done (took 11.764691285 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.172622041 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159081775 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.45056867 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.306102268 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18487268 seconds)
  done (took 2.41524817 seconds)
done (took 130.998768284 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130318661 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12530379 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123059863 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153544126 seconds)
  done (took 1.66045981 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.201398971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092228591 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094529417 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119161204 seconds)
  done (took 1.645872046 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.468439221 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091916629 seconds)
  done (took 1.727845459 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159251083 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136656192 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168301091 seconds)
  done (took 1.61974898 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142359612 seconds)
  done (took 1.285937622 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130916795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129257281 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.269498934 seconds)
  done (took 1.677147724 seconds)
done (took 10.766391166 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12766504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926946157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431397033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134229662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712185063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426422859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.401059845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176213191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174322539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137075755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133100728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689888266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.411007153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874182616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.369582474 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.902008284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697528877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112918198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145093412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112903217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.379540802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135739967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112744806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112021511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71660443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422091736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111317826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.914697906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110497688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113670626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426346238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112161168 seconds)
  done (took 20.898264757 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118550283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169795798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146874341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11375681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115231599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139542698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123840145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124100313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203630246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110869709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159573921 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11082632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117030673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138875231 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137299495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11083667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138487497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114888867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120152281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112528797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161055672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110046948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112992002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140543231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111510585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132739868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138934014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124979211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110522955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142747827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116475401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111580694 seconds)
  done (took 5.296702177 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.167442068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178740207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149057331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149480716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188972547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114151691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224485679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151593843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204754671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111962086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133282965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137175126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153653542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112591039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164734451 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112082386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114365257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140258394 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119679018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113129337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160489764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111573053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112468188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140196612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112276285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134254011 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140623493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124651968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11041712 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143103803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117320972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112093827 seconds)
  done (took 5.620400521 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132489541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126890955 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133690879 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162691758 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12162332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12534965 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154956364 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1219363 seconds)
  done (took 2.24075961 seconds)
done (took 35.208180403 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.14643345 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131461539 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131425447 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154436205 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.225505513 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.150678749 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127973027 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118261383 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15456075 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134554122 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111424354 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148279398 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131001927 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122765509 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.25674539 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126810458 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262087337 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.258282376 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.11974633 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125787277 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.148827778 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232424224 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154377643 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120482112 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250254004 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115348489 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249686498 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122718985 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12132103 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111726219 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.259020069 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123392277 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.15024186 seconds)
  done (took 6.441820437 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.248730388 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.150600023 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.12301225 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120484036 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120550037 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149027179 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.249695792 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151451941 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119884784 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118994503 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148477559 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226342922 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156402924 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116184946 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122150213 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11090085 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.278592856 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121283668 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.142826206 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095651874 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115450766 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118818596 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.288712724 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.144937642 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120470642 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120079081 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123404098 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154850964 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122520336 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121173755 seconds)
  done (took 5.668369635 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133198656 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134785826 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138695527 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21990679 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149025566 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162415749 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140161194 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134876733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171243939 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115875006 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128514615 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180298449 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130633866 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124506736 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142386388 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132203493 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137441671 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144160044 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123454493 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131429242 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163108217 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132952686 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137508646 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151107702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114411174 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121756622 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152495523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125232833 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122115753 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128149796 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144674633 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119450454 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116208599 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178458347 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115980182 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155302291 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141692561 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127649009 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126738629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178543096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118331151 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115214568 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170109952 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169613231 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143348892 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127515453 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127628042 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127512975 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.142195678 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134034085 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156571686 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142927435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134794242 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112717854 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141523865 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123925905 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114547368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146515618 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130652006 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116054299 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167911084 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121612335 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125453423 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143905895 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127863794 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113270076 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112985334 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149514965 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141424508 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121568675 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180163979 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114588994 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12590476 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155327359 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125871696 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125758328 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141323594 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126535859 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125080852 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148431973 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129096543 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117338771 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117200873 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160709186 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135125069 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128034986 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154754163 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127202652 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117436593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14538948 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132454634 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11489314 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148215967 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129290732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114930077 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145883259 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129169769 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126286445 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111727243 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.171983982 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118168214 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112781285 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169366787 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118849946 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119275246 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152985974 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155945565 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114348081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154254879 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128833431 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113879978 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.150903227 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118886902 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113506024 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161351678 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131734018 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120902728 seconds)
  done (took 17.109472015 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.363286463 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342616455 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187969217 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430423416 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127909667 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274964679 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342215125 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.344914266 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114412172 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178438082 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177543255 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314320342 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114081477 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.173381286 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346785305 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.404837334 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174874553 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15161033 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180303201 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129441641 seconds)
  done (took 6.054986211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141403207 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149366642 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166650286 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143408385 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125048287 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16111423 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115129786 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136069542 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15472452 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125335273 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117829099 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159637959 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129102536 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130692901 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158548302 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148942982 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122259162 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148590815 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139657479 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11960135 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131173581 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140511312 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123901514 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16511689 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134462936 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12575508 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142171562 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121402279 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12085776 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.121717023 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149383548 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133621966 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120924164 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136567406 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127582598 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130090995 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149546874 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118199837 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119740949 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146016303 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131065876 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127828533 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122055282 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12938399 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134792496 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111566361 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12858089 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156167767 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109103551 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133935037 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15751549 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130004535 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12271128 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165523146 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122841861 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131567091 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154071741 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130574403 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119224618 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141257003 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114293675 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118380691 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123734145 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157356928 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126567681 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134457971 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158877295 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116061385 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118612343 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147977768 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119071672 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128977909 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163439265 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124929657 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121376852 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154996157 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12496806 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096046975 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124413381 seconds)
  done (took 11.780303816 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147270782 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125918242 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132444554 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180733854 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130119978 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120226688 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154751779 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135373181 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129163269 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162629431 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130605557 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128942049 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166164554 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126285323 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125114088 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161077171 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129133888 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152738275 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163324968 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142337819 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129358438 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149876674 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128758287 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125682897 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172848806 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12609365 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142013486 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160132536 seconds)
  done (took 5.174783784 seconds)
done (took 53.394963835 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.324123921 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.506320174 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.290732089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.290845644 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.298539384 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.307535502 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.305696025 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.289481683 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.67505951 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.255886175 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.293484899 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.291037386 seconds)
done (took 29.314407646 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.368003504 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.80746493 seconds)
    (2/2) benchmarking "String"...
    done (took 1.572996547 seconds)
  done (took 4.5563013 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.288263504 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.28516539 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.537912055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.281290281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.279853436 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.283213431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.283520444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.294109922 seconds)
  done (took 16.421789837 seconds)
done (took 26.813746846 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.319892693 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.470106726 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.525962027 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.258654774 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.28671906 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.290963447 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.28256469 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.299912239 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.287277479 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.2582937 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.681444556 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.54777727 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.282143286 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.654602458 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.267165624 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.309807921 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.281272897 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.529503386 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.283636202 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.319625336 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.258612579 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.259578059 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.330879247 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.280472653 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.282769724 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.284099371 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.287283652 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.280590383 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.475005949 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.281971107 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.309825699 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.280571675 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.276218986 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.283509956 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.280279507 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.310012552 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.472569884 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.288285165 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.265761857 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.298049549 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.472313759 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.293338863 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.2814311 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.307075768 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.260304686 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.291798722 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.264920989 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.40369076 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.304530871 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.304333127 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.337881222 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.649329048 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.29151476 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.305134838 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.282703087 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.514679248 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.283362876 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.316237221 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.306101502 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.3086221 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.29056369 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.290963197 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.338619307 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.281673165 seconds)
  done (took 148.685062413 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.281064702 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.278576184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276817523 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.337192408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282385731 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.282395229 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.278851338 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.28285914 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.277855835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.307905005 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.28163994 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.27792852 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.280943434 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23350054 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.288693652 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.295035045 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.281623458 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.289860081 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.294859077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.2830114 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.281303295 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.282646651 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.282114786 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.281363853 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.311759377 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.346510925 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.290898501 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.287733213 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.288661914 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.280473931 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.31101358 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.327650374 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836809914 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.129126721 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.29676917 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.283854831 seconds)
  done (took 82.98706993 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.284925309 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.28206329 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279243941 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.308383057 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.280933618 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.796612499 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791877742 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.235299244 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.390357904 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.439884045 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.430767219 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.277435534 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371208192 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.289717935 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278979115 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.297455565 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.306145093 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.283432399 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.283165263 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788908809 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.29103732 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.2766043 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.445539467 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.290881492 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312237517 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.670890946 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278534126 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309894928 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.606377457 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.322433029 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27767986 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.536853666 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.080009286 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384614129 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.283228369 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310568704 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.281762686 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.55536032 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279466169 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.281936508 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.284696821 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825561088 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.278138739 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783386074 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278558497 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.160763318 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.277414125 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.280511547 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.273167456 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.768383608 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.275894097 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.281358863 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.283227663 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278533526 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282128646 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.309272279 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.268734369 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.370319876 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.283347785 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.283569302 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310516405 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2831554 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.488297966 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.280292791 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.986058265 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.337072579 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.3759554 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780074166 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274890421 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371750398 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397135098 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.278151898 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.28007944 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.283935602 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.280829565 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.38988913 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.28050685 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.914244556 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.27645913 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.44457655 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.293795522 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.401657158 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.278312556 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.376858445 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.281589463 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.553642938 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.278543345 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.283205429 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91056157 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.280412339 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37368082 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.279170739 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.283853788 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.283454695 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.918291411 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775816082 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454831023 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.284875192 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.856206046 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.282679386 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.283133644 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.089660781 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770020016 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.851471893 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.285747943 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390856588 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.443837142 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.292567455 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.282522848 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.394754268 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.283324064 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.342973886 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.283102199 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.680546668 seconds)
  done (took 379.799293325 seconds)
done (took 612.651035373 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.12394702 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.074373206 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.217161176 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.084476546 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.066735184 seconds)
  done (took 11.742469875 seconds)
done (took 12.920358973 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.461738666 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.457224756 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33452481 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461326877 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311367025 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477680849 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443881083 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302165957 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387261722 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.354698234 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387567964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332022136 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316978651 seconds)
  done (took 19.202948523 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.57457275 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.29224044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348646528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551424341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327048793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570953594 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.592345835 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.291322779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447305039 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.328821821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303113636 seconds)
  done (took 18.808910649 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572898703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.290483376 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352342392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542296007 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327800425 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.588219697 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.603849821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.289488893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450321973 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306492943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30537845 seconds)
  done (took 18.808127536 seconds)
done (took 57.999908857 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.321967083 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.375919551 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.313892763 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.303517812 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.301571795 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.303043128 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.305424045 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302082297 seconds)
  done (took 11.706760412 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.3027649 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.300240891 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.299890748 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2993936 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.300573156 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.29925385 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.301554043 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.300206694 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.301816979 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.302310585 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302297588 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.300727199 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.302846644 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.303273114 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.30024869 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.30386706 seconds)
  done (took 22.00110034 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.306754426 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.302856229 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.300699141 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.302706446 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.299999756 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.303561411 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.304002695 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.303309493 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.300345975 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.299334925 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303175029 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.302928437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.298361027 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.30276339 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.302168172 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.302412585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.304034136 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.303433939 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.306375847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.300118688 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.29969742 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.301620453 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29981248 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.301581647 seconds)
  done (took 32.43246786 seconds)
done (took 67.320768436 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.288778741 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.285368405 seconds)
  done (took 5.755002387 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.363775564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.360736694 seconds)
  done (took 3.90578098 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.306269896 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.303131476 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.303278397 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303729166 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.30437685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.302166499 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30369323 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.306233564 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.303901432 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.304915788 seconds)
  done (took 14.220960268 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.305199451 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.304790854 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.302293656 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.303232918 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.305751378 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.302710899 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.302716352 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.302970438 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.304000356 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.303732435 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.304090634 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.303172576 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.303711659 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.304381305 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.303541846 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.304724323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.306423413 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.301621877 seconds)
  done (took 24.653586573 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.319653416 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.32369969 seconds)
  done (took 3.824748978 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.435676939 seconds)
    (2/7) benchmarking "second"...
    done (took 1.347484909 seconds)
    (3/7) benchmarking "month"...
    done (took 1.409947562 seconds)
    (4/7) benchmarking "year"...
    done (took 1.401436986 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.346423389 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.323983829 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.345991015 seconds)
  done (took 10.792669303 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.295574928 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.589229112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.763757538 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.440426969 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.281183754 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.303787145 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.270138525 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.302388435 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.308852218 seconds)
  done (took 14.738458956 seconds)
done (took 79.074155232 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.299194129 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.323340321 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.296940193 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.305666265 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.643793286 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.321633746 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.281040862 seconds)
done (took 16.659366274 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.260500227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272509538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.254281174 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.268188397 seconds)
  done (took 10.230249648 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.27198999 seconds)
    (2/2) benchmarking "read"...
    done (took 1.596260829 seconds)
  done (took 5.040603279 seconds)
done (took 16.446663929 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28530725 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.281769001 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.276827187 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.281847015 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.279646734 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.275997374 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.27916766 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.281053827 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.277214245 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.281002293 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.2813423 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281009595 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278441808 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282004643 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275765907 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.279344875 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278502931 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279926766 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.279255591 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282092814 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.282303895 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.279963837 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.278871093 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.279886632 seconds)
  done (took 31.886891104 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.283284442 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.282683568 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.278746084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.279474259 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.285462905 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276149827 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.280671723 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.278312924 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.281286575 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.2781106 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276318652 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.282948163 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.284093677 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280642272 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280107386 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.281169789 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.286536716 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280503364 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281871152 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.27946717 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.280171961 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278380408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.279621618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275569656 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.279650134 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278697276 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.278769261 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.283304951 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281538848 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.284871569 seconds)
  done (took 39.584939175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.282218192 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.283651392 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.279338796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.27749797 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.280459416 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.279448609 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.283270834 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.282448 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.278989893 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.278199453 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.283005577 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.283574989 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.284071512 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.279374818 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.283261055 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.278661431 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.278995045 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.283002298 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.282331518 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.280250238 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.27990804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.278214268 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.28816921 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.285062859 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.284313206 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.284725832 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.28252347 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.282009267 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.285446393 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.277210671 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.278665703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.286423597 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.284930686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283943155 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.286787562 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.282605152 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.290772441 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.287490965 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.282239878 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.283506389 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.287139518 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.286289726 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283162576 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.283784775 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.282266529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.287092033 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.279737533 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.28689038 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.284669786 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.28408167 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.283459512 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.283771715 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.281474379 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.284068682 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.282759093 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.284833133 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.286841352 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.283101737 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284284468 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.286970519 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.285186729 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.284088868 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.287288265 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284110746 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.284810915 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.286398277 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.287873716 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.287948273 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.285780432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.288463761 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.284864129 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.286203411 seconds)
  done (took 93.583668669 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.288319806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289260198 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287858846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287164419 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288216784 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285896311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290206968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28101556 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286135228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28533015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287509156 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288546741 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287810666 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28809006 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284396884 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286023931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288806341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289114214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.287993239 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288783588 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289480227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.288483746 seconds)
  done (took 29.493724273 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287795136 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286776255 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.286508871 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289591871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287012422 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285739868 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288642955 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28844389 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287106078 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29154361 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29211035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288141428 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294648964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288359525 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292702618 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286424946 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289814133 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290351053 seconds)
  done (took 24.371411724 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.289140034 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.289157479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.291105699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285481645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.286413772 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.288131558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289971732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285273822 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.289057633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.289308897 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.287688277 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288029263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.293016165 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288751002 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287446289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.281631405 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.280592765 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28055788 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282063993 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28151935 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283538817 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27978595 seconds)
  done (took 29.470502901 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276030144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275706363 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279250048 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279687215 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28036087 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282139987 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.281894581 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276758245 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.278295059 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.274998895 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276034369 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.276071069 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.277232149 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275806808 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.277720583 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272757705 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272361022 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272062176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273679431 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274388503 seconds)
  done (took 26.702215545 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27228264 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274457594 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268082933 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269403678 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269202382 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267849601 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268671121 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269487225 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268572191 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270630517 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265104353 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265209351 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26480045 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266075151 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262912261 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264812115 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263214478 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267257687 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260382949 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261340707 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262532388 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26116207 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261622986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261397423 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26127607 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261899932 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25795562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255720609 seconds)
  done (took 36.583181548 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258674463 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254574642 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256806709 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259689989 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259278282 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.258860402 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.256433808 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.259831098 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257633465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258121566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258936298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25863493 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259251113 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.25920009 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258777055 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.259425373 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25828968 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.260473773 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259152386 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258158214 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.258984702 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258022454 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.263455449 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259600592 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257789028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.259097687 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259470387 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257993902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260921977 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259068487 seconds)
  done (took 38.913184371 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.277427467 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277436588 seconds)
  done (took 3.703313459 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258898106 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262505108 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.25919367 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257581946 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.255262257 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259441746 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257097166 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253825043 seconds)
  done (took 11.212459393 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24794659 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.258962219 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256009026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256264548 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.254640027 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24698749 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254251549 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259014404 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248762531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.248464092 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250666075 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250654191 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248809271 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247986643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247620232 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249548131 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.255076371 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254121161 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.250069583 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251761416 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252211166 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246348523 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248487031 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253511097 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246904125 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255677728 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251478508 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258708386 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243530956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24919749 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245855299 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249772676 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.250894262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254814831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250443984 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.252893171 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250466259 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254040777 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253838779 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257869912 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250055359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254540386 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246848111 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250923368 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251831998 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.25913415 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253819505 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24947235 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.246305896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245059986 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2587057 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24376139 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.252238101 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252355949 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25353702 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25886871 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258681671 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243665678 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.251380021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257101976 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.2627726 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260958068 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252074027 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257075338 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255095062 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263493084 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25798487 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259705461 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25543547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251494645 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255031008 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267406587 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.258792718 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.258652569 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257115309 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250991656 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250096083 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253868194 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252274951 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.254215768 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258922449 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260590764 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258455181 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257261158 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249995713 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25522375 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.255223192 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.254986058 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249015635 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26125959 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264883635 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255856487 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249787283 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252663487 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253995275 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259789676 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249477547 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252641358 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260276453 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257981024 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258113696 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252675325 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258570251 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263376249 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256783289 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259781562 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264254956 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251800448 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260557015 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.265350853 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258166847 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251675571 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254802228 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260294687 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251023427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258072996 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.26404104 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255370051 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265922878 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259913862 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259202848 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.271163492 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.262976653 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.258417984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253496451 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265736423 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259030675 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257738633 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265253152 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259060336 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.257622354 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.256376978 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.265615247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253753504 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263159878 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255055612 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262949366 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259296781 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259999586 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.257529511 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260121011 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256750595 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.259546826 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262927794 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.26440906 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257345468 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268589133 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.26297693 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259397968 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261851066 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.266511241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262412228 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255386244 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265461618 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254516072 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264191588 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254246717 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265616006 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260812108 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260490446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257119576 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253889189 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257132041 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263364333 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259844462 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.26050561 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263458596 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26149561 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263143684 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247203363 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252229212 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247159636 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.253482956 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262168614 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.255956912 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258191789 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256737849 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26193243 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255410163 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255879542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24695912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.253845919 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.260371282 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258247351 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266496966 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251224935 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247864174 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240769054 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246188759 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253326903 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.244289175 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251835315 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258615034 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260671423 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247867866 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.253200225 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.244283258 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254439587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250111981 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25876424 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252780895 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251060257 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247449865 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25563509 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245420811 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255992108 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244639697 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255209252 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254421731 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251476709 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253830089 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247396782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250752899 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256414334 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253586209 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253163759 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247219917 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255314191 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.24411602 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248562631 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254403278 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.2517906 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254139449 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260141024 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253188513 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256134347 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253514484 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250037293 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254487333 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25215705 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254463536 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2583862 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.256414918 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248075801 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26153625 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256618889 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247763997 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254788297 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.262699471 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255075021 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.248460346 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260477276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255550762 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253997522 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.254377737 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248276896 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258262926 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257160544 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.262437373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248057363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257850777 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250257504 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259556131 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251044684 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256726802 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253572473 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25790434 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262006927 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255534232 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249550336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256760633 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254218022 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254642603 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247942469 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258394691 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256656639 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255838726 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252892449 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251894682 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256808005 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248827298 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258456988 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250674244 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266415613 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.272170434 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259903273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25877735 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261455195 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25850143 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25943434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.251127819 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252443648 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253019937 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252927441 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250792761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.2588843 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251056151 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260577574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256499714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256482954 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.260521312 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257609059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249821477 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25694555 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257951253 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257308291 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250065963 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259550213 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25317771 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260397146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258410913 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252766029 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265948492 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261385606 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256140661 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254163868 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.249057895 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250134498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254262097 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26135788 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253362419 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261978156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251484197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255524616 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253449094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262837995 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268421657 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252875066 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263439831 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258998333 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25079611 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252266938 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259412412 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263796899 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26942799 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250388169 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262241088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26020417 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255524935 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.2592908 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259772092 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260518138 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259138348 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264834193 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26548904 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255374654 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262574427 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270158817 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260378134 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260303946 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249248564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261332716 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269656525 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255970469 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260075798 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256384369 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261929937 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259094436 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260004905 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260697011 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260657627 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2640917 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.266296811 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26237157 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261745278 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.263837943 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270222049 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264912001 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271948759 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257738196 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26518367 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260204577 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256778954 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.257247923 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257295574 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265454808 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25281283 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264574446 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261949017 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257339263 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262481636 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268077481 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255352455 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26567635 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276221434 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255402389 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26411038 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.2626721 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255531558 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266493899 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.2631358 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254512152 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259804436 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261213605 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265421168 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.257138262 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265402672 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255814302 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267770713 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263944683 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261229831 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26489277 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263796025 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.254406187 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266368176 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262685072 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272020639 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254648241 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263094433 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.258502217 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268428486 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.27132449 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259783941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269959799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263751297 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257387188 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26108635 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267766111 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258614069 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263659296 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256921038 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256509456 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261052949 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263081165 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267750091 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.268349149 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.254790182 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260658211 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267079209 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264285678 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264713716 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262307525 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268334427 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260364091 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260244759 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267889789 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.258290505 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269944301 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257854717 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260187958 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25890079 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267846794 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26479784 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264720904 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.257055918 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257865201 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271391244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270064627 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263710686 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262084412 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269502098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261420861 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261163417 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263686013 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263063102 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261848863 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271354847 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261568815 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261486312 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.257858422 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269356962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271363061 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269633892 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261151346 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275134822 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.276551639 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273459762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260445956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262854036 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26349168 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270553484 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26419737 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259329312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274782645 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273576398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272378409 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264123064 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269556077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2564158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271367707 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267846056 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25832241 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.27557077 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264557916 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273885106 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268256517 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263670669 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259723009 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.261757827 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263477967 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26445566 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.269926953 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266909162 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272915917 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266878687 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274084955 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271159927 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266597493 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268028311 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261917052 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270572765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.261386365 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27209166 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271812068 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.263690655 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271684583 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271040655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261599783 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26668908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271452762 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.270697596 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263150901 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270355357 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274457532 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278332697 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268067822 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263355681 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267263893 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274270554 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270292975 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.269370792 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265190808 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273650446 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283129125 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261598361 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267671824 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272911318 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278218606 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269687591 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266474891 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.261439871 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266233765 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271016824 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269986832 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274714894 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271621473 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261487187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269818653 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.2668706 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262850341 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274120117 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280154314 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.270041882 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268011552 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281652886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279821966 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268873848 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28899894 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280115954 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.269958002 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277199766 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26135931 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273421522 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268331663 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274732455 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274286029 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271536229 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26987322 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261054871 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271614285 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281037411 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280919623 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273720552 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262916724 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.26743763 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270195609 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268249289 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272867317 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270610373 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273517782 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272283246 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264560636 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281223806 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282967887 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276992969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274381671 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270475242 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275304128 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276415142 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271988507 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.278740108 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271175011 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275298376 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271272069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281876188 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27549406 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268392904 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266740577 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269663582 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277402469 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280235623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289748458 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280851271 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277102874 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274381326 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273872465 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269299236 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275523774 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271103763 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267080849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268758274 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280137414 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.270975633 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276621806 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.263663672 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275200456 seconds)
  done (took 752.533890156 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273479066 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270215071 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271041537 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272307182 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27496341 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271586921 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273831101 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276163144 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27617881 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270466377 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275039321 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272339314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276391484 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278280488 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273725774 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274414848 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272595752 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273032393 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274088915 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270683404 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273318883 seconds)
  done (took 27.899503329 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275764706 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.271139461 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272035955 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276085774 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275347486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272576775 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273180433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273259137 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271042762 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27831941 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276877125 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276543613 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277175105 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274635571 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275152195 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273239382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274558976 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277558677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27608582 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273468317 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274233141 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274043855 seconds)
  done (took 29.198558478 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273671815 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273311658 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268608921 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.278962498 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.27733669 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.277244682 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274577099 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.280420746 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.272220332 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.269923917 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.267864343 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.269989989 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270684803 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.281783135 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.273510868 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.281565629 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.277621819 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276734894 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273449967 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.274852588 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277072922 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.285210503 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.276554361 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.266819217 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281097831 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.274603541 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.274494844 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275285434 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.271173991 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27897325 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.282581367 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270370999 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279347316 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.279162307 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.272917925 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.279925077 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277209209 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.277540096 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27598702 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279501846 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.287637358 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.277294676 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284865718 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.289892491 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.27942755 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273613386 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.283348203 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.277613337 seconds)
  done (took 62.443311723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274856331 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.278411442 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.277997024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278818289 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.278497199 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.277597516 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.278610726 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27860536 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.275506456 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.277068489 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279116325 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275828458 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277086857 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281222007 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281841113 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277308243 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280932357 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276577043 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279867973 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27944979 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276068107 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.279273595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277710923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278457671 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282167916 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280312768 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278831206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.279602486 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279097869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276786287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282379252 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281510089 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277975694 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283951804 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280104271 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280349168 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.279984364 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281445851 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281316609 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281786064 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.281605054 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279225402 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28449202 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282370573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282416397 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284289728 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283575279 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28385197 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284202409 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284109149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283748005 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283875977 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282961453 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284030782 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282341685 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285398275 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283476543 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.2849007 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284068804 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28571739 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285887537 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285365287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284067164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.285719061 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284907447 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284548148 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285072688 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285113013 seconds)
  done (took 88.276572522 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286290652 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288074884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28895978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286057028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28553475 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284651907 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287946259 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287299629 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286737625 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286392453 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287364242 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287673506 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286608758 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287573698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287010083 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287236676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287373924 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283970831 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285247987 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287433482 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287895998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287934281 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287540376 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288744337 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289083135 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286198836 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287468781 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288935655 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287685654 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284901334 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289479627 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288153861 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287945404 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289121174 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288554823 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285518364 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287696285 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289183426 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288868536 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287362518 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287134531 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288636891 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290435387 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288091445 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288386724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2882466 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286774257 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288699203 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286421226 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290669249 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288684664 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28968087 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287536969 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288792386 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290000233 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289776499 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290847959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287798607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290913658 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29179577 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2911363 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288351943 seconds)
  done (took 81.022320052 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290841225 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289253184 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288223166 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287529084 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289589885 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286826587 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288402876 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.288232329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290927345 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290571535 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291239934 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28735327 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291488695 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291450327 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29006786 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291814629 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290637402 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.289239061 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290197221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2874847 seconds)
  done (took 26.964970266 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290476839 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288036335 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291388947 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289744674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287092331 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28644597 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.28782348 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290843182 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287730416 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291174277 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290097353 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291203963 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28786501 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29006284 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29223507 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292549144 seconds)
  done (took 21.806084901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289424609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289043681 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292555602 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293494159 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287615692 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291384523 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287807985 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290207986 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290590918 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290419138 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28966215 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293096197 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.290647367 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292814762 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290279064 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292990972 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288606242 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289880633 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294008182 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290976921 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293731395 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293376016 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.291779112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292091499 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292140564 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291843311 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290639781 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2922588 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293645455 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295207753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.29451376 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293985801 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292059729 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292215609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293725184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292775446 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292867107 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.291439432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294445122 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292757296 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294080266 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294597017 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294451878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294799852 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293362095 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.295768995 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292959167 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294986021 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294257492 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292746055 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293792621 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292461904 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295453797 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293192741 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297541468 seconds)
  done (took 72.259997433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293320125 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295551555 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29293062 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294992683 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293254179 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294143679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29385481 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298284026 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296165986 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294561013 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29778815 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296648069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296219705 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295764652 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296407425 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293295217 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29720364 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295523924 seconds)
  done (took 24.489256918 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295366342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296422817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296364454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29606878 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296414027 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296515059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295969609 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294594071 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298016193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296490813 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295356459 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296031796 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297384344 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297415621 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297660254 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296439435 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.296776136 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296164635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296666618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298054244 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296903939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297681408 seconds)
  done (took 29.702931667 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.289065091 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.28791497 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.28780714 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.304015303 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.301626163 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.289429016 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.288563524 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.289028177 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.305870999 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.324431326 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.320295161 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.299456145 seconds)
  done (took 16.765821529 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298260301 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297524737 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298171069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299250055 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298422474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297164067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299733766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297997342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298959489 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297743245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298973796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300017085 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297984924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299767023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29955258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299870699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299532293 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300201067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300430586 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296352929 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299813842 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300311764 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299775376 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300127017 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300023411 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299659611 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29989126 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30071269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29797204 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300632412 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300418686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299908038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301052752 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300262005 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300873481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300304567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301303906 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301091459 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302178109 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301453338 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299837553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299720625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301620686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300568322 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30085731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302478739 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302509519 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301540536 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302125386 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301570734 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302362818 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30228368 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302574572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302374689 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303141548 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302226078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303917453 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301430443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303895399 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303078778 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302691125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301050742 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302557483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305182378 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305291425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301458337 seconds)
  done (took 87.024353022 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301683112 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303236962 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302608395 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30342491 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30281859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302649121 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30405051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304046178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3027338 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303361451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304292285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302544302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30401248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304573029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303830046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303846529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303808919 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305124774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304034971 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305438469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304218914 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303789637 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305075211 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304439741 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30628266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305853596 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303851651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305749089 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304984511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304616227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304431531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304915313 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305545711 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304593719 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30390632 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305138473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305982828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311851544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304020661 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305306457 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305732847 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302611533 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305235583 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303625246 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306156797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305289779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305809387 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305950421 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305348874 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304582624 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303336899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307184944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306288241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306082491 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305871806 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305077193 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304456752 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306197095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306855705 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30571938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303942882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304868435 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306711169 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307497313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305594514 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305643778 seconds)
  done (took 87.305152324 seconds)
done (took 1774.366542986 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463360913 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415395987 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298080285 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.308949789 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295681825 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.295184143 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306437967 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296860132 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297457697 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.296512718 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297394686 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.49221354 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.329249783 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297091063 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298143529 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393494873 seconds)
  done (took 26.570789452 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321686888 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31445661 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.417523624 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319773675 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33792486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.490461514 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.374312217 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.318318989 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.471455599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337199429 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.310758636 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341517913 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314838097 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.315891584 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.335775282 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.487189113 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.564232867 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.315521135 seconds)
  done (took 28.878912906 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.727542476 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.326197266 seconds)
  done (took 5.25099446 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.333678383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316033139 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317014726 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.314903899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.3074977 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.327323666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314160078 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.320418181 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.307874846 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43463351 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319822288 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329991364 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314282328 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317473631 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322228194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361600579 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.479495351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324794884 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324050107 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32367626 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.315717008 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.40825475 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35659993 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325428301 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.430378937 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.313178582 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323131764 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324856062 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.430368861 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327448863 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316169711 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.317365751 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316566349 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23706747 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.852010962 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.309369897 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.338726637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.326298342 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.32191033 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.449557883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.319915755 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325792881 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.310240115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.84016591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.414872626 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429991262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.310532077 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.323708824 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316526748 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.385084928 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317013627 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.319366841 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.375657015 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.115627779 seconds)
  done (took 84.359013571 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.363059811 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.309970572 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49167336 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326200066 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317374943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313978005 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314587474 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.5811989 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337759461 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312997632 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.619872503 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918219396 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.317295988 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.385794566 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.354863568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.374356043 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326013279 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314139791 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.311957902 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.312582446 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874688217 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318840803 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.312580614 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.408104258 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.352564155 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835272499 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.313134465 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31851739 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.328692747 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.314334587 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.889337116 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325845072 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.369440804 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.3150086 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.594203849 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687813708 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648198237 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.322539302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346045256 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316784681 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.346439373 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828033785 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.668505235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.313481928 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.313588766 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82619834 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314729462 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.317757147 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.323571357 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584470994 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.312944764 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315739562 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314516509 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316071607 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.315385351 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.377596083 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.383301001 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839744919 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314985372 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.31562651 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320003484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319289465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320284831 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319848719 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.318808591 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.6753476 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.564408328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319990693 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672197738 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879276461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319149131 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968824724 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.320291553 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.342490093 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.363227961 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314289087 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316584678 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.836304419 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.32803918 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316030972 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653490739 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.317096473 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.615428052 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.3360292 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317334439 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894118145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.32303807 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.366773981 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317164466 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.315383357 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.331612461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32182512 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602504666 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.361844403 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317958296 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318722862 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.329564011 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317439352 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.338742441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323903338 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954760839 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.323970249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.316973424 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336890542 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316729417 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319193392 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.320079079 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319718037 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602394417 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318841444 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.338573195 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321497718 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31810901 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.328564756 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418021435 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.323918208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.616812484 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32051397 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318559996 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.31873201 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317277062 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349843116 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320089543 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338952986 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.287726475 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.620981226 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333998003 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.337787992 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320518436 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318971409 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341885606 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32637797 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.383660879 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.322293727 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109179827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332300923 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.337719361 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318673549 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330511746 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320005627 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.342435657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322725888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615924184 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.603129775 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.571541813 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320128488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.319561258 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.124476458 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.353849999 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50556793 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336464923 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32048421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601636509 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543946997 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.321944199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321443903 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.322771177 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608937501 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333630648 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632028236 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91589017 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320901906 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334816349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.108341845 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.128291198 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.326868675 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.3250026 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61520413 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.336962556 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.323206389 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.321378451 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.321787838 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.320738554 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327152958 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328515881 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.322514866 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.321509713 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.617873773 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516625344 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338405399 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32300694 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843992982 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.353336673 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321896908 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326900762 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.32561647 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322025044 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377571108 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.328230257 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.346761743 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.322373225 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323491269 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868492559 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322695771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.342271953 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517542302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048765082 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.328265905 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.324030462 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.327442775 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.392939187 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876125126 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.362318468 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.620029871 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.332247945 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.364640705 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324984501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.345770817 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878957599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325859748 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.341832069 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.055046361 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.327883379 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.805697734 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.324765474 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325084928 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98004941 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329250862 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.326073923 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329830927 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324718841 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.647642183 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.324938962 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.33457375 seconds)
  done (took 495.616118679 seconds)
done (took 641.863351523 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325217604 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33001245 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.329413846 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.329730985 seconds)
  done (took 10.529708312 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.344651187 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.333204334 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344219845 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332076679 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343294967 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331675051 seconds)
  done (took 9.247062898 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325423291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330141693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.331047949 seconds)
  done (took 8.204179887 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532370359 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353927471 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.672573495 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.34241768 seconds)
  done (took 9.119213696 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.343333372 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.342413973 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343265201 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343390238 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.344570132 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.344460583 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343644421 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34362739 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345780157 seconds)
  done (took 13.310932128 seconds)
done (took 51.627239477 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.330286008 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.482833039 seconds)
    (3/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.443641847 seconds)
    (4/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.317591976 seconds)
    (5/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.476852436 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.395272784 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.479690119 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365845905 seconds)
    (9/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.593989101 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.672661589 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.669525481 seconds)
    (12/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374672297 seconds)
    (13/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.305798964 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.330289213 seconds)
    (15/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.481948199 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.356409454 seconds)
    (17/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.520870439 seconds)
    (18/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.479844777 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.508877274 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.485083679 seconds)
    (21/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.39571296 seconds)
    (22/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.305121783 seconds)
    (23/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.313814559 seconds)
    (24/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.543380465 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.508660672 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.662529891 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.365633772 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.41129374 seconds)
    (29/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.410154457 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.326457614 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.309050036 seconds)
    (32/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.427691437 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.612485049 seconds)
    (34/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.424349257 seconds)
    (35/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.360767761 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.416472869 seconds)
    (37/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.531396714 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.313836627 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.411702471 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.308604926 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374575387 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.393954616 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.451592213 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.309858856 seconds)
    (45/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.456914861 seconds)
    (46/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.402951365 seconds)
    (47/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.403913753 seconds)
    (48/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.313551082 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.433132484 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.319461376 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.589327669 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.738811989 seconds)
    (53/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.401222619 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.350551237 seconds)
    (55/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.446596111 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.459788819 seconds)
    (57/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.341906951 seconds)
    (58/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501168282 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.308607027 seconds)
    (60/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.440675906 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.48345828 seconds)
    (62/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.515950175 seconds)
    (63/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.401018754 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.567785739 seconds)
    (65/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.314815992 seconds)
    (66/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.312804227 seconds)
    (67/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.830132241 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.313303388 seconds)
    (69/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.645302294 seconds)
    (70/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.570553053 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.414413404 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.425375832 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.412114392 seconds)
    (74/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.377690674 seconds)
    (75/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.315475694 seconds)
    (76/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.310550653 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.339709816 seconds)
    (78/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.326535375 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.451105935 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.48252302 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.439609991 seconds)
    (82/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.368113627 seconds)
    (83/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.310932344 seconds)
    (84/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.331097578 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.417463352 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.437167047 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.421197293 seconds)
    (88/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.420096894 seconds)
    (89/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.333401275 seconds)
    (90/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.312544333 seconds)
    (91/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.443285501 seconds)
    (92/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.352904583 seconds)
    (93/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.549144923 seconds)
    (94/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360110266 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.433439639 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.445580296 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369906332 seconds)
    (98/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.530770311 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.332321479 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.586996341 seconds)
    (101/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.312351973 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.414378422 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.311388792 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.366450679 seconds)
    (105/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.325429339 seconds)
    (106/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.496380994 seconds)
    (107/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.409441061 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.439428852 seconds)
    (109/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.311829545 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.416264884 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.452451439 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.441339322 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.335715475 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.317241195 seconds)
    (115/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.629602283 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.441509679 seconds)
    (117/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.425309303 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.3763035 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.645832202 seconds)
    (120/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.433463611 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.354605962 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.578232319 seconds)
    (123/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.547462832 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.42518062 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.543164228 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.440646854 seconds)
    (127/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.475573245 seconds)
    (128/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.450952807 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.580450364 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.604738591 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.545622176 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.575688801 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.57882564 seconds)
    (134/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372261115 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.339163763 seconds)
    (136/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.452771857 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.471547304 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426724415 seconds)
    (139/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.476444119 seconds)
    (140/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.515991224 seconds)
    (141/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.536932653 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.406196389 seconds)
    (143/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.497867757 seconds)
    (144/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.431097823 seconds)
    (145/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.402491334 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.457360949 seconds)
    (147/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.673426477 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.45524221 seconds)
    (149/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.510317626 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.314947504 seconds)
    (151/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.607962132 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.482971202 seconds)
    (153/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.430086788 seconds)
    (154/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.512458581 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.314676392 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.444698934 seconds)
    (157/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.489387839 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.578269334 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.578407438 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.396857363 seconds)
    (161/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.433591742 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375459563 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.314860026 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.47485726 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.44489697 seconds)
    (166/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.37008458 seconds)
    (167/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374592425 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.326370322 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.656851976 seconds)
    (170/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.680623374 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.363594006 seconds)
    (172/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.632950573 seconds)
    (173/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373564567 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.444825325 seconds)
    (175/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.314699725 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.372245706 seconds)
    (177/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.316684499 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.529341374 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.492359384 seconds)
    (180/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.364768811 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.824423983 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.375301146 seconds)
    (183/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374413239 seconds)
    (184/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.540022492 seconds)
    (185/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.419240059 seconds)
    (186/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.31324759 seconds)
    (187/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.321639206 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.522989329 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.482241167 seconds)
    (190/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.415420923 seconds)
    (191/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.373756385 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.48061473 seconds)
  done (took 325.788135624 seconds)
done (took 327.007342203 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362273968 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.440269774 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343533135 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.343218663 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345311322 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.338175558 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371728977 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344883341 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358339194 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358358989 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.339054097 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.357494858 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.36039987 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355825302 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.37868591 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345747377 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.344132558 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.355671663 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.360855477 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.362576099 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346702725 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347031464 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.37263779 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343697877 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354953345 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352627754 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.351071386 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.341580799 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353626662 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.359494036 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.341235775 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351721153 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.363840083 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.357496341 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346656958 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355896737 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348404803 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.443881653 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.366000287 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359186744 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355125628 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.363752862 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352699736 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.352225443 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.358321061 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373268012 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356146594 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362360714 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341784262 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.338890771 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366732042 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.359499409 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357329109 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.339210408 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337452507 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.362194881 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.357966826 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368298239 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.3566497 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347825121 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381768378 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366970029 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360532175 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356909561 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353535702 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36331683 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.3591513 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364367068 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.356184799 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350854307 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35038111 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356669078 seconds)
done (took 106.98048945 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.471053055 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.343946865 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.507679818 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.356577374 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.513094417 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4709214 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356012144 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.356092106 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.354755647 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.152516095 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356094049 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.356918484 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.346654846 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.355996865 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.467424976 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355820468 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357383652 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.050505062 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.357868867 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.485677832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.346854834 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356217738 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357799458 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.154945363 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.343861695 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.343300216 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.487193586 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357796261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.053137639 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.339795186 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.345017944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.054403818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.487911937 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376879507 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.368041705 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368842768 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.515419302 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360249178 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.47464488 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.47570425 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.509796615 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397406834 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.343320443 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.349452012 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35977764 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358752684 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359878172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386014929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.344218315 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358913008 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.049834806 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365819871 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.370008445 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358969942 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358785119 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379143328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358990686 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360640181 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.48753665 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.357336537 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.473019484 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.155773545 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.152876958 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357354341 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.345548988 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.35090393 seconds)
  done (took 109.62203736 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413633624 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420755935 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4542121 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.34587484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.392928548 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.44931634 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.343411879 seconds)
  done (took 11.045630658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346431341 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34898044 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390182313 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391428153 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.349991591 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515329014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35000848 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353019623 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348946726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392999033 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349931821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350051881 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358275919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.341145997 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390005669 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352883409 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462203226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.343573652 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351006525 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.49928944 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349703271 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359364772 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.391864357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354411147 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35119756 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.348434361 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.121663108 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35193056 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350909081 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.351330368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350156705 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.409043528 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350632025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.341620389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351052707 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455940061 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35212185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351122764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.350730845 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.344261259 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351669258 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351326994 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351045076 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351790352 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352169318 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367354661 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352284985 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35231494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351304595 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353709368 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.394445955 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352490746 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351500631 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352496298 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.397244854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36162418 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.351880406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.352879927 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353550142 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352959263 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501242151 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391663683 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353711975 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390114959 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353188713 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353214142 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352712953 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35313176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439041335 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355140542 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391313087 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353195917 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525578117 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370140426 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355290285 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.348432515 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.347742747 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353618813 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341507826 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.352104105 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352446724 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.345513531 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353142646 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354153433 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354250343 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503728205 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453519627 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354335293 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362566587 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353972771 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355333645 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396315657 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354154111 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355792692 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396320356 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464848546 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.398260216 seconds)
  done (took 139.047523714 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357834119 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358954479 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349739047 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374494424 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350794826 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.34785249 seconds)
  done (took 9.368065178 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3513288 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.360806594 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.357509312 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358511475 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.357998112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359330718 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.359976878 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350224288 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.360904671 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35798852 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360814613 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360854817 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359065623 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361226752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359213581 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.360377426 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358179092 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35872771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359715032 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359540329 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.346023526 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.360284778 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359144826 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.351713407 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362628732 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35962024 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377759964 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359031888 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.358399983 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357991079 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.363475538 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360162997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.353182781 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355246925 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363027432 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353421432 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361695498 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359972547 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360164422 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.361316373 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360985903 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359939734 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360679552 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362033647 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.352768988 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356409348 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.36375112 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375875683 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.359930863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.361639545 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361282691 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.360207812 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362656797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.362093934 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.354179044 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356075329 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363420376 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360968904 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362376305 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.353406085 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363635482 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363495644 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354209034 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364673792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361422586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362714886 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.35384041 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.366073784 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362704835 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362161066 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362587289 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.362268934 seconds)
  done (took 100.140917378 seconds)
done (took 370.453147987 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.841695447 seconds)
  done (took 4.077617289 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.358881207 seconds)
  done (took 3.604182816 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.235670903 seconds)
  done (took 22.482984554 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.374639732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.394652113 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.38313166 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.368996622 seconds)
  done (took 10.764529061 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.636453017 seconds)
  done (took 3.879752594 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.376152923 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.367291557 seconds)
  done (took 5.990270991 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.553086644 seconds)
  done (took 3.799266228 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.589782504 seconds)
  done (took 3.835343342 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.394193793 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.376279915 seconds)
  done (took 6.025754412 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.342551935 seconds)
  done (took 3.588531273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.919995972 seconds)
  done (took 21.16458753 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.383608803 seconds)
  done (took 3.632484707 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.409103928 seconds)
  done (took 3.654689677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.846112752 seconds)
  done (took 6.091863119 seconds)
done (took 103.82897046 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.358703379 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.36629767 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.366031036 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.362595604 seconds)
  done (took 10.699754034 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.438649348 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.438888524 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.448159431 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432485627 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.433674182 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.441469608 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401606488 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.401416912 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430634893 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.426015049 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.441570888 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432896231 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.442236461 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40106288 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.426335183 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.443304778 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431641603 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.447522216 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402004091 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43255243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377149854 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.433824795 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.427472541 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377042546 seconds)
  done (took 35.457379247 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885860703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.438606377 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522663259 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.41846415 seconds)
  done (took 7.512989139 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.480227125 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.479692166 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.497992804 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.534234704 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.582122352 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.495074617 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.402191586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.397911676 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.384861967 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.482141615 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.56567109 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.480932733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.695589466 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37536965 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.695309825 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377423259 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.377114397 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.48221261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.531012705 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.559316626 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379484226 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4806177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.485637445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.48014072 seconds)
  done (took 36.951891916 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385932527 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.395114809 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.379107704 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.392519 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.379595545 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.378492367 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.381840901 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.385197672 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.378556043 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.379318141 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.379998558 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393444405 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381266097 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.379028015 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385782865 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381608018 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.381319267 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.387785575 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.38848741 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.380811317 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.379317287 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.386999681 seconds)
  done (took 31.691210246 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.364329175 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.363847568 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716365175 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.620633567 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.365029285 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.369923246 seconds)
  done (took 14.050828076 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43651998 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578213027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378196286 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710640088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.800437795 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.37672133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372453482 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.609346293 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902887457 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.893577797 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431179072 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444840114 seconds)
  done (took 20.186610476 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.366328457 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.370519857 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.371494105 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.387829878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.424845753 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382225956 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37972116 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.367167356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.430287539 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.434973899 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382717723 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.425730588 seconds)
  done (took 21.975917131 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457585647 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375792399 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388687951 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472460113 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378016236 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376473567 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446304906 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064595411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384109406 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652855017 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375374636 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458991587 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625076238 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380584927 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382004455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.345887395 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623902509 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848654415 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378208714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386411017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4099542 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381611231 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38266896 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580872604 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378681653 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37876571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640668967 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377230652 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655774269 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632411255 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63381981 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386089988 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655156358 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020242783 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483656563 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577455691 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382561926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384519261 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.358106024 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401518536 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379039586 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380097558 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627149707 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385189761 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377239988 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378518867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081668158 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387341714 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.379104157 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380460778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630497311 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468081968 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.386256249 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381604504 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401445207 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379436812 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.385004881 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505423848 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020236286 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379597868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387796912 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.385649207 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394089555 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386350315 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015225097 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394043139 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388397483 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387817158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382225126 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381713529 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402354466 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382160477 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402060254 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381642636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131766696 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388929862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383188613 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903763944 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387789681 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387798594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608718387 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382538329 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382896583 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.382560654 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381963977 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11011184 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390721899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.352687703 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425060441 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076063141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584313647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404884541 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412043741 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604617119 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.352659149 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381944486 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.383617971 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38561715 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405592366 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.078217323 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38437832 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389596385 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631257189 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594823328 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396824304 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370122686 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84370056 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383691087 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410667715 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397309909 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590952762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.991170208 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646481269 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395064379 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422666389 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386059928 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177579313 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386445707 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.397151111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385942355 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658960375 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.213647627 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386452922 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460138053 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386183742 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384650599 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386747902 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402048386 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387673215 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.565546007 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400561637 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640702159 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.392258848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386255636 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.394851086 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398000937 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.392513435 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607923617 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386201211 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669570205 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386375202 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387241254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386682003 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606527669 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.386165175 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.399273198 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727495831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399806744 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401745512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645080785 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425376585 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500234107 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42060902 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.397533298 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640170917 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392161016 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394111753 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387619956 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407476517 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393765476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.396293644 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381679652 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011435964 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370629816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393156746 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388940546 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404904248 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464312771 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397274423 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590162414 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392319865 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388062013 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400918442 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.398520092 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616115215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640460258 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.399483462 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563947091 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850636177 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99222225 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410338548 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.390719259 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.390712037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.390164156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390211623 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390059894 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389801813 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593458013 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64699321 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393565084 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00497686 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39798078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401525841 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.402487858 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641602069 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.404602445 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391353501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398040539 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4034254 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399362108 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650059561 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6179258 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407274484 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391311912 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911821974 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399406203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392841309 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392210389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417609629 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405926051 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218776014 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732176381 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388776307 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650232092 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40294109 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.410201391 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392066466 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394772672 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404812302 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405024789 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424378905 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.595969199 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397758839 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400362377 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031366014 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153110837 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949355056 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40360497 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.397696639 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397873855 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098706165 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392041629 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394134824 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634361579 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090577875 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393417784 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856292531 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393793033 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139295332 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651745161 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625037474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397128051 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.403639639 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64968952 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612844299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420457451 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400502733 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399113239 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363526497 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928801521 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406801921 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572872474 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094717455 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403598357 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397261826 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.466207483 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409821795 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786545773 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39371021 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395457607 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409432138 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401007361 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226328298 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40014587 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395968631 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03414918 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400990802 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.867083322 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396366909 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599476621 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651482656 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.631653054 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403057384 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.403029525 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646249914 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649195013 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403223267 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397553359 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96039906 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2594956 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403996942 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399041009 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186300197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40139926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681472435 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.41243048 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402255155 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406567847 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396360423 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398401267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.398751491 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404324902 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374341792 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869308647 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.399791055 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399439291 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417470386 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404069223 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64483291 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414456993 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005896946 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631769592 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393770156 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452280083 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402731211 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397736629 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.369044342 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397932563 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398285258 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411113398 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619071199 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398975446 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368102361 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475629883 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609043907 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396592033 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39852903 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614246356 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.400630001 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.406109911 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185397762 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436680734 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399358527 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400792873 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405759902 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445819493 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473295397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605643933 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.654941428 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658505535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797489898 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399039483 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399852296 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415035163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480657785 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409486882 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.407285603 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.40345767 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006562509 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167318079 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021675541 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661879612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409281605 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411290228 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400971216 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64293005 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397956612 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678445644 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401735 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.409182357 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428639865 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400881622 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405616619 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618959196 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676678255 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401055585 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404132552 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405354248 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.402323148 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659734867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.617554322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877877779 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928757377 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40231643 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412556722 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109910267 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677751947 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402268076 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402862757 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399710768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.404365444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421562345 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410902291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402433951 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624134527 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654271477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055222625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655286242 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.430153871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.400586627 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402972238 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650860024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235440027 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607657476 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018182044 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11895483 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662917873 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47808564 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606631755 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.404679033 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643131551 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.416589482 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408887293 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405357482 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403935034 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.405669535 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.657173923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023136925 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665135774 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.411828797 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.418143339 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441337087 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.609884401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628885464 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135912929 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626204579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663460932 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418012413 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407003368 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022810286 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66844452 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411423636 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.413164483 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620964402 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405460894 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443957772 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.274550288 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.405378527 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938001138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.619495515 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428103917 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412546245 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124964165 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029955964 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413717451 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889748339 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408861153 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419168616 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688534634 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415749622 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407134169 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695025483 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.414880306 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408419286 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620836938 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.015792217 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162351622 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.422999646 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411565383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.408806698 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407611229 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47085858 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409377116 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409347504 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.808175853 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408967166 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409532086 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422930726 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.413637653 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413330151 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.413684833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408379249 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.418539083 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.402406093 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.401962511 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409595779 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542168914 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951474171 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411624147 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025963036 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744677507 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657679585 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409836338 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.38442884 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.415926195 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412246022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409764921 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409846457 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419332767 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947260488 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.423250374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.671507788 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422444535 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.622399967 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621599465 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411085557 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618506387 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424986141 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437045918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379577127 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409765132 seconds)
  done (took 990.75437592 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422657332 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.410579236 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.416813979 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.478976928 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430729183 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42318386 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.427503799 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.489549096 seconds)
  done (took 20.782737869 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416849759 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.416358671 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.415959859 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415696637 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.408680047 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.88705991 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.416626422 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.411908366 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.424934217 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415947774 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.417493659 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.03548238 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.411898123 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.413662094 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.418452621 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.418596895 seconds)
  done (took 33.029247319 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.124148524 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.429435859 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.971678534 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.443814773 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.44066106 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.40478101 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.550899125 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404390375 seconds)
  done (took 26.052441164 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417439805 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419294408 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41827544 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417651291 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419276725 seconds)
  done (took 8.376641148 seconds)
done (took 1258.769580088 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.419213264 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.41951964 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.420813859 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.4202306 seconds)
  done (took 6.96522613 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.383514391 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.382218953 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385208629 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.400232044 seconds)
  done (took 9.83659211 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.075949669 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.939143673 seconds)
  done (took 5.300737964 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.931697481 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.925433998 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.92027073 seconds)
  done (took 7.062308487 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.68519412 seconds)
  done (took 2.970221532 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.365014342 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.410046295 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.416722401 seconds)
  done (took 8.479544295 seconds)
done (took 41.899150392 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41280466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.169259463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561824689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412324568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.604993313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.563220446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.657625178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406407769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412203437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418814388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413090525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.570911228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.640926049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.170345599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.644442619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.169649855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566379591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406628188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420828609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.40322027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.672796488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412875552 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406977383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413909496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.564213311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.5552508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402444071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.166045448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403826936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403378825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.54862594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41614762 seconds)
  done (took 83.679605808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403278354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416521954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.409007457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403260425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.415417011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411415845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.402409483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403219702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402928209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412296036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403088077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401843044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.406127709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.402838064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.404181348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403480969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422242019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406959476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401711035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416654471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.408245739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.405600104 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402357632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428460205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40822883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417667767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.404440785 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.404350384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406111364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403710143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.410190142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42866751 seconds)
  done (took 78.360055461 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.40716195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409625642 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.411493927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410319985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.435795908 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413558055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.407428098 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408838665 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408863825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414421111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415072707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413296006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405507813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.408437845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.406667309 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405229256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403284941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420479008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411968029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427150893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.410210772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418068946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406597408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406739367 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426217386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.409800123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407246955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.405639104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406885337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.408089145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41276614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416786899 seconds)
  done (took 78.462526747 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.652828711 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.423196367 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.429628966 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416767322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.428425657 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.426858664 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.417524522 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.651297173 seconds)
  done (took 15.131214877 seconds)
done (took 256.918736336 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.421090477 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.900106218 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.451102369 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.415020908 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438064167 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445006006 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.619204816 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.446890119 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.608516799 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.421591492 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.434074721 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.420827483 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.220023694 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557028549 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.212874648 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.346025571 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.286996512 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.418093375 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.967305875 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.643408245 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446017901 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.411135131 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.23148935 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.294140368 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.392023415 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490137721 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.480911013 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573101812 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.540104333 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.48400082 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.897718734 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.437177782 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.428194903 seconds)
  done (took 65.065191522 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.415573828 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.42568152 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.430927302 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.42794389 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.430545854 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.426384391 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.416569768 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.430958718 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.428475528 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.431125066 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.429919016 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.427294314 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.424472102 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.430540734 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.429529934 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.404700991 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.415130724 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.42691972 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.417345053 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.403755153 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.430741079 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.42721023 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.429322809 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.427830768 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.429499401 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.428000985 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.428464803 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.430798909 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.425553556 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.427349121 seconds)
  done (took 44.04864887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432701676 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.963756976 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.150469786 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433353294 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.416885162 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.422229254 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.700477183 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433009176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42076748 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.421772092 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.872974366 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432674158 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455802263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.161962835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.425575025 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428037171 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428399 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.418918263 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.970883275 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433603032 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.699039664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43283198 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.700622885 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.437999778 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.422702996 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419448167 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42440958 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.413090117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.424501363 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.876485058 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.181173858 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.700767386 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.130661456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.203835551 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.176725484 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435088062 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.432160692 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.879366842 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430489581 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.421093319 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.69874666 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.427074579 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.161309531 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.107044526 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442332364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429255227 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.416103119 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.881536461 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.663305243 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434880942 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.198282713 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43191424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.434207306 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.421046087 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654681855 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434260141 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422128482 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264915637 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.429915686 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.702664181 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.437772401 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.423177214 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.976326112 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428144681 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.976282366 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.427275295 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431225289 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.424344235 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.168546196 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432832966 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.123313001 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44608891 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433738532 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.875898306 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.978637084 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.421889923 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431309044 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.978539983 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.178956879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.725050074 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.429245044 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.389908224 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.727126784 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.428129754 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43632081 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.436046691 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432496318 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.497241326 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.701896053 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.039103068 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.122369197 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.273242568 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.706526284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438571329 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424985463 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.268415938 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43348657 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436345597 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.158434334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124690936 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.436959612 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433631412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.110295682 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447172316 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.706954587 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.432490701 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.212549615 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.428470561 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499231177 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435107397 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432048378 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.431435089 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.709924753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.433885 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.437096782 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.10805755 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.908335423 seconds)
  done (took 198.646030233 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423600716 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.425357248 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.421580051 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.420394088 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.424010924 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431245514 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.423480052 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.422337302 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.428060737 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.423811773 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.42726858 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.431460492 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427757017 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.422295042 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.433686278 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.425437585 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.425858349 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.437013191 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.425716171 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.427957798 seconds)
  done (took 45.82649165 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437732582 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.979931091 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.942321321 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446864975 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440528801 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.430791548 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.487383746 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.446877238 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442090339 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.720217453 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.598777608 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448713251 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436218916 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.440918743 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94892305 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.417531792 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.72465946 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.97756516 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.443388482 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.9782228 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.415617263 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443077559 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.430407517 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.978070545 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.736952705 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.714877736 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493073015 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984581371 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44337278 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.441929222 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975087321 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443185348 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.431560242 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96227178 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445361441 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453482111 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.441180308 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.48652795 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495169542 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.73175113 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.987878894 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.719263551 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455296611 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.5954395 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.4475171 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412577423 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.988686918 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.443006262 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417981437 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445418769 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.447985015 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.957979653 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439956836 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.957928147 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.448453116 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441423516 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.987238607 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.961399116 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.953186023 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.603471061 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440082097 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.712379678 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.450492676 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993767295 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450949314 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.440982564 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44488598 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.601296135 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.991699385 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.71708171 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.731478136 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7365527 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451150562 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.502332326 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.448605312 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.728896697 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503669953 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.831425387 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.738621994 seconds)
  done (took 129.471557294 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.711574036 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549253941 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.810297638 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.995671921 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.92264295 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.574903929 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.545916538 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.685815639 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.455425138 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543828606 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.085091419 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.527872858 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.181205901 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.503900708 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.54464152 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563681474 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.828526614 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.412279939 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.06441681 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.048080963 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.43757215 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.576425031 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.963368825 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.63094315 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.437180239 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.012852612 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.352800739 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.941531726 seconds)
  done (took 54.213798263 seconds)
done (took 538.560357598 seconds)
SAVING RESULT...
DONE!
