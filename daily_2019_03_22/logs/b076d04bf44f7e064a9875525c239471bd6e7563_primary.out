cset: moving following pidspec: 22563
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340974247 seconds)
loading group "string"... done (took 0.596776407 seconds)
loading group "linalg"... done (took 7.351163666 seconds)
loading group "parallel"... done (took 0.170571419 seconds)
loading group "find"... done (took 1.18686028 seconds)
loading group "tuple"... done (took 2.080713692 seconds)
loading group "dates"... done (took 1.308414704 seconds)
loading group "micro"... done (took 0.243839723 seconds)
loading group "io"... done (took 0.989829904 seconds)
loading group "scalar"... done (took 41.172013817 seconds)
loading group "sparse"... done (took 13.346013662 seconds)
loading group "broadcast"... done (took 1.055342262 seconds)
loading group "union"... done (took 14.554218659 seconds)
loading group "simd"... done (took 4.928047093 seconds)
loading group "random"... done (took 9.811226643 seconds)
loading group "problem"... done (took 1.990400533 seconds)
loading group "array"... done (took 22.916356001 seconds)
loading group "misc"... done (took 2.149973535 seconds)
loading group "sort"... done (took 3.726477078 seconds)
loading group "collection"... done (took 20.489466172 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.569790082 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148713513 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121939152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146472837 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192198504 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135893124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.148531839 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088754895 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.912481177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163059072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145350293 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530351482 seconds)
done (took 5.04077345 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198911187 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089395058 seconds)
    (2/2) benchmarking "String"...
    done (took 0.100430365 seconds)
  done (took 0.865686106 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068337515 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129966557 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083109576 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070489128 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069014588 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084348509 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069801195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067976768 seconds)
  done (took 1.258261916 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075938004 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071079662 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087697378 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070292853 seconds)
  done (took 0.989109083 seconds)
done (took 4.070613311 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.953579722 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.262071373 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193456211 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.476703362 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.156866314 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19482866 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669026782 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345911673 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.222499499 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.105596016 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11010376 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396666735 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110484362 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67347433 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079029722 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.11142861 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161587523 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423541924 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084174084 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08623128 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106883864 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144659191 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105225053 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082091563 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172999579 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071128554 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.15316887 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09793062 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072074235 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.253109856 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193262097 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688820925 seconds)
  done (took 10.683609534 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103289493 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12179508 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071666726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144791225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120633552 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072735766 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073363182 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084410273 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093555499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162002775 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118339539 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124093815 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06853725 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072243834 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106489977 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232753971 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095915216 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10462025 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074753275 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078121149 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127640913 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098519288 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082552459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095521228 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155288012 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19739963 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102723888 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115563877 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072220316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101320712 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132574682 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133312922 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068804223 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084379784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159324425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097449979 seconds)
  done (took 4.645414667 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.139470909 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.181839645 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096214381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162744047 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130236856 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088790408 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133834934 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070020296 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106738542 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261424811 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.096451953 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.499591878 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130417154 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089395282 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068933059 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087861307 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069129302 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.62345036 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146070449 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108805668 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106059316 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078294968 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090410804 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366411676 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072634824 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0686058 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088720259 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062482095 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153115993 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0710617 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.272609727 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109767754 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071212691 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121176365 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.186538474 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100036208 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129002552 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083877434 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070272083 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176114201 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074461762 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085358984 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090581313 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122153757 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121756958 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084325869 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069617171 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185584991 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06821028 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101708162 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.976484279 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068765794 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169119858 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080807603 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084971748 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298817496 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090368228 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069531758 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08491025 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.286713318 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.175387268 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071242389 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06881946 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092026653 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071644098 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379488216 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087523478 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.731709056 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072742061 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079969624 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087519595 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068595704 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091896695 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074861402 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103356067 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069234297 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068670576 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08496303 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067570952 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08858145 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068596234 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105424585 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214008384 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07262625 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086536034 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069355667 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08883609 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117888514 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088527235 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07020058 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118424415 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072045265 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06916367 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.124878844 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069888972 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10885259 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087143881 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117668129 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085950737 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160081338 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069424953 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117085239 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076314405 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082480146 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117227907 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085575451 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076687472 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160657303 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085101834 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068155606 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069207735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086405725 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070747303 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088953412 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085472839 seconds)
  done (took 21.689957442 seconds)
done (took 38.841052803 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321976082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097015246 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096406322 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079269188 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098358262 seconds)
  done (took 1.462462267 seconds)
done (took 2.201386571 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.154286665 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106618565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083759293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101900219 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083522455 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106935893 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121059502 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085055651 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122152258 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067325705 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117431509 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066552442 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081951724 seconds)
  done (took 2.065358755 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085841253 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087711202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088516006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084335161 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081368944 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08541759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081598744 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108399634 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082754827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09079643 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066921947 seconds)
  done (took 1.675451169 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084034017 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086233244 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088575712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08281727 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081898706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083543702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082083931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106005981 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082523609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091378465 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066663873 seconds)
  done (took 1.668241712 seconds)
done (took 6.135691955 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082567606 seconds)
  done (took 0.813615928 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.741491339 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.779782524 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085689505 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14028622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.229912032 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.16214992 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.458143094 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.116184162 seconds)
  done (took 10.663614236 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10440328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090546948 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072149221 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089317103 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086752849 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093332031 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074564751 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073260356 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090246601 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071361106 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088567305 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074640154 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089459329 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072544004 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089213351 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075008702 seconds)
  done (took 2.139645343 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.108923249 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.107436579 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095334853 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079503435 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093167709 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076155798 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096327584 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077171358 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090283966 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076474992 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095656946 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078419333 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09113758 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068821819 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093771088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080324839 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090791505 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078422856 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09528812 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079221353 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09526998 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068597709 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091670548 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079081565 seconds)
  done (took 2.942042468 seconds)
done (took 17.294771048 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.139157123 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080434836 seconds)
  done (took 0.957262194 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086732823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102772306 seconds)
  done (took 0.934768893 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086820758 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084254967 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093526832 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097801288 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085880061 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070659499 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107459009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069987472 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085825846 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070788444 seconds)
  done (took 1.598021614 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072998826 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097698547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073635181 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100864 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07802672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08318904 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077503465 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087888992 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082724318 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0821878 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073906253 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102574617 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074722336 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103516204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093319449 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071868257 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.09131826 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071031704 seconds)
  done (took 2.26496941 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069305052 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070605391 seconds)
  done (took 0.88795847 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07030132 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067021078 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085129962 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069641811 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082100803 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065749847 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082293507 seconds)
  done (took 1.270038932 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.427770101 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113768339 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.273449163 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073942445 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109069359 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30325205 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06870658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073791931 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092034238 seconds)
  done (took 2.327490452 seconds)
done (took 10.984082601 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084098708 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089646408 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115566087 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.448576543 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109633539 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069553206 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146755653 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219033479 seconds)
done (took 2.023828308 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130372589 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.645037673 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.426452533 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222639269 seconds)
  done (took 2.041032871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.396945898 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094494976 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076620005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070697369 seconds)
  done (took 1.389578771 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07024778 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072945442 seconds)
  done (took 0.895158129 seconds)
done (took 5.204189324 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070786199 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069335447 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.083708166 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07033671 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.120736504 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067257647 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067623036 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084799539 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070048734 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087289375 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069899307 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069995748 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087110737 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069853292 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0670418 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082600113 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069421182 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066965581 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083081954 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067101007 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084876359 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067485445 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066676939 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08297422 seconds)
  done (took 2.619578239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089640057 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086340717 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075989615 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091394699 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074595113 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091871797 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078474451 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069958114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0903992 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072592805 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090321557 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073574219 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088068381 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074333657 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087769052 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.0747678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091471429 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069763933 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071596654 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090155716 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075243054 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086607789 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073688703 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091423354 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074618936 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089915726 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072839941 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086192641 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075687554 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090069379 seconds)
  done (took 3.201728207 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07501864 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067240038 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083872884 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073669497 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066753151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085384608 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067251448 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083404886 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068280653 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066940978 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084515826 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066888172 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066642817 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085007679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06773091 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086440124 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086710045 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067086729 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08337423 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067545361 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08605701 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067363549 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067532237 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083495129 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068118407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066704218 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083900629 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066929601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083911101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066826164 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070169982 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086657147 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06664664 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073798694 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087346584 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067281065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070663562 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083297344 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067523826 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082419953 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066671094 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066377879 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083234943 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073190961 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066747383 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085950529 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067628048 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085319388 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067822218 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070290708 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0832929 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067141583 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084988618 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068787293 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071731606 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082786398 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067731557 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066309816 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084695487 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067765748 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082642531 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066620459 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069540577 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084134854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083102315 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090045599 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066606509 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068748544 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084802247 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069940594 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069260946 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09765519 seconds)
  done (took 6.164788711 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122160294 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096463295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086656177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069172861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082143982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067431541 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070997616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083732879 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069381163 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08945782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067457539 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085322584 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069364343 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083393541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084005246 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06942455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089752844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065429792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067423632 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087686658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068609073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087440963 seconds)
  done (took 2.524867471 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19349557 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091031878 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.115944132 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093855776 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088852336 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077038048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0897543 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074272561 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073157375 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088017792 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072286516 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090002593 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071507152 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087654741 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071291479 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088707898 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074331724 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088073294 seconds)
  done (took 2.389922247 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082105261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069497976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110136434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06935674 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087757449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072451448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091822492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079437596 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090015278 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070060275 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094735125 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0725756 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.200093151 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070148034 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072351286 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087005845 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071986337 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086261828 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078921651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091934696 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075530321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094572882 seconds)
  done (took 2.681320135 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084622384 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071264883 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104843087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088921618 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066318332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067883125 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092514335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069410109 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093405035 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072126078 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085783621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069975376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073929581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086624219 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074842723 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085954358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072107513 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085750304 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071713876 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066623318 seconds)
  done (took 2.347688473 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091680015 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087457703 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071543718 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09599744 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071480245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087556339 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079711867 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087572269 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07163809 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113393188 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07177012 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087956877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080893133 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093733334 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071776549 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096409152 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079652464 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096513514 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087813173 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07107066 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112240584 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071455695 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096565434 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071446711 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088432926 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072085861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088286201 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076850238 seconds)
  done (took 3.139624018 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070630563 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070878631 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08396963 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067151256 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067322952 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084775015 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067006364 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067265485 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086109327 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067296379 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085912585 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070023677 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069243908 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086142441 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069211373 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069854641 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086507123 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066847248 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066918243 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083646534 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069828093 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085673418 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069522347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067048398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083761548 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070509536 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067603556 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083774558 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069676414 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0677728 seconds)
  done (took 2.99156859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081065067 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095001836 seconds)
  done (took 0.946228329 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068096414 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085253413 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084775967 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074004383 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092417185 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070926743 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095353542 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07478999 seconds)
  done (took 1.414570244 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086300618 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081829435 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088862554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099449849 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082677456 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087339099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163826716 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088698805 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077649406 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086296397 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085385016 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069704713 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094455223 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070262152 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094190001 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076697511 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084018886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075692224 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073016824 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085263958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071363546 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098226864 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071948233 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084460196 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071670756 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.079451508 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100499893 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070469302 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091071581 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078096884 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093126113 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064861024 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069944344 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088201358 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068307592 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097303853 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087084229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090714511 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080091328 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088060709 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081039879 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081886236 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074887406 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076251767 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098022213 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070811596 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088535458 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065634037 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084742831 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072438851 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065637586 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087462129 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065527019 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094486239 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073555821 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081041072 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085922454 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071600438 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089724593 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073544827 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093295594 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072491342 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072442372 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086619423 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078014882 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091443749 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080833938 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081457796 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064366252 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068785854 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09858068 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094550509 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093938387 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071021479 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088296371 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067786443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073147687 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088801708 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077014024 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093226413 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070765525 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092943561 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07796802 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087431028 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072405436 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077414649 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086139345 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072699731 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084677229 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088535379 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087117482 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069270418 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068141444 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09816808 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074081472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087154718 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068352748 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09382868 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06453053 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070823077 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088432564 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070753989 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099656956 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075497687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093027654 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079222341 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09582985 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070718566 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072654289 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084809966 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071601608 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086303619 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077933927 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063568802 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090404953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071270867 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087570017 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079430773 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085165551 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07012081 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077633174 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093291871 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068364038 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084052866 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073376703 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086580789 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074316473 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078470354 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085843453 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065310553 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082747516 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074144885 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069923038 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091014922 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07525407 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090599915 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065416946 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085151791 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075597404 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097214085 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07130528 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071007108 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094895563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072348564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087021747 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078420479 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073170038 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087684377 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076918177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088190591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065850764 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09128197 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073272829 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069261847 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091516458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074153783 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090043269 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070693974 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068709169 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09297008 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07116138 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086687903 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069736626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086033532 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082101393 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072043688 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082843628 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067354543 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094960093 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068395017 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069714283 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087245647 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072802899 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088466573 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069499688 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086810543 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072005098 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08232545 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092566837 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072268315 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093417012 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081516235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088081717 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07317377 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087293387 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071096825 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071219127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097945761 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076168054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092421733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073034414 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08421846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076724865 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077824278 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087395888 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068534601 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086706081 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074686933 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092953247 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07373633 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071377588 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086737672 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071378001 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091693784 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073681536 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069308626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087849073 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075834583 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087076098 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07713168 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089110494 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081615754 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092107254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066068309 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074050579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086593899 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077664215 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082939703 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068432764 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06864801 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089308591 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069592195 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091235961 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06485404 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077513126 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096007485 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070607476 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087473641 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070293588 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094186633 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072457667 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07394117 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091347806 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077339446 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098757406 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070313172 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090773099 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082265526 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069840585 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082699093 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076108432 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085958788 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06991576 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068726162 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085805006 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073982343 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097340351 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077895009 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081824395 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07340107 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068606321 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087274977 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066767899 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09258452 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073286827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070950939 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095567444 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071073556 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08875524 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074976073 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08760793 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071284522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070930318 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090300091 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071153439 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090813756 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069922661 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091231209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069643952 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068044546 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089615737 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070490695 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069738993 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093817157 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070336883 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088657979 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073394643 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088633149 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071631636 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070453851 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087113473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07463922 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088447159 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071089744 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073508926 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082969813 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078634319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087684475 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07935255 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070539907 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085012252 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076006414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090778618 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076533466 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089639016 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071970415 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071196743 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088369057 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073349373 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094624785 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069132205 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099707295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07957604 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088758107 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073531174 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07065712 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089530215 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069069188 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088023151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071655931 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070602916 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087532086 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075402371 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090841067 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070247661 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072409829 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089052416 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071121181 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089409709 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06458477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070026485 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088096994 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070953008 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099080099 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071025505 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087788836 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069655803 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07192177 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087231562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067478559 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095839727 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080477987 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089047883 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077908541 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068834991 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090118181 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081421583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085407034 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068691782 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085462646 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068358194 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077849091 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088785847 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08066861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087779956 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069892837 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068151462 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089078206 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069313883 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082844616 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069095913 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074926538 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087216803 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070277139 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088034942 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074264134 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071076576 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098543983 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069428407 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088835823 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071564643 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084938031 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069141002 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069479726 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091472074 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072117451 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067208504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086326747 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070036685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08859353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071756657 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069662492 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090327691 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077901739 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088412243 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07397705 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091375407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065648529 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073447213 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088265461 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070679181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086786089 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074558792 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073639524 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089835929 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079507408 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087928551 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071472492 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088458334 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068434582 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070567818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088259093 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071015182 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087283186 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072091031 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078340572 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087081677 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074070433 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088155099 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070695424 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095498316 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071181562 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073694964 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095103594 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071042633 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090007102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079392501 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092587347 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074522587 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089766339 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071998871 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076591686 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087300571 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077225848 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088291448 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071964873 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072084009 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086312517 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070880639 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088003742 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070082668 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076787354 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089196088 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070672139 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087340234 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068814878 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070935684 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091984819 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07861944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0910884 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07423132 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082888715 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068118362 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071943704 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08679015 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072039373 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09135355 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076303685 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072916484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088404488 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070224668 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09846967 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077512546 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091641762 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068277578 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074736529 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090020108 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07372538 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089524192 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0716596 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07148244 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092298085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072670334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088171606 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07870454 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090894279 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072608862 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072562285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089866816 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070949741 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065396645 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072117962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072455716 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094150483 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073133576 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088483795 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082011985 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067269736 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088968439 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074057789 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088008647 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075307505 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083490316 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071974447 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071993234 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09018791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065876424 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08719057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068929357 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073384973 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088148372 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066296583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099136889 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080092064 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092153281 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069870112 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068658495 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08359688 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066035752 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086849158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071738731 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072085364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100629731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069592025 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087201817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066777387 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070594296 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091631275 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074107507 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086047901 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066086659 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069907155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091384062 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076629679 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087362488 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071195798 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073591372 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091011039 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068408296 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092448751 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067824784 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091594844 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085323442 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071496439 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089459419 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077347729 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09695145 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071702314 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083412974 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.072026849 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073613657 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089439964 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071679137 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08977245 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086640436 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092589192 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069418693 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086111846 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073430272 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069616798 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097175575 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072361208 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089495584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075304543 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071455792 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098555987 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073099289 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097514841 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073362211 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092101008 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069431577 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088837718 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068931581 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069573987 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0901953 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.072055721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093747167 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078837935 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08777642 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082286453 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098683973 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073372444 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067532905 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088493365 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071055691 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064967323 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090580129 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068676088 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087317262 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069425623 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068794314 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089842167 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076613699 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08923432 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072432918 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069816987 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084137795 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072679928 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091100965 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073416769 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066960297 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090663217 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072497554 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093339771 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074442025 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086382507 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072761109 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072277303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089521236 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067232097 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095832537 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069969514 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073382748 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088212947 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07117479 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089387901 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074756586 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076145643 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091069586 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072868581 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097803337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073744853 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085515496 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068749934 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075188648 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087829574 seconds)
  done (took 48.524260158 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111860264 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08622266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066564 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084738775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079251532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085507826 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06699847 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067100686 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085168932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070123267 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084739836 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066113225 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093317769 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090801589 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097545055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088854066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066839447 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066908707 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084876983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067612872 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094411269 seconds)
  done (took 2.507919729 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.092149411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105777021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082340671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105113066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09508395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081250659 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10029869 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081895628 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103171498 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09526139 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08500143 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100232645 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077848904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096260558 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077234183 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09780536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10323686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076328983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100374305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081641806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097817801 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080498303 seconds)
  done (took 2.81707008 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070339294 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069946723 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09031494 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065681735 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069650698 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084079674 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074125068 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086788385 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07422718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068137276 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088232419 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06873472 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089432796 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07689259 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.07002562 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086147425 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137715473 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074981311 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088531065 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070901913 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065431471 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091898982 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065513816 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083845809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068823151 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073854643 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089759396 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068196898 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088473017 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069370516 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069571443 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086413304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072394386 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069714263 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08850309 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069069234 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088607937 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071035383 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06565396 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087409853 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070739463 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08389152 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070570347 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071416701 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087361271 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068050324 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070513698 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089320011 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065748609 seconds)
  done (took 4.624417836 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086806782 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144565515 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092883025 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127407444 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084825971 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098519309 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073727728 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127544902 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087382101 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069045224 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10640576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085357321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090909716 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07537287 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092391435 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070845102 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089566336 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070057094 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094126601 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070539996 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092970767 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078448778 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104074424 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08427054 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093344038 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06995383 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088161715 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075238235 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103391711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094063777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07487086 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094185913 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086626413 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091199805 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0707776 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09080922 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088337463 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089337 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072894311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085957287 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07305065 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092250479 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077902953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106014879 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0709969 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094327124 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070900498 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085726203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083995995 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091089746 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078953567 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104478512 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07412588 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089132476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075269931 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105319067 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070022278 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087780481 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072993458 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101665772 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067419199 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092766459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103120172 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071913902 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095810097 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086108084 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094259201 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074553765 seconds)
  done (took 6.910601968 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079678303 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095687249 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085641771 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105172767 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095606087 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078201582 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09532668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076930037 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094856122 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081572311 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096052738 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119383596 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073000498 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098989753 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076727525 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095813253 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076937927 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096268839 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09501588 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078713201 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095855374 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085298515 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097078381 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104157237 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10714753 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091109415 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077134657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096696584 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104033766 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078061841 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108177953 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077297007 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096692685 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104554416 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.089806253 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095763407 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069863202 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095452352 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0766619 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095977807 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071888466 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10466619 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095455881 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072090617 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095372036 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07676946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103475868 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.10785234 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08033422 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100420225 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076430034 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104597143 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093585763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076965767 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103281974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128616818 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082985268 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101882443 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092770064 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08333784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102752655 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108362249 seconds)
  done (took 6.529307438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090091811 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096082008 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099476062 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065154935 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067336973 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092032779 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067300581 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085290094 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078970264 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095504746 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079677244 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091270572 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07577961 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099037192 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090627613 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076334322 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090575081 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072944244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096204387 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072322146 seconds)
  done (took 2.502026551 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079660173 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105588124 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071875178 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094847637 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073784669 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076306046 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093308691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073202662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091561672 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073995824 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101283958 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081269197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090828707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076700389 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099852161 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077297376 seconds)
  done (took 2.18650108 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082406933 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098398016 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085969417 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091100155 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069626153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086868297 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070799717 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066195755 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087713905 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084958865 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09175502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073356422 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090602265 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069553213 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06688385 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093623846 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065865555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087705493 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070817872 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104894783 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082440179 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088863901 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071303194 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091721341 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071200319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096103392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071609382 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067420405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088925807 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070607723 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090673375 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078321266 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087414953 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069531747 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087104586 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068141402 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070047965 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089723214 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073646074 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089202217 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069846407 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088378986 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071041413 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071400557 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086131129 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071156231 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084863408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076733627 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067597263 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09107555 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069857557 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091788855 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071503636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100336782 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074289577 seconds)
  done (took 5.257760421 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083047022 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071251019 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084128229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067796721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091709141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073521337 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072735896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09312485 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07241453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087204874 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072673005 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091941796 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073122815 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073330583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092028235 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074034994 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085833794 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073151853 seconds)
  done (took 2.263580842 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075627249 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069409745 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096389053 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071008979 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09002129 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073916409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066412493 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089211806 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069016894 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089119813 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071187493 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072449595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088304962 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072870873 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089685022 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071025991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071764 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089313567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071196412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084761139 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072837365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068509635 seconds)
  done (took 2.546407258 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075565583 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.098159983 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.171957568 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112965024 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086590632 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.105199552 seconds)
  done (took 1.483568614 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095753591 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104096975 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071569173 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111908857 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07861146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091467905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073370771 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091959009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082105131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105893443 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07238937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101676644 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100134058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084350853 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098558092 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077669688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092445445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07210984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091073335 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110379503 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074583365 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100242698 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073092367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091661274 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072852659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100816164 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100150897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086495639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091545055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081588139 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098109281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072141553 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101495773 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104794134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074535367 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099047795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071492523 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11046912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096396086 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080812799 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090908827 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078272352 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098561519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077384019 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100788093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091606641 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079053924 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091544873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073319124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118971803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096175135 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08221285 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098170787 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081509728 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101473646 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116753684 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105473322 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081940871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097860763 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106219289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08255313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09850752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081144622 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105450061 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096382511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080774604 seconds)
  done (took 6.832274563 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085577831 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108374523 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072964187 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10581814 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100803064 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072796878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091657329 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073513551 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091056175 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071882306 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134946266 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0727104 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101196393 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09957394 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073397269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091128355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072843081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100436835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071757691 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117538504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090917793 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08002025 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099152916 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097901375 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084032317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095679496 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069663663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089790432 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069364115 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089516707 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094873149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071824689 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097606446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071219419 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098276907 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071336738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08996763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075422377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090312145 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076316877 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099317819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107513555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071129216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090092216 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102406449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071452274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088643155 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070572998 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089963775 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070786707 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104520276 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08475282 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103579167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097660431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071716213 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090135164 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071614271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089855732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070364667 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095096408 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098138788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070505467 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115224537 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070887744 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092999256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100557742 seconds)
  done (took 6.63884992 seconds)
done (took 132.797179079 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205369996 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185943839 seconds)
  done (took 1.21902286 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072366513 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120774923 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083667654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132216476 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088237381 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102238892 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120118232 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081694086 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0686242 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090506468 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071667838 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092167648 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136916005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06934052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088368504 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071047742 seconds)
  done (took 2.324793927 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106480377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202179595 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114559428 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069183312 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10383138 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08248876 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089430473 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081886866 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096876447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069979702 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101004329 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0805184 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068780621 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100511561 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095992103 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082569755 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068853547 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102273249 seconds)
  done (took 2.557089414 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109133326 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146041208 seconds)
  done (took 1.090861473 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203220501 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124463373 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20674663 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.431790334 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.217398814 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.298548405 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179429891 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182035112 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159765513 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170964694 seconds)
  done (took 3.00692992 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101968217 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174648083 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320428028 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141030788 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089871154 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119297652 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141476662 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111312159 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085627576 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10387055 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104034857 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079584686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1203311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077182047 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096580918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080013327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123277152 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076171345 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099057591 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078723026 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121087118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068526138 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097759307 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076304772 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099916137 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08089429 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088784962 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068952381 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098178101 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07929543 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099497069 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11613406 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081400507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13299159 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10482666 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136174209 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078924384 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095006148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077176184 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094956797 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079805788 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098789221 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106055977 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080540539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067650759 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099598116 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068680116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087493131 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082368661 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099428791 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081977398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100901472 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134708996 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098842265 seconds)
  done (took 6.340726748 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.760940929 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137483776 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073649447 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.826534749 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116986618 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085524259 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.751604025 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096901698 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235653116 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765236207 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11570802 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08026944 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20969695 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220461075 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935577356 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293317999 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64605562 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107879532 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111511425 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137618198 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165792304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160988403 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152192201 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.405834095 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098558772 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074515425 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140924601 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100998053 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144388677 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086150115 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097135667 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158988205 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232567322 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185374729 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077069721 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093334782 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072250524 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152156888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249712869 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195585838 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161040827 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071313253 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072512909 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164755855 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13472553 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071014528 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144962904 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156938248 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173008809 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076912636 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079107692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166538787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144063554 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.149466474 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103972929 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281208315 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292017605 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092596724 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125625299 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087748457 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244024041 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085566702 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205814096 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142601954 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195088923 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073481991 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757615144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153972838 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072017663 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103757877 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123641203 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078104506 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143489782 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14864085 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37393861 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146614071 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096665592 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071830303 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221179637 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086354864 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093206625 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146001692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078264555 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126363759 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170685536 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151109227 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15228384 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219024208 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147219582 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165590335 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077048313 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129363824 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0977413 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195429454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179385604 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168044927 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191488319 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144502997 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14692188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150812272 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101144647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.156265498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124229551 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104329202 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144187323 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197972248 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.106309695 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106352764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075995603 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165423909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129037209 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089953388 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143057083 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174713164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436531213 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152341863 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069024043 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110261212 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142258639 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144593789 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099140642 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216266874 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127376488 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173056357 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125733611 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070739905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124692476 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146910336 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102791751 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126719138 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14337464 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079240149 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217202509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196915955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102830996 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20226023 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165440429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077336211 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176256413 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125047376 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149880056 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082021908 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143421567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099471219 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777270596 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148397002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125365528 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077294523 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170341065 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071829375 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107190863 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106069911 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070640413 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752579459 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088922258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.1051518 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084557673 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099904074 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12442504 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140071211 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096392276 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144958164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188846903 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100528666 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122765158 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105168714 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144550534 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07836244 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10623156 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08634038 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107026948 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128150403 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075369529 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108240781 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152123427 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146228433 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201529028 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548909283 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093927683 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086407399 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209915342 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093906589 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249223057 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161790284 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.185469778 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146198963 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104252738 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288970396 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149715626 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171845306 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091560168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15854777 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091433307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142432318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147927277 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093684403 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079558831 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146484331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172372343 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150684555 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948232781 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073230431 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207457995 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09042653 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155727573 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07869862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102915132 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256617651 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094510257 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154209323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147624236 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097558405 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087378873 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69806393 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086235121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163828366 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079879522 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204455309 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.150660984 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144344374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145166836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104412608 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.148292203 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.195498514 seconds)
  done (took 41.48025601 seconds)
done (took 58.851700323 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290988476 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201224746 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258289153 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150498859 seconds)
  done (took 1.839786883 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.153665747 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112202495 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124875477 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090941586 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.11011287 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091237201 seconds)
  done (took 1.546793445 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.434383551 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282319802 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244858276 seconds)
  done (took 1.821071186 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.309763373 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242317077 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465548225 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.315355639 seconds)
  done (took 2.305336571 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203460728 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122012511 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093196842 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090446494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.170603941 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270822137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133181571 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196164451 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081472197 seconds)
  done (took 2.27292862 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20530589 seconds)
done (took 10.85750323 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.288573125 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.237551452 seconds)
    (3/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.336095262 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.114991761 seconds)
    (5/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.240650612 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.188789572 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.139587829 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.211347653 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086989597 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.289253478 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.270393589 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11782083 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.283104337 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.239789028 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110882713 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081834957 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10437246 seconds)
    (18/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07434273 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099121485 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.241305854 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.246784177 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091767364 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.18857954 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101106771 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.251687382 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124995943 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.258151789 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.306970716 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140577266 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.273422457 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.253827562 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.109965271 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083511879 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.271665855 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076771321 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09112028 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.242374916 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144866643 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0781986 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.160444294 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103313163 seconds)
    (42/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07729167 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109516369 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.163930193 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140311486 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093070814 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079480226 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.128739356 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.225716982 seconds)
    (50/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.089879082 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.199840482 seconds)
    (52/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.057204834 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080759272 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.131453966 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101064663 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.101433954 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173284788 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091384609 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077401191 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127011625 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09509786 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102179868 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09670567 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084007356 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055550892 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077839022 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072481629 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077683993 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.093486138 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095396477 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.164116909 seconds)
    (72/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.123347858 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070145515 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074342791 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206864962 seconds)
    (76/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10182924 seconds)
    (77/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072776903 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081142096 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09692465 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078619202 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.181533473 seconds)
    (82/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066482402 seconds)
    (83/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.231502363 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.123317667 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082368803 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090904739 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.228327676 seconds)
    (88/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103400422 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079916463 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102147209 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056892869 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.226705472 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.07143973 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.076275496 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177436342 seconds)
    (96/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096173206 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.260334293 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081953053 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.155869688 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.20398349 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.144737638 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070117911 seconds)
    (103/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.151625171 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.27017244 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078592547 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071850975 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094308971 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103853195 seconds)
    (109/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09922641 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117229239 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24049618 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093403065 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068324681 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126476777 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115619811 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204871928 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076420089 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109243219 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079243079 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172900035 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065818455 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170918729 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14576882 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140337668 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119158643 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.231996251 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.264477484 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.243078367 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.150201366 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054514928 seconds)
    (131/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075829531 seconds)
    (132/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.134685421 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075783597 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.207058442 seconds)
    (135/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072909678 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.164026145 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100256969 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.286442817 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063527873 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076442294 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076620268 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077856728 seconds)
    (143/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135775125 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082194919 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078444864 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098141984 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075376605 seconds)
    (148/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101911686 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07777784 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07758527 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055763863 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055982289 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06949316 seconds)
    (154/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129837151 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079524944 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100832858 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05595147 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.247729339 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076063284 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09276706 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078811269 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118521542 seconds)
    (163/309) benchmarking ("sort", Int8, false)...
    done (took 0.172134485 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078748261 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163181995 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069876185 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.114599925 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080457386 seconds)
    (169/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103329751 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105287569 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100646748 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.077504033 seconds)
    (173/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063231622 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077851178 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199301471 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055620546 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093491248 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070535758 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073650802 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.116082481 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056610193 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.12049428 seconds)
    (183/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075890146 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07097671 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078679968 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076612156 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06998483 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141077664 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076946404 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103968171 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055535217 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105345228 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.114942178 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079281276 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079821046 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072918011 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174181148 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05470114 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054428639 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098470073 seconds)
    (201/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055811647 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131912164 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0564801 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071831436 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14564795 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076955266 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090760492 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06863774 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056619813 seconds)
    (210/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076628937 seconds)
    (211/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064769865 seconds)
    (212/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080972763 seconds)
    (213/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139197863 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074962514 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114413299 seconds)
    (216/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07191786 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144647281 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079565616 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.057132636 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100747878 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070311265 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056089166 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094500117 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096943916 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097619019 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068967066 seconds)
    (227/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104813964 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138420561 seconds)
    (229/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091976321 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073520439 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144862647 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068571454 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.108743606 seconds)
    (234/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080990473 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096982292 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113980228 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055723358 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166746475 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07663649 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092457839 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055546471 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072895641 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054877648 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078225785 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055989368 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055820116 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088407752 seconds)
    (248/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056890027 seconds)
    (249/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056187575 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055629837 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107632331 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.171647896 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148748156 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093232841 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.097019457 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093957269 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070541469 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057133775 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07855985 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077258268 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076743128 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098880856 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094501923 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054686787 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098937691 seconds)
    (266/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065065555 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053661413 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077721827 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.244760227 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076339918 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06985245 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.090206756 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055646964 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16678919 seconds)
    (275/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096366589 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09304259 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056100037 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071228972 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094736036 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105695538 seconds)
    (281/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.080389207 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 0.129590096 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098891127 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067460998 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069058121 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077879097 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139804616 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.077527866 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068417717 seconds)
    (290/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.0558845 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06453387 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079966922 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079201842 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092442204 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070516133 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056457417 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109388634 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077259434 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075786252 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.246754746 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117532403 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084074409 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077799704 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069468739 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 0.155598171 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074817867 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091441016 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122137396 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055282253 seconds)
  done (took 36.495245998 seconds)
done (took 37.369274989 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08625729 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120035622 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077834347 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11863072 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08461423 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103115133 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075200789 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103949495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083578435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106936708 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082760851 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056801539 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099936229 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078270302 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099559479 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095861934 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104116009 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075777523 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098960711 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068551307 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075962682 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090818137 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070458814 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057522326 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103867957 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07599663 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097657231 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077701865 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067995474 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090694715 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071391307 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097244804 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0688281 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081357787 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097437613 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076655384 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100165287 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079108369 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070519522 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090820399 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076657869 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090835188 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075994342 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075853657 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09664176 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074528743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098874519 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08258026 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11790733 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071153223 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076654952 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10181937 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080343491 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097969876 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072651279 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098864145 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073998587 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096404876 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099419275 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07161013 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098980141 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078270311 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074563315 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098878599 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076740745 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101177892 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079458875 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096686459 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078200504 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074229993 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090527744 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076801889 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093870473 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06836943 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080128627 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101973385 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06788535 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074483716 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098490141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075157204 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089757068 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070781673 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069871188 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096821799 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070751334 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057346292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09421205 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074818107 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068259186 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098989572 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075311793 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097370044 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070451394 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080522516 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090173219 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074008659 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091146775 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069179805 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070258294 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094580065 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068635399 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070553661 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099592729 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070831519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09616468 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083666368 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067688795 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096840052 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068209634 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067598213 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106697072 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077446964 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090973769 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071640983 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089302982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076355302 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067750436 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090166172 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069079023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067966607 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096266035 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069125364 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071114407 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097916265 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082377239 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092740064 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07221462 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070807937 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090754048 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074601547 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068207107 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090800025 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070865554 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087607696 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070585396 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069345628 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098036585 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070328948 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07665016 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092642467 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076715322 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094903289 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074798555 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074008034 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089131644 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061499553 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070388802 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093102536 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070905446 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090193133 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070447739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068797919 seconds)
done (took 13.557396113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070616988 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176746613 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130737811 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100594008 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114156798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069310633 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10260264 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132633707 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071373176 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131695598 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091536841 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111048415 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.142575629 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067931947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06878341 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094671898 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070881716 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115436516 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106664727 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112573045 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145743722 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067595085 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125376317 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09415415 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115541459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120395415 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069719355 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071993338 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094602506 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128100622 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089468342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072220677 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091436615 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104543373 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120807377 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111559412 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069733463 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109243705 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068996148 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068684548 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118574615 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127051612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084891975 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.107684511 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072657618 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09431289 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070797038 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.111447277 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095343684 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.10674066 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11566015 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138647281 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072386289 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108643015 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06804159 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114163343 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086815648 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093631116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069904084 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071920757 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091215742 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072687 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114574795 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096898857 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096036623 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086413001 seconds)
  done (took 7.430082808 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090329576 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120611884 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08788946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110781685 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068584582 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069270728 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092227305 seconds)
  done (took 1.573722909 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072048668 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095227218 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116839279 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093388347 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111852056 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090814143 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102002431 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069558279 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109844106 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071318455 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114398603 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108428129 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0943886 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077526187 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118069232 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069453079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094498596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092539486 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072914305 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116408291 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072753733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113456024 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071683611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070084269 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108026895 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070645533 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14164059 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074866303 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093928032 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073321153 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0676573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143401044 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1075505 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081372495 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092226211 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086045368 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107218214 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068342345 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086324184 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097403346 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085494584 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092829004 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071177974 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068214175 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097538415 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081765742 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093502098 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070302911 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072491789 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112999615 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071016088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107124087 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069771597 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074059914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094187423 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07545743 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102433238 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071213573 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090804356 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095504464 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088501312 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111196608 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086112234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11145827 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072694672 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106465512 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085718684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072307981 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094107815 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073685572 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110011943 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068024678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071628804 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104396805 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072154449 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116610077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094492824 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094265972 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080749085 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070212201 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093563262 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070732254 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116914229 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073976725 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070051014 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09747944 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073223684 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090948178 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069169872 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073641911 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091253811 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071598832 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072683536 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093406805 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072694702 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110704375 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071109938 seconds)
  done (took 9.546908326 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073607585 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072990549 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097316892 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071352721 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071754099 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094678019 seconds)
  done (took 1.427509765 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.105232624 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096706875 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085430764 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098937538 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111594915 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108788499 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087079108 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109214143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087770183 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10584445 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08663824 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10931587 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091125411 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099362095 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085699907 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099524635 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086685803 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105519528 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083837082 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100989245 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092198875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099995916 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0769285 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111180174 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076081923 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101653774 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083864672 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110068091 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085583324 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112321514 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0793161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076693344 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09947723 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110071225 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087152576 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10002452 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076221336 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074246564 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104228938 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073185714 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109177736 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076521178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104678454 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074792706 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110060076 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074702867 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098214366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080903423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108486582 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074391852 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097787303 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075606751 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096580122 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076224395 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074697014 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109644736 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074717099 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109898896 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076701946 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098275038 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073419322 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096544417 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085776761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097312197 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084300479 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09741688 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075058729 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099743231 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077051048 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099398314 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074992583 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073312496 seconds)
  done (took 7.558093524 seconds)
done (took 28.464639377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.661826167 seconds)
  done (took 1.598431218 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.812152006 seconds)
  done (took 1.752725546 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.806570472 seconds)
  done (took 16.750901869 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.663459883 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.820995301 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.830405549 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164039701 seconds)
  done (took 3.414968561 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.890826116 seconds)
  done (took 1.854430329 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249161352 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257310659 seconds)
  done (took 1.451713722 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734798374 seconds)
  done (took 1.68265627 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.302444339 seconds)
  done (took 2.246549731 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349808508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188573733 seconds)
  done (took 1.49394309 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540455563 seconds)
  done (took 1.491619547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.561488263 seconds)
  done (took 7.519019461 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237339737 seconds)
  done (took 1.205573881 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.280025995 seconds)
  done (took 1.236385455 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.279933414 seconds)
  done (took 4.235276761 seconds)
done (took 48.882048413 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084236281 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086762965 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107288198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081892469 seconds)
  done (took 1.308530196 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083842546 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078242399 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106452007 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077844609 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10704689 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078613837 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103417698 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083638579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101231007 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079751699 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07832157 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102132311 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08144402 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103020741 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076243652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081135886 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106866668 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078772319 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1041103 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077384537 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096951631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07826255 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079483351 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099078945 seconds)
  done (took 3.105107803 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083955067 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078265433 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10405326 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077351942 seconds)
  done (took 1.305717674 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082502694 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.122723062 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095940018 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.106124728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09738057 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115419029 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072239838 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07271995 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097983593 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080670495 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094255255 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10340014 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115855223 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079741931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105700588 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070401549 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072418884 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11492715 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080793709 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104899691 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07356478 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102875129 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071347976 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118203326 seconds)
  done (took 3.217087137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083783458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132710264 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083460024 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118388338 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095431338 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06886386 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10395134 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094562798 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154588873 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068738502 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098098245 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069001473 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099070225 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069186678 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079935826 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137595515 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140772167 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072910462 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125001227 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068986495 seconds)
  done (took 2.925454833 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080995925 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075358997 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093648 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072028329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079787945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099820066 seconds)
  done (took 1.46959694 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07325398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072257675 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094872461 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069762415 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074332135 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093593072 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06858965 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070274057 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09394301 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069913561 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092205058 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068967152 seconds)
  done (took 1.907235431 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.48550819 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07317435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095845005 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068183138 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074027359 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093198335 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083761829 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070549003 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11872343 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069343772 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093530521 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071594324 seconds)
  done (took 2.366258827 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275275767 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080881756 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.336827318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173130293 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144632779 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162090975 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107842122 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145760103 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204047001 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14429388 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235250609 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206305947 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139695694 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173097068 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11791111 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136867103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191976934 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228827686 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13498485 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235182574 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190932124 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162045009 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212356377 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108789155 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139445494 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150535235 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09989958 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083804615 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23910918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191327868 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183985073 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142340672 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12381266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241942719 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228810249 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17742251 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16694417 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113543373 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161168346 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171882309 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270968949 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11779328 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201729769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137877441 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109800328 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178483857 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150709455 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152410354 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140064512 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118175601 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182653412 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247718913 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173033772 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11646628 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141129271 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144899128 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147840928 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107404776 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27791843 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202223552 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189354342 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074938273 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126025172 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1963451 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16588292 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146433606 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184706332 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097671189 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200596971 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195099718 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149418697 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206966585 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166211453 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11871143 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152103354 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177813404 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159938589 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23682269 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158720018 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102342495 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157200197 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131907028 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085889369 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17324858 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079330175 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243122272 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129471744 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144104884 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14255096 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117018641 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140932641 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227902682 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210886565 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109982549 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094760492 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133557481 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155521992 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182516993 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1178248 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139725504 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153470364 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082125501 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196657512 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080003502 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157610661 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107086245 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158427423 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16772468 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079357966 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184025821 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107121298 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133039669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171304492 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227788643 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119600051 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08682713 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235445502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161782646 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136805033 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182157928 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222283668 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130226561 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131885182 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185944531 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253439151 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119395098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205171891 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135003686 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113304071 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092050271 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184492027 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145965251 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152770084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087086441 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158129351 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237306975 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102101213 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10113209 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17073694 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109961785 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110503699 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145578091 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105666599 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.125451807 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131963535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136955763 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175519787 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159379949 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138845878 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15853629 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130426979 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228119362 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119094732 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110535843 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134184728 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097745263 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171556438 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225071988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083727657 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236630957 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161065789 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134756589 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15411386 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086608227 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201938002 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082939412 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073619943 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205089952 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143065745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143294422 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192896737 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135376048 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161059124 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156523375 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193356616 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167740213 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169518634 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138449166 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091466497 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144403966 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184984083 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077942688 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125022294 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086394126 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134794109 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125506967 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112008414 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179998167 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161280682 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12841945 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145542952 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12828088 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188533975 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080195959 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191719014 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153423533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099397035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220032947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223527026 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173194982 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131695783 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183740553 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099429689 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078813969 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119443352 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165022432 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113544995 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088321428 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149341742 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213416763 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164702209 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172054521 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141921001 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155354147 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223213296 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075231434 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147708478 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187939131 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158931423 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.160073216 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095774076 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127696171 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208329175 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110384706 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284074994 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151565738 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159174896 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191496688 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.139804776 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109030494 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109187416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201207541 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136942075 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189313633 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13164826 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118875521 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143265706 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085575368 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134911662 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161276966 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151705752 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197550478 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150052678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167532163 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10644828 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150298926 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157527453 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155769708 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067661176 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153536312 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230584492 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12618515 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152265224 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220569548 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083181152 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155750532 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248607973 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208672128 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090204482 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141256792 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155182212 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163656481 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153102964 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202960788 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14269277 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170771461 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143037316 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090294141 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117877507 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130320786 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113545714 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12726713 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145485511 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149836004 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125443405 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16682306 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144563502 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143243276 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152301699 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128323802 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097774605 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129762295 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243748478 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155661723 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24483884 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131011361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18839766 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237109221 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10453703 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083462487 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109355656 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178914159 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089243554 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196557503 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100301338 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135831761 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160645129 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205083657 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100989013 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097401464 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141992978 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170009927 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143333897 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105397574 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137457837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230640682 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134458978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083503408 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160132668 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135919831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134157553 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246957825 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065628352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127579809 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079574314 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110811706 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166152719 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222233718 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087629453 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158934814 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1537509 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156258279 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165458588 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131248248 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127877979 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118443725 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211776424 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162694908 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121419319 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146446543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1654035 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225042713 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13805539 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100558802 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237297538 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220248073 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231808089 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093311255 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14909372 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14852852 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145481714 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20586 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088193334 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235927974 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113620872 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174224357 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135812157 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124035858 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16489473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125860454 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093921918 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214349733 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153518127 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112027819 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08498687 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147178308 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171966103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134776667 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078764975 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202438948 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076320321 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199929467 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210931142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111725406 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138943625 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102001297 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112936171 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139637862 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135474549 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116482286 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124190899 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243363849 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122202723 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189975538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204905323 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147718043 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173568206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131362147 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668337808 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108202885 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195279713 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151589833 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24687766 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129745545 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151892884 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143958349 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155923712 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205533623 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138354833 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181885325 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193950192 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155540075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083905221 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13524872 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144504246 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120988414 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140203472 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149448622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148779731 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131258936 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154701422 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163626984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111148026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100967943 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22569241 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153432928 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180724462 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205736193 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090547922 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1535383 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206674978 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084679398 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182595333 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196879614 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141898562 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13175461 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110006961 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111726447 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239254494 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102542256 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201175564 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18526643 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117144155 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146872967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.179341779 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170295639 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13905685 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15873664 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127158062 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146877692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150875891 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114396064 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082171526 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139893615 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145674825 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130230692 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133789158 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124740969 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218477499 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077147362 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12634018 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134051345 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181571755 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249512447 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119635736 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088499411 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151600184 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146597307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150324537 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15939943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111755415 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112803076 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087237515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139527351 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118405999 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148634805 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13461476 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14401165 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238111321 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088919422 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255610113 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126965502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141001466 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074110895 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110404553 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102445299 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128016356 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137375145 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128851309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213132974 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128421915 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12082849 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12340596 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077177534 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08725505 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192388799 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144588911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15616738 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129077429 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067670749 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141468073 seconds)
  done (took 74.016466263 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14058566 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10682928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122825527 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177669996 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151048838 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24363412 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184948209 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22853988 seconds)
  done (took 2.395928894 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075633572 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122187623 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109162452 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12153215 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093383796 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071985876 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.306257035 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113622319 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069604465 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119332981 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122694016 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095335415 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484421657 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071336276 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100191795 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089052335 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070229527 seconds)
  done (took 3.265104905 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.457967656 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.641749964 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452332034 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100712524 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.865254332 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112086648 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.299872563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165551633 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094708101 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428304947 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734608098 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158143263 seconds)
  done (took 17.550724238 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081229337 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074246271 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115366688 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08923013 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103984957 seconds)
  done (took 1.503611185 seconds)
done (took 117.285501309 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085146926 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385726456 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055875831 seconds)
  done (took 1.517596048 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091218463 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091042653 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116195906 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086648934 seconds)
  done (took 1.435850015 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.080320388 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080447939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115160303 seconds)
  done (took 1.324003288 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299399516 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171963513 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092708684 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089733428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082278572 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108563292 seconds)
  done (took 1.327230456 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078366607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079755133 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103214424 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079928059 seconds)
  done (took 1.379921145 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082310956 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056977188 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060099448 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086490647 seconds)
  done (took 1.331795963 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.097241186 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110607877 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084659706 seconds)
  done (took 1.334212053 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.116032324 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116441298 seconds)
  done (took 1.279406728 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.088442325 seconds)
  done (took 1.128398013 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099868144 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146465034 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164629823 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141310407 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174862197 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142393577 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118685861 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091594669 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108205431 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120085672 seconds)
  done (took 2.355951103 seconds)
done (took 16.099004472 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084576598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397651336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364547335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121638751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.683308514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386163064 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036372876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123264359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113109564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100024186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087636298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680741667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988814276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326268409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001550219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325967311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679842661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072024397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096631129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072269753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017796549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097588496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071720377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097170574 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652597632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374958111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098290765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326506675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097771693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0734272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357743037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098392441 seconds)
  done (took 16.140744543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077209151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149683946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078012439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087161253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100593497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07236154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102204149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073214416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151965042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072573328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116438504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071254053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101607376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072564886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090013541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098176223 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072108515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09777432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071769421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072059401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117191289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071643442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097668941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072465623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071489951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110531498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071328228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097655032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072027962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073725416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100943884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072178563 seconds)
  done (took 3.907186553 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122665326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160360468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078583099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132942028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144511813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073970947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175594364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097012897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156272728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072176386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115575283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0715983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132560037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071785904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118390249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072314037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099188622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072495622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071390032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098191039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090414392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097558987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07253085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071636716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098435671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085170444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098598076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075753126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071516178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100526107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074599336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097994432 seconds)
  done (took 4.228598993 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078165762 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080117474 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113123955 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087274101 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099274248 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076338205 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076553269 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100321622 seconds)
  done (took 1.762569353 seconds)
done (took 27.079977428 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084775764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07461141 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104219921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084124921 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10232543 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083507917 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070871166 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105466755 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078080718 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102887232 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079855053 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069752105 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100866173 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070934323 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077561886 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098408424 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083596876 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101819716 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083826716 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109682499 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073160669 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078298842 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103794043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083389707 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.11004392 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083838444 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109115366 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077219707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072697756 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100906549 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079613089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117219413 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074967746 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112175534 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072481157 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070390785 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097553668 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072016687 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083540852 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106113845 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074183687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104968285 seconds)
  done (took 4.770303327 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096953735 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099179225 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.121067653 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066939727 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101192923 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065741649 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120967962 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064322624 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065046155 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120170059 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06156703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062154009 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090581737 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057101673 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061476038 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059649857 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.09063724 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05916281 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060174235 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087978975 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064311488 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056684076 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090646367 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063112998 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059371012 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064772955 seconds)
  done (took 3.066500624 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081718371 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086278546 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118286305 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132229419 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137120064 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078224999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110384614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088906689 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114913199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070313959 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100898889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09987648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089207184 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104912239 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070433024 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113260375 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086622088 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071795939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105438152 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092344638 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115831213 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081420391 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119798705 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08291579 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070688151 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100375457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075148507 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112194873 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077170912 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080012938 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101806072 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074538901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099699999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083992796 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102570488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073863007 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090984911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108273236 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079535367 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098891451 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074990607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071155577 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119411515 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115898235 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098817711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07732181 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10621129 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08154895 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071283998 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11691338 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080671913 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097525526 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075774076 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069782065 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098121855 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08554841 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09977054 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073731066 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080569213 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101557983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083993618 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074203212 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114181252 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070307613 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105652199 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069921138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098304155 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070157279 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093353802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099068722 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112556778 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100938947 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071952832 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107551967 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07839448 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076519188 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098952636 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08685005 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107946762 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.0754371 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079378245 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101516875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074213986 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116187959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073626411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072302037 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09912794 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078041846 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073766794 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099456836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084786445 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.098580277 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073556217 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115987181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071153068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07262511 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104120586 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075864893 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096636245 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084553317 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076206391 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099197602 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080216578 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0974633 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074480165 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080516373 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103315594 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069641011 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.1026038 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077184404 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070657865 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09987711 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074349686 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099376621 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080468906 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076671453 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103416525 seconds)
  done (took 11.657052761 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.212428227 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191338909 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073840608 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184293878 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.107464776 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08264729 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185010057 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100189025 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099142488 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071731212 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099659438 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110951652 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132634441 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147049614 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083892848 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070603368 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118126551 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.138798117 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159159353 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180482054 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119504826 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079070085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.10140115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072344993 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072421821 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110064208 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087656025 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105703865 seconds)
  done (took 4.364060902 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088893973 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12980656 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077174436 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089197363 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122818194 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071080962 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103418933 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07286811 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111395596 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084252867 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099349417 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077449078 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078197988 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107537061 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072258426 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108442643 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080753923 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072497008 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102234604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075520701 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105969633 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085089632 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103496611 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070613214 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077829591 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099083646 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068362632 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117819632 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07018957 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117931766 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069730266 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104316543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081833337 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071148407 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099134255 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074006419 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073221924 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101417369 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073023014 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097639187 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070783958 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061066023 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097957071 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08510388 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104674566 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063957289 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076945816 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104669538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076090133 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068477697 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101209772 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073730747 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102253953 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078521352 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075980865 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104132474 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075100458 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070063279 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105068169 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072799608 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067999873 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097405633 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075819431 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09800151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078948747 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075795176 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097242416 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073663143 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103609341 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078038323 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073125499 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102074133 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068627461 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072955249 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.104095681 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075743861 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103130226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07006794 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070644505 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099704598 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059123798 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070899396 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085226499 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074499259 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06952251 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097975813 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073792269 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108439303 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.0849339 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101427269 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078277634 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071470353 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098666573 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074882298 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066291015 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101636563 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085822452 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116728907 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070979315 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097998262 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084869576 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103531594 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071035341 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059152475 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106780576 seconds)
  done (took 10.131735459 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098988621 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.125418776 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073526209 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085482178 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125687283 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09610607 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10736319 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078200268 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072602274 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117237647 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071654817 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107664141 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075473077 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079825228 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123605562 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078648561 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101706359 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080462811 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079062239 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13647236 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084427118 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112953407 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082148354 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100298953 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076032955 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083455973 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127235031 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082475056 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108911027 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086199907 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109815983 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099392347 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087280106 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10421937 seconds)
  done (took 4.337044995 seconds)
done (took 39.376605027 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.156904281 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.346347547 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.131908819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.012032151 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.17546316 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.146473361 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140714046 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.131849807 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.345699601 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.129341712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.374628168 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.793828538 seconds)
done (took 58.959938104 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.196270575 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.268089655 seconds)
    (2/2) benchmarking "String"...
    done (took 1.399851433 seconds)
  done (took 3.743683491 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.475338828 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.104144858 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.415210042 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.142367983 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.13014283 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.577118372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.694190367 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.975583993 seconds)
  done (took 27.110307405 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.138406926 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.489413171 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.445287637 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.44585293 seconds)
  done (took 17.593929817 seconds)
done (took 58.192475398 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.131261621 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.170214405 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.150473421 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.113626442 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.237060728 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.16189395 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.427156189 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.142992633 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.129861168 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.120451627 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.152184371 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.149146108 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.134859568 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.525844051 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.133482662 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.140356694 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.137385968 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.616551473 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.521625462 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.160047232 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.131648295 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.136965718 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.149868807 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.135852266 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.201067973 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.131256934 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13316685 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.137773609 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.335114982 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.132750501 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.228554704 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.661720815 seconds)
  done (took 188.044698313 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.132449398 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.27238596 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.335683845 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.18354765 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.77945211 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.326361547 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.271742034 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.8445975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.143074649 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.135760561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.424425871 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.132641653 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.49449139 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.137727826 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.142489332 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.235494301 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.32796271 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.472617115 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.189209847 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.404489186 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.142184252 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.565883761 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.498160749 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.369410367 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.148076973 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.153150017 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.153455466 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.161579361 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.323245529 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274979033 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.159086086 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.148107495 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.690979024 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.991932733 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.135073133 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.14518208 seconds)
  done (took 148.522991315 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.406916793 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.134380394 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.134945664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13526815 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.134202599 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.164182424 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.13324304 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.659392145 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.661609136 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.632113644 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.335273479 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193777721 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.344378128 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.131973047 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227543677 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.144699765 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.132757847 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.148588777 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.161566988 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136145095 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.135003644 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.659668995 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.148377084 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.177366855 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.141648832 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.135061826 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.163520863 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.529339504 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132792956 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.165870512 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.450559622 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.176552309 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.132531499 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.444006919 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.591186746 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240714427 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.134795472 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.165504297 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.135080151 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.402549071 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.133436502 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.137137395 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.138896282 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.729499042 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.137887021 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.661523758 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.135897295 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.037248095 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.13721617 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136135191 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.445010942 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.136055659 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.642401576 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.135897918 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.135664433 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.139116462 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.136179381 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.136748861 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.168074754 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.468369902 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.234329361 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.137655281 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.141617453 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.167268793 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.137701342 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.247033461 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.134928614 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.721083951 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.192602864 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.24170072 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.6639597 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137968704 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228383808 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252000341 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.134841538 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.136834189 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.13791985 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.136514485 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.241872053 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.134887161 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.138119486 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.525357106 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140990907 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.139341793 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196056977 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.230893612 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.136874471 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.432015697 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.139189645 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.137363209 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885148642 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232081585 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.134697486 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.137935574 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138542053 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.53174258 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.664137952 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.341006495 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.140827305 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.505857797 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.138923967 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.546085892 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.661368233 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.138649227 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.743550801 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.139822014 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245925842 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139704387 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.140401338 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.137734722 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.167535537 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.140349453 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.19775324 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137190027 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.534839495 seconds)
  done (took 337.719042505 seconds)
done (took 676.766335615 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.749451264 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.740968759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.841490289 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.731480721 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.696843812 seconds)
  done (took 9.840091947 seconds)
done (took 10.91954344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.319644107 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.319794022 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196526042 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.32178533 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.166675115 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.337141292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.297146219 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.160962528 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.237877678 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.212617871 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.237432203 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.186778423 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.166502549 seconds)
  done (took 17.241679104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.454935835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458460741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.205501693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461366518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.180788432 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455694363 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345622789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346377184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335739504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.153954649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.154997825 seconds)
  done (took 15.635166501 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466339815 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.457768628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207530616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461639759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.182140037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.469802332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344167486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.375274392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335990776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.156891494 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.156281043 seconds)
  done (took 15.695079985 seconds)
done (took 49.651562787 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.151066978 seconds)
  done (took 2.232321322 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.184862501 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.342621228 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.16469251 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.156580054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.151097436 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.153238461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.155209699 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.151800912 seconds)
  done (took 10.543165413 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.147962295 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.14723571 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.147889954 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.148398117 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.151022874 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.152288498 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.151187644 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.147319409 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.150201626 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.146808344 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.146977886 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.150231449 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.150301413 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.146662332 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.150868674 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.151283575 seconds)
  done (took 19.469689753 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.15055417 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.148080105 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.147239405 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.148516501 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.148929604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.148196303 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.149354642 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.148295086 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.149531058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.147896011 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.149676698 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.14797289 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.148626427 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.148404205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.149841577 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.150492886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.149540861 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.149751768 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.152960102 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.148731382 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.148643811 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.148208768 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.149134829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.150017983 seconds)
  done (took 28.664389538 seconds)
done (took 61.990697932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.151065421 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.761447089 seconds)
  done (took 8.995696428 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.151689946 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.150672115 seconds)
  done (took 3.389434498 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.151039007 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.153136221 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.151107062 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.151123917 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.152226049 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.151084517 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.153290693 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.151549801 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.152520781 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.152961467 seconds)
  done (took 12.605911654 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.153140724 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.153063219 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.149974697 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.154036595 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.152504128 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.150665646 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.15349153 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.152169089 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.151020493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.151940359 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.152276249 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.151613018 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.153668533 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.151209656 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.15196993 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.152289641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.151258361 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.15161573 seconds)
  done (took 21.82357773 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.153508121 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.152872808 seconds)
  done (took 3.391765068 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.151274904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.151500474 seconds)
    (3/7) benchmarking "month"...
    done (took 1.151866414 seconds)
    (4/7) benchmarking "year"...
    done (took 1.152241687 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.151519358 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.151674213 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.152176023 seconds)
  done (took 9.148150316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.154775638 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.335332003 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.418413745 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.715728716 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.156256074 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.158242574 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.01566395 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.156632052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.1588619 seconds)
  done (took 13.354926911 seconds)
done (took 73.792454978 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.15534541 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.14621486 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.046518493 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.162750489 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.162436273 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.489826318 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.20372548 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.266631981 seconds)
done (took 36.719118776 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.165506022 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.855619095 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.862177034 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.160415369 seconds)
  done (took 10.963591936 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.128765677 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.048452957 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.140302227 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.130649901 seconds)
  done (took 17.531999436 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.744482206 seconds)
    (2/2) benchmarking "read"...
    done (took 1.474487225 seconds)
  done (took 4.300762497 seconds)
done (took 40.046189878 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153539304 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.150402941 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.148755221 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.15216263 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.15133247 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.147069911 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.148949974 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.147847462 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.151579466 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.152733466 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.149671385 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.150100093 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.151302194 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150606709 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147893142 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147084908 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150315765 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.146932322 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147155292 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.148170095 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150934321 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.14701583 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.146963959 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.147963082 seconds)
  done (took 28.669424731 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.149536924 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.148012548 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.150537487 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.149075798 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.148844524 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.151930398 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.150428568 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.147929935 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.150875018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.14945641 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150351896 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.149359395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.150516 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.149207091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151855221 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.146977183 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.150830132 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149006673 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152159131 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.149078808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.151810302 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148413843 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.149005107 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152256529 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.148043285 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149540386 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.152208884 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.150213903 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152033011 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.149487025 seconds)
  done (took 35.58239888 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.156262559 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.161274886 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.153853222 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.153532314 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.154274396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.152833718 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.152787742 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.153581446 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.152305439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.152770416 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.152192627 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.15267713 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.153216229 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.152972669 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.153439972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.152298707 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.155616062 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.154113879 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.153997653 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.153033125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.1530444 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.152717502 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.152838409 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.153348267 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.155139402 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.154361046 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.152637736 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.15350636 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.153653833 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.153011059 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15621398 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.155249782 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.151791611 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.153243614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.154774142 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.154298958 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.157709449 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.163617711 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.152705645 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.153516784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.153967564 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.153694858 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.154199999 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.153172859 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.155512806 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.153215464 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.153761971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.153927177 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.156150479 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.154037355 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.153713894 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.154107215 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.155414341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.153524612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.154233522 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.153293597 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.155546254 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.156338195 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.154657948 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.153452177 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.154971915 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.15361046 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.153793886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.154141309 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.155808025 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.155554215 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.156921384 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.155829636 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.155015448 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.155434399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.156310049 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.154694261 seconds)
  done (took 84.199623136 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.155511942 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.154394855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.154002152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.154337438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154349441 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.155201601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.1543773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156880033 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153942413 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.158296637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15977168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.156293904 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155883496 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.156475857 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156675064 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.155213653 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.155449274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154202761 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.157763061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.156328183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154996308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.153985395 seconds)
  done (took 26.511735673 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.156591035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.157523447 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.153409568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.156101945 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.155724786 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.155807639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.157100481 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.155245455 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155961883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15558824 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155125889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157491601 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.153554222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157515821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151918285 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153692565 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155557566 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154223068 seconds)
  done (took 21.886292696 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.154763454 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.153666527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.155497662 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15646155 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.154685651 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.156902727 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155220551 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156437215 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.154969749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.152982649 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.155957045 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155975657 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.158092559 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152904582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156907832 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.154760965 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.15728155 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153320794 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158616135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155468687 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157285157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.158357081 seconds)
  done (took 26.51596375 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157786127 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.157632694 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.154939041 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.155887302 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.156452349 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.156957665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.15933323 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.151884302 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.155532814 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.155682518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153252484 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.157405492 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.153596065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.153448556 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.154035461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153588989 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.155129059 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.15213115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.1557192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.153587948 seconds)
  done (took 24.193651646 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.155982439 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156238215 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.155948553 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156116634 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.15608977 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.157889599 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157123229 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.158546412 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157281082 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.159136941 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.158631027 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.158823777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.15781689 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.157120008 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158551413 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157799973 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.155709751 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156158701 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.158896807 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.15735381 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.159577616 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156713669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157965054 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.156694066 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.156304581 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.15754218 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157687129 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.156775176 seconds)
  done (took 33.494876173 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157942002 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156737017 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.155544284 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.155546257 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.154142134 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.155038946 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.155435223 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.156047789 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.157160409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.154493963 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.156814571 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.158464568 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.15760178 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.158473698 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.157382363 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.15821662 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158683638 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.156228659 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15654525 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156441982 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.157673259 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158799399 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.159082913 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.156524612 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155893381 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.158381609 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155423416 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.156382493 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15792349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.155643134 seconds)
  done (took 35.795693007 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.177830072 seconds)
    (2/2) benchmarking "in"...
    done (took 1.176852973 seconds)
  done (took 3.444415112 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.157865333 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158547872 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.156880856 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156496861 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.155809967 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159166468 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.159583589 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.156525043 seconds)
  done (took 10.351884054 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.161692054 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.160024617 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.158457614 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157385096 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.158678592 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.157988443 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164577095 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.174492579 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.160441054 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.157990771 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.163871552 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.166814781 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.161156572 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.15940142 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.15784166 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160018514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.159018166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.162308643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.15843637 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.159732262 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.157891491 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161233636 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160155334 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.157781041 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.158810164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.172962463 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.164560966 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159869457 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.159672564 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.161854118 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.15759501 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.156474696 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.159215448 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.159466086 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.161172295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.159486386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167243782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.175326696 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.167343575 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.158317216 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159772317 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.157323567 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.159656428 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.161110999 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16025594 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.16003207 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160079922 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.1580123 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.159553401 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162218867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.166443429 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15931642 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.157482742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162688563 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.162099597 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165736018 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.176144017 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162408724 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.170499703 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.170952076 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.173405741 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.169248081 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.161835245 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.160574112 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169651701 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184601537 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167457372 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.173478966 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.158170873 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.161004565 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.167183851 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173810105 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.171614685 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16196043 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161493307 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.161799758 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160441595 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161669813 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168899283 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.180069688 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.161464237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162104408 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.170078963 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183389646 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.161104423 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161235818 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.160673231 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.161423778 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.163203492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.173562669 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.178560499 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.161617436 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.16171309 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161159719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.162073936 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.162920594 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.161608623 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162264241 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.16171598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.161891784 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162090729 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165828439 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.172810419 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162820682 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.162587452 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.167513817 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.163423237 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161916276 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.170852108 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.163130434 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163129885 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.161910407 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.16842844 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.160515662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164898462 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.171174092 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163736996 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.163794825 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.163890489 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.164539481 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172447882 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.192208261 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.16319706 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.163955031 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.168648831 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.176342653 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162627235 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.166075135 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.16514074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.162626889 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.161098507 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.165728192 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164308464 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.163574888 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164597997 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16399269 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163465192 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.165001334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.164501974 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16523381 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.165304193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.164181706 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.166052138 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165728522 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.164404096 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.166298293 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.171114859 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.164093225 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.165268296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.165895982 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.162519174 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165428852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166688851 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.165571627 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.164473628 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165360739 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.164494529 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.165180333 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165393745 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.1652065 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166543971 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.166537401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169992798 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.165055981 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.170314727 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.165420901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.164344157 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.166327608 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.1650449 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.16400947 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.166935032 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.164152778 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.167944013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.175086552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.165603049 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.165436448 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.167200355 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166706021 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.165856117 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167915256 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.169251957 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174962538 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.165594916 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.171784474 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.166724912 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166447231 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.166443513 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.16700825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.166185163 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166333427 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169674394 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175746447 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.17797082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.176161007 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.167229287 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.171999703 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.167131521 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.171937259 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.170395496 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.167169502 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.168146862 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167077575 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.167752592 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168233234 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.16865331 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.168690988 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.166700078 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.167955482 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168072709 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167604416 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.167592598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.168046261 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169604784 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.166257029 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168148947 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168662952 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.16793046 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.166779589 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.16756912 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.168052464 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.169710725 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.169514063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.173927916 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.168107552 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168684516 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169479241 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.167918945 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.168272054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.169904888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17012661 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.170066075 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176601976 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.182839194 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.169957635 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175937215 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.18500428 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.168028927 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.171314496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170496631 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.167735702 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.172397473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.17800064 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.17108693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170523739 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16974087 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.16946845 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16961731 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.175269889 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.167632946 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.168742215 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.170063036 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.170468013 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.168128174 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.171226199 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.171070458 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.171525962 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171758062 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171331958 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.171067908 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.169058817 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.170637581 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.168402698 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.170036691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.171897944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.178853145 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.174626004 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.169781116 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.174074067 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.171047864 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175453286 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.170089675 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.170776038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.170119092 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182110682 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.180353388 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17656066 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.173704906 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.171092804 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176770715 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.173401765 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.174470985 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171347382 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172078939 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.171655481 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.169708671 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.168044037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.172602735 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.172770568 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172892888 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.172726875 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.175970978 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.171163417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.171697312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.170037906 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.172371655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.172287281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.171159278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.17170168 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.174399787 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172954709 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.170380624 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.171113042 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179810425 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1896672 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.173857683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.171619734 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.173119719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172395852 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.173970067 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.171098019 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.175600491 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.182569337 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176328181 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.182492484 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.173386531 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183242776 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.173620692 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.176229549 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.182408144 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.171937874 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.172240202 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.173172307 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.173487811 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178450943 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.188553345 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.17392319 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.178432827 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173889424 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.173564984 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.174755691 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.173034172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173595536 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.173490653 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18121425 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.188797978 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.176538512 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176058907 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.172060066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.173939489 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.175106909 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.172538842 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176848025 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.174899748 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.174421727 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.173527011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.174292384 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.174575755 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.174839823 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.174557931 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.171645001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.17507379 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.17989815 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.190321794 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178245983 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.1747631 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.180724143 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.17564714 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180455923 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.191769776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.175034082 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.175203933 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.177003798 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.176342748 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.173554692 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.175241841 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.174639184 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.175684724 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.179568415 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.175563505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.175607071 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.176685715 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.176362173 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.175669781 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184457208 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199274629 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17616342 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181115896 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.172142861 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.177151596 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.180418853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.175503026 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174309038 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.179258491 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186568531 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186747272 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.176543496 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.1763418 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174726103 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177120596 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.175249264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.176276275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.175839296 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.176624347 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.175798963 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.176203208 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179491234 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.178177133 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.177385748 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177561071 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.177770822 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.186816309 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.178087429 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.177467048 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176734999 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.177489344 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.176504723 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.176587146 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17792916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177551437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178193195 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.178367071 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183887791 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.184319765 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.180043531 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.174802043 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.177222989 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.177892885 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.177270643 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178058745 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.176127157 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177138348 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.178691395 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.178613426 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.176920736 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.176438195 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.178418882 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.179403276 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178912716 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179796008 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.185488146 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177818609 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.176249807 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.178002391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179143342 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.178161565 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.178137259 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.185669218 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180639531 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.189527205 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.187783528 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.182988808 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.178509817 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182448474 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.187712708 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.176848154 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.179276667 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.178804671 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.179825954 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.180634993 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18255118 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180416423 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.186263099 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.178757666 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.177874115 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186910353 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.196639156 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180421719 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.180603376 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.183223905 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.178893466 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.176415464 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.180579728 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.178883443 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.1876395 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.196386557 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180033151 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182272418 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.17809855 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.182121341 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.184693363 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181413393 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.180902911 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.179675417 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.182104846 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180816359 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181584433 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.178918649 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.180865957 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.180384596 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.183038793 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.189439598 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.179881839 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182735865 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.180919744 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.181159316 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182250301 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.182111214 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.179103306 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.178421372 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.179449518 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.182066717 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.181201327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.183058272 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.182341309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.181779418 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.183715778 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181428066 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184995744 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.19221191 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.189933442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.180402306 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.180255291 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.181953656 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.184762882 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181723418 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.18353346 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.180923336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.18163736 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.181960822 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183698148 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.182166436 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.185642729 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198467064 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.197994741 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182066573 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.183194487 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185494028 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.18318641 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.178979609 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.183148307 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.184327464 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.18388364 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.191523675 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.183997997 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190619631 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198871805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.18425796 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.187832556 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.18495836 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.191980204 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.184654582 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183555105 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.182967213 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.189039287 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.200746397 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184405629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193069437 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213521172 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.200759549 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.184073078 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.183739074 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183106064 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.183977551 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.185552593 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.185535824 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.183742004 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184565509 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.183922598 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.183238349 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19047467 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.184390037 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.184975163 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.185881173 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.182855971 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.184366521 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.181979214 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.185001961 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.184304628 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.184704873 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.185891517 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.186067784 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.183517193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197111548 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.197078865 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.18591159 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.185054281 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.183349109 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.187281661 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.187150701 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195696317 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.193344578 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.18565881 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.185137288 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.184714476 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186031078 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.183277886 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.185467935 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.185944853 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184445365 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.18298444 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.196690741 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197232381 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.189479431 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.185973951 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186173769 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.186169336 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187324194 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186369635 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186423193 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.188030641 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.187299349 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190373575 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.186844949 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.186087462 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.189992463 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.194708981 seconds)
  done (took 701.013284248 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.184945806 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.184272908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183987096 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.184713574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182436691 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185247461 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184589124 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.182858877 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.184091963 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184668511 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.183643943 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185610172 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185373458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184424213 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184703846 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184037067 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184500291 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186458126 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184091287 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18513303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18463891 seconds)
  done (took 25.992975302 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.187737434 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.184970404 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.183526521 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.18887304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186033054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.188087697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.187306206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188356345 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.189093774 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184611275 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.188102217 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186867792 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.184391894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.184385266 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185636819 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189212066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.189218171 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186019392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.18875689 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.185207325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189016275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.186542154 seconds)
  done (took 27.230169204 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.188532405 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.18963396 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.187602824 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.185823953 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.18866137 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.186752965 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.189103752 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.188206859 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.18899771 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.190261659 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.187905132 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.190095686 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.196205055 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.194963468 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.191359338 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.190748157 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.33542423 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.190333323 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.190393896 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.188397356 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.187984486 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.195022021 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.187167602 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.190045008 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.187624094 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.190377804 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.19023854 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.190073098 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.189090294 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.190478015 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.194750773 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.190906608 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.190061022 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.191798067 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.190244522 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.191706842 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.193824532 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.189911158 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.187950318 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.190380749 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.200119446 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.213579614 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.191656128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.19841555 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.190348654 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.19087107 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.193905542 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.200273332 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.187778589 seconds)
  done (took 59.638024734 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.19141576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.191587935 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.187924915 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.192111329 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.191208175 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.191504552 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.192155291 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.191827877 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.188873902 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.188598952 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.191779859 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.190006269 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.19027323 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.192514559 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.192475581 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.190465973 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.189915869 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.190012439 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.189353446 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.189502834 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.190011826 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.191985361 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.192509221 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.18996036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.192113198 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.189659424 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190384196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.193350566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.191198115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.190624316 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.193971823 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193126885 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.193554528 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.190052903 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.191572366 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.19292688 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.194863827 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.191043661 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.192739755 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.191312344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.194991131 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194052782 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.19334078 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.194402871 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190192524 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.191819263 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.190483117 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.191800154 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.191482234 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.194763606 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.193105554 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.192413388 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194228476 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.19146343 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.195507314 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.19356852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.19235343 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.189709982 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.192874919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.191358471 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.191707379 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.192194146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.191979602 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.192797925 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.194427095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.189931939 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.192122878 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.194839444 seconds)
  done (took 82.166990955 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193712506 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.195039146 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195824168 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193975964 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.194411374 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.19436557 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.194585218 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.194503152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.19449566 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192611878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195696024 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.19540159 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.194023289 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.195020189 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195001911 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.194615251 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.197285421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194007737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.195165671 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194729778 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.195731763 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.194869968 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.194824623 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.196218683 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.195322492 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.195909404 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.195008424 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.192706678 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196038079 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.194803047 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.194565646 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.19595331 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.195422194 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.196064553 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.197060757 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.19710984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.193682698 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196275473 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.195866758 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.197817986 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.195288487 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195790049 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196781708 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.196760472 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197095214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.196003241 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196916787 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.197311883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197314343 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196764669 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.196475024 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195874468 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197353068 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195814498 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196309308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.197827447 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197908441 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.196082258 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196856538 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197623355 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197216116 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.197609308 seconds)
  done (took 75.261219835 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196433714 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198106848 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.194898068 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.195336052 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197730828 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195936967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198779838 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.197039114 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.197723279 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.198000366 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197296983 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195405509 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19620306 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198278307 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19585519 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195105465 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195258576 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194869255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197684511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195318723 seconds)
  done (took 25.059230711 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.195905079 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.198240478 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.196535952 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197379468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.198857107 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.196140721 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.198635201 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199181407 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194400755 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200099509 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200538381 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200112639 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196489182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196796383 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198369529 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197420128 seconds)
  done (took 20.293381219 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.196807203 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.199697879 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.198404819 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.199493713 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.196273337 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.195544551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.200743761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.195962736 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.197109724 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.199975446 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.198830073 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.20095148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.200509743 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.19984899 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.197895282 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.200379678 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.196500658 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.197213009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.200754886 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.199987545 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.19909556 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.197224557 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.200257622 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.200836317 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.19834352 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.1989477 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.197539279 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.196883927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.198745412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.200742508 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.199433209 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.20012547 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.197965161 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.198087483 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.201982239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.199649942 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.201144404 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.201118465 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.202188976 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.201907343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.202290496 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.199329772 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.202393152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.201509581 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.199742924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.202509911 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.199284344 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.199041548 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.198529923 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.199140026 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.20230179 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.201815705 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.203320725 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.204184284 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.202660411 seconds)
  done (took 67.112716608 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202027642 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203253167 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199522358 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201697889 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.202452321 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.199570769 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2027436 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.199487841 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201420613 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203878525 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201495312 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.20115023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2000716 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202861448 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201306362 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202785518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.200545773 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.200547178 seconds)
  done (took 22.759714063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202200804 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201374006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.203063473 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.20004489 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.200469331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204122121 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201923994 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.202637605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204046776 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201004687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201073237 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.204073692 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202957417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.204278286 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201084417 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199616126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.203939294 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202856194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202438087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201540056 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204791849 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204240996 seconds)
  done (took 27.585912103 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.20131791 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.202759668 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.218708771 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.2454098 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.236498525 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.203069829 seconds)
  done (took 8.440884585 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202984928 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205573117 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202152585 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204163972 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205288535 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201148307 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201317117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201996621 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20553155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202496016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202661745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204108306 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2053934 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203309405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205403002 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205216492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204306863 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203912698 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20335027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206191407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20307096 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205638884 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202706873 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202244098 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202298458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202431068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205564198 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202928944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202179692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205459787 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206540665 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203518759 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205456141 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204444969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20771323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204997078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203900279 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205783741 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206293619 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203687654 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205789023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206653771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204845975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203895471 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207497486 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203882567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204451273 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20478513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204757851 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208152685 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206895109 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204232588 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208036661 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206387725 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207585645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206307871 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204544518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205362971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207332473 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205290851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204602622 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207327174 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205121775 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204594128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207794708 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204247946 seconds)
  done (took 80.649339309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20527963 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.20593511 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205855111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206874978 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204513485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204785223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205620073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205357752 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20528926 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206764363 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208539749 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205467093 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204945253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205715511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205680801 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20685181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207022159 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206089836 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205700133 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208061301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206394846 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207423554 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207018329 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205187818 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207345388 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208601619 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206922699 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206881343 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208449324 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205540231 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207345932 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207093742 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205467043 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.208389586 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206682581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206618647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206653056 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208258148 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207122332 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20916593 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206634047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211086572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208033086 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207731053 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207578934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207256298 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206751787 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208635948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207397833 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208633722 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207239758 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208417245 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207623096 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207762061 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208470144 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207170024 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207425187 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208137417 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207685495 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210204579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208142587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209320269 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212458291 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207680303 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207971394 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208108853 seconds)
  done (took 80.81402498 seconds)
done (took 1635.747670938 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.227252781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.300394773 seconds)
  done (took 13.666897816 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.369649194 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.325277332 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.209076921 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.237366251 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.206610704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.226456612 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.22472894 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.207394733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.208379265 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.208855197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.208641505 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.400259629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.203778417 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.207994902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.209069409 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.300674351 seconds)
  done (took 41.107732375 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.237773729 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.217203304 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.318843168 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.22633292 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.236844501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.38631109 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.26262134 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.214220692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.369341208 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.249451181 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.649141605 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.235149345 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.21473903 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.236594268 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.227832582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.385575341 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.439778656 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.652863865 seconds)
  done (took 27.902607891 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.624762597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.221033356 seconds)
  done (took 8.987596307 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.211166328 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.214707568 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.221809163 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.23115273 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.224940208 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.24324916 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.250394609 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.248681032 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.249292954 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.262460202 seconds)
  done (took 63.511867602 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.232658415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.214893904 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.215644275 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.214376044 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.217494312 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.203660301 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.213644229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.205734641 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.579342167 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.3271412 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.224524612 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.22216528 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.215106043 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.216199739 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.212821235 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.250533526 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.35791306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.214197786 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.211199114 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.221483471 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.21500463 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.296793253 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.251889086 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.212523072 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.331429564 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.565800035 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.216981786 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.220913893 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.340539943 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.214033614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.214428802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.215448118 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.215581848 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.770559355 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.682575198 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.218173969 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.236370499 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.225699646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.213181298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.336327469 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.217092535 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.222631503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.212091718 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.662282545 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369674712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.316523638 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.384216017 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.21347476 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.218452895 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.277520994 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.217330499 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.21786928 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.245743139 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.9446372 seconds)
  done (took 104.028713958 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.23837412 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697313665 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376690928 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.226046009 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.063110828 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.826826409 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.207993579 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.477563181 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.214163915 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.209039609 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.484795704 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.70241147 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.219891974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.219153133 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762138282 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.265967801 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.211052377 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.149367671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211288164 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.215089293 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625270258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.221420034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.220896625 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324869554 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.245735489 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.665412887 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.530974748 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.6969238 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.210790628 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.206472609 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.666361345 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.213610239 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.253443892 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.207483464 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.479572736 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.544532647 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.518563938 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.21000761 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.264536842 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.206465631 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.238114863 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.649055142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.530309246 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.208351948 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.221563071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.665658725 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.208227977 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.212114869 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.21756445 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.417816524 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.12167437 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.21196238 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.530716693 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.20953661 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.473134657 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.211361799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.229295502 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681221309 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.209749549 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.304540757 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25592442 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.212750881 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.213654835 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.215632595 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.209329413 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.537514154 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.59774722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.214539684 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.540554557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.661014591 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.212213823 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.724541068 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.07979571 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211318768 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.268893552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213163057 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.940435057 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681692904 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.222589352 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.209963063 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.526494352 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.209715874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.486294243 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.222283343 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.212844753 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6361567 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.229272825 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.263877477 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.213228496 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.210598275 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.003744189 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2179119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.470980077 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.26371897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212114881 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.214328091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.23694241 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.212619743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.210604311 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.216355479 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7294631 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.21398121 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.334686226 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229141374 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.214105073 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212743202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.217564959 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.214293179 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.438156521 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.778145929 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.217973644 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21616571 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.211771809 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.219234339 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318499492 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.214812565 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.501388572 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.212239489 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215870774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.215389503 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.881814107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236605711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211212148 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.216930424 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041674642 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.419128697 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.228924781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.213444325 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217152822 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.229357142 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.468536587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.212625337 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.243260071 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.215446935 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903913291 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.229345397 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.22085388 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.78796834 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.222289096 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.093927058 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.238549004 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217478192 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514693671 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.483983541 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.519374874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.213657702 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.213186586 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907343793 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.229601999 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.356308732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.233879953 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.250676061 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412374637 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.326699316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.21455069 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.766661144 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.220135238 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434206119 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.217342649 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.523804564 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.693074818 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.217648551 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.216981157 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916347257 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863573765 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.932207826 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.219912083 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.48822211 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.187320418 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.671706512 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.218916518 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.218646074 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.815733353 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.218208456 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.217127832 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.21731037 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.216693914 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.275603076 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.392042044 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.839957994 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.217661545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663063015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.219549353 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.214723745 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.217537511 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.223642937 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.571616945 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.248183635 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.22122578 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.231574685 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.220545221 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.225044968 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.682489658 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.107390582 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.216636981 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.371429569 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83414932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.217862724 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.220117113 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.923015747 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.466188396 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754221779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.232128673 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.519958933 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.224277425 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.258204246 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.002038995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297028836 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715213826 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.218551878 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.216844313 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822993912 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.218549442 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.276347066 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.218204133 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.220566866 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.744098668 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.217988606 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.223559999 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.544144454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.219653623 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467739211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.217675219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.241093619 seconds)
  done (took 1084.028373097 seconds)
done (took 1344.371459858 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.219705936 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.219806302 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.206497947 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.219940502 seconds)
  done (took 26.020497389 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.232691829 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.225971277 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.230094446 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.226279799 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.23103081 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.224650148 seconds)
  done (took 8.527951229 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.27719781 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.220873938 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.220620463 seconds)
  done (took 18.87622524 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.431631079 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.42083993 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.575357688 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.252160818 seconds)
  done (took 9.837247674 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.228231726 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.227309178 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.227895762 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.231315046 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.234143211 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.234932322 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.230848361 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.231391795 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.234243506 seconds)
  done (took 12.233970347 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.962653854 seconds)
done (took 81.612435843 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.769343315 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.222376207 seconds)
    (3/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.762021302 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.318505507 seconds)
    (5/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.56790261 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.635195288 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.287229474 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.098504561 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.220189728 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.607901778 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.257311009 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.347670034 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.285265943 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.773249688 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.469402135 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.361248046 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.262750977 seconds)
    (18/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.285436646 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.249267074 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.208057557 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.260416676 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.034137188 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.207208381 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.042049061 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.515193141 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.640107808 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.857451889 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.639278445 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.235824759 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.027843842 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.213191278 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.34391244 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.329477239 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.512191367 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.924814758 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.101739591 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.205747725 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.306998963 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.32642775 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.246329303 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.226054899 seconds)
    (42/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.324515376 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.465112623 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.421632652 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.744122829 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.572964952 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.264184077 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.797433804 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.766837291 seconds)
    (50/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.448047605 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.22194874 seconds)
    (52/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.023250706 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.221064671 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.593681001 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.575587675 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.350656478 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.345529444 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.590123797 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.504022226 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.225001355 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312513685 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.844760014 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.938210373 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.307812403 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.44501684 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.208218839 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.319809318 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.949806744 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.223330009 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.074250439 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.207801722 seconds)
    (72/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.417446287 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.634090888 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.302010019 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.224273101 seconds)
    (76/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.248221503 seconds)
    (77/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.30746246 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.226963623 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.260568023 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.509294311 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.834649973 seconds)
    (82/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.983747903 seconds)
    (83/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.752333366 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.064962263 seconds)
    (85/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.263611669 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.308641484 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.513320377 seconds)
    (88/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.23531058 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.252962664 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.361685302 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.212625639 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.751458982 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.378667928 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.478597986 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.376747647 seconds)
    (96/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.41016788 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.424328847 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.244686146 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.239114833 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.227825409 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.047488668 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.636429246 seconds)
    (103/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.425067553 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.450303494 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.309557699 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.214404433 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.630165791 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.822118802 seconds)
    (109/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.309022606 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.223904 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 6.229264093 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.613638405 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.740658318 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.234888238 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.137262122 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.619194505 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.45272508 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.540170036 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.254621231 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.228970752 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.898859054 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.237789189 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.224862325 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.210091212 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.272880673 seconds)
    (126/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.540699884 seconds)
    (127/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.73050377 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.604018561 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.302358362 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.044068496 seconds)
    (131/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.241932056 seconds)
    (132/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.486424924 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.25472368 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.227397694 seconds)
    (135/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.275374734 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.739577005 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.251784758 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.313573217 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.583301319 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.021707236 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.481915318 seconds)
    (142/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.235699434 seconds)
    (143/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.608329361 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.239738051 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.549765188 seconds)
    (146/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.281289349 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.96420987 seconds)
    (148/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.354533042 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.510356258 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.725083671 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.724172826 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.056717081 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.123461215 seconds)
    (154/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.803222721 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.229024501 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.368551147 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.492902575 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.976537163 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.24534095 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.974626119 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253097118 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.273794197 seconds)
    (163/309) benchmarking ("sort", Int8, false)...
    done (took 4.250183553 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.252833594 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.25295403 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.963743269 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.589331895 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.354799657 seconds)
    (169/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.807846689 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.401036228 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.278011741 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.829509548 seconds)
    (173/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.579686045 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.239525263 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.229923244 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.824251346 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.234564972 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.241089452 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.992138196 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.621136579 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.8502316 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.511460849 seconds)
    (183/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.25935171 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.230821544 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.813039147 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.257696621 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.275846419 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.223733903 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.258087988 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.357188192 seconds)
    (191/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.42980376 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.417452564 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.950397687 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.268971791 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.238886621 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.320242481 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.231155669 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.213604816 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.522059176 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.239950791 seconds)
    (201/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.954084336 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.302841922 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.098450109 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.230794042 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.256964185 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.62706421 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.859312557 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.286746437 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.268630859 seconds)
    (210/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.072819632 seconds)
    (211/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.475929028 seconds)
    (212/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.242277859 seconds)
    (213/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.244690903 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.682941553 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.276738713 seconds)
    (216/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.348841813 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.361667717 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.858415268 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.808863171 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.438697809 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.070271558 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.21756886 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.335285929 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.077734037 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.271471982 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.879235869 seconds)
    (227/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.557075254 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.330795317 seconds)
    (229/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.624935644 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.29762233 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.997169075 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.272118347 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.329744497 seconds)
    (234/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.294294561 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.542937071 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.653329417 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.571382849 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.232183376 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.257325923 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.292750413 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.567903094 seconds)
    (242/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.33958395 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.719456418 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.53662177 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.013641186 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.771987182 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.65307046 seconds)
    (248/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.7988301 seconds)
    (249/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.445244757 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.215176162 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.952975214 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.25902311 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.440524067 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.140237327 seconds)
    (255/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.249802392 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.320220712 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.438097177 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.971056237 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.231869202 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.262606598 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.262671407 seconds)
    (262/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.319197435 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.655187834 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.3675677 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.611829784 seconds)
    (266/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.531765287 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.063537662 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.216637626 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.393586831 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.257560492 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.23362202 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.41087339 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.218642839 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.335780303 seconds)
    (275/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.317523481 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.241669684 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.515855421 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.242776318 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.23464556 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.266761679 seconds)
    (281/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.632136142 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 5.511566984 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.314181436 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.318441303 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.690356688 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.57320667 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.234742332 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.650970037 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.362391108 seconds)
    (290/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.568156684 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.584816235 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.448730134 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.981422198 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.806141702 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.066042675 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.091681992 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.553298449 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.259119731 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.279105588 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.458489811 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.679923304 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.950446336 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.797588144 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.441835362 seconds)
    (305/309) benchmarking ("sort", Float32, false)...
    done (took 5.269343628 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.260053485 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.252831977 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.247647766 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822789251 seconds)
  done (took 885.902736946 seconds)
done (took 887.05927861 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.27037171 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.265903255 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.250049285 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.269035046 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.360768138 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.280918035 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.258177214 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.25059942 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.294826461 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.297570242 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.249249166 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.279720791 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.250327268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.249291475 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.247612772 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264458269 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.247103183 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.247314727 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.26622403 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.258081421 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.267359373 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.24824258 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.296642772 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.27989488 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.251683869 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.25017816 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.252478345 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.270213306 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.360019906 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.253133953 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.25258405 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.260578736 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.24523087 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.243327433 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.243425483 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.270463599 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.261869909 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.257330129 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.253010506 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.280920636 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.647888483 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.247126952 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.252284743 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.251148726 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.250317709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.253697543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.251821886 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.258226945 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263384801 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264458713 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.615796854 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.262232151 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.255333942 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.250107214 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.259764363 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.250507725 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.253463712 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266920805 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.271362713 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2675001 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.24088878 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.251208975 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.251250057 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.267414887 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.258878272 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.658085817 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.242625632 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.254852392 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.626513292 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.252178076 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.658157912 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.257779596 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.25215756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.266884964 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.284722074 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.249924762 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.241318585 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.249663877 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.26126156 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.250991487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.261905815 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266554885 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.256656957 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.251566085 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26606672 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.284522716 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.261263945 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.254222525 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.261316343 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.273045257 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.258960424 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.263839125 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.255578944 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.247421898 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.261401206 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.256950352 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.256615236 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.256643886 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.257607648 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.262545971 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.628515046 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26679743 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.248473137 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.249059818 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.251130587 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.267325284 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.629574929 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.250916139 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.274752388 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.299850578 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.253545454 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.244203505 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.254036337 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270309125 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.262704368 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.255982409 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.24982976 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.248701285 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.630897601 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.267270951 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.253993422 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.2539535 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272592091 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.255743311 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.25102478 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.26440289 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.252564532 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268995686 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.376560589 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.265034735 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.286417401 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.252989119 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.257276104 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.286701557 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273182311 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.28709128 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.255394592 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271224925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.270888211 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.249281511 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.2670179 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.264772226 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.255951974 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.260356931 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.248930744 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.286096937 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267876026 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268936609 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.275873481 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.377874549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.252365699 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.284436024 seconds)
done (took 212.238321885 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.310260034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.246167971 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.337578631 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.252860148 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.349697502 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.348561932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.249188936 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.249013315 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.247688787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.631267367 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.248695994 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.250068231 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.247214405 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.248204765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.333490646 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.252956875 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.249352123 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.592292035 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.253113407 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.322301917 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.249071998 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.24985696 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.252773051 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.632169268 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.24545797 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.247824969 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.322822766 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.253289373 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.597676314 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.252894432 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.247609909 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.596460131 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.341628198 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.269381638 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.261898812 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.260832654 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.352130192 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.268389529 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.332533986 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.33273116 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.338611282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.291211063 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.252254192 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.253099274 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.256148436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.253258194 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.249873889 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.281155436 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.24644766 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.249484261 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.595192636 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.263811242 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.249304054 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.252242793 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.251151013 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.282496411 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.251975918 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.254439084 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.343128505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.254853836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.315366279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.633841017 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.632604768 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.253359674 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.248308808 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.253592886 seconds)
  done (took 142.974788107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.320286333 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.326219215 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.365945586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.255997055 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.305130767 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.370638766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.25515415 seconds)
  done (took 10.379060042 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.262083184 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.256399126 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.304407899 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.304470458 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.254222203 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.400435215 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.254358357 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.267059356 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.252369867 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.306574748 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.258593581 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255665263 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.262143588 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.253147483 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.301832053 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.267346872 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371336731 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.25855349 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.255073147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412677917 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251485961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.26270395 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.307471357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.267090045 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.258298163 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.260887248 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819140458 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255675271 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.254214272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.256262009 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252916752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.292803706 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.257317702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.252412882 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.254839379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373084557 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.256456411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252906845 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.257158994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.249999177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.256326867 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.258666483 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.257380674 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.255193935 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.256428401 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.281434166 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.257379754 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.256894355 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.256532483 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.257761456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.308690635 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.257670285 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.254434405 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.256233595 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.31247843 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.262910367 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.257118638 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.255773802 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.259414011 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256260896 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.415377873 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.305199797 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.258048007 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.305058222 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.258006356 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.258414345 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.256734018 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.259122251 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312120676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.258997669 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.306056418 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.255590636 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410715806 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.281591546 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.259804042 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.260576516 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.263206896 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.258474881 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.253171515 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.262475276 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.254765532 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.261719718 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.264918201 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.255990728 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.255947384 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361916765 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366160028 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.255714354 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.270195999 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.265734759 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.256424608 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.31100874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.258692227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.256526275 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309176118 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375187692 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.31193127 seconds)
  done (took 145.703436218 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.263432166 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.26646377 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.261189188 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.275447833 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.259022755 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.259189145 seconds)
  done (took 8.770232197 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.262993712 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.261667228 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.261047719 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.261537712 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.259602429 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.260281253 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.261314514 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260960931 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.263534967 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.26092255 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.260482621 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.260929283 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.26296321 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.25952885 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.259966721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.259592702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.260026157 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.256886031 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.260204552 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258900015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.352160717 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.260255596 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.259947474 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.259470993 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.266807941 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.261063993 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.268757111 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.260004975 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.260180513 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.27090198 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.264006437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.263638791 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.25999068 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.269918492 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.265546381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.262778487 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.266354532 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.263869284 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.258836193 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.263497739 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.26526431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260276321 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.262059763 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.265499312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.265278145 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.267942601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.270557541 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.270653207 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.262706967 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.265651649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.264596171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.262003274 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.263734138 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.26310321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.26421068 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267484181 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.268676194 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.2627177 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.262703971 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.264144467 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.263523248 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.263303679 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.265227463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.267244223 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.268993495 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.266209745 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.262905031 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267149693 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.262112058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.26190937 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.266035316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.260086291 seconds)
  done (took 93.232336659 seconds)
done (took 402.237957281 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.627213571 seconds)
  done (took 7.815843106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.33244818 seconds)
  done (took 7.524421906 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.620237824 seconds)
  done (took 21.819596853 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.293938288 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.338962651 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.258486942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.259806159 seconds)
  done (took 26.341303601 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.629560904 seconds)
  done (took 7.818605587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.255950853 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.264535954 seconds)
  done (took 13.711887972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.69705471 seconds)
  done (took 7.887703139 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.939688945 seconds)
  done (took 8.138209743 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.279201551 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.284459153 seconds)
  done (took 14.00658828 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.240174755 seconds)
  done (took 7.430479716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.418363252 seconds)
  done (took 8.611147688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.261994995 seconds)
  done (took 7.454917659 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.323199853 seconds)
  done (took 7.513080061 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.013303053 seconds)
  done (took 9.203876392 seconds)
done (took 156.466881252 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.256513321 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.256680355 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256020699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.257953581 seconds)
  done (took 26.21759386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.29823591 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.297777953 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.299757517 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.308315462 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.300967759 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.297005206 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.289563984 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.29119564 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.309965167 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.300689689 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.29896835 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.300484676 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.297076047 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.289729283 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.300742693 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.299283394 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.309005003 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.300195573 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.291276008 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.301819656 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.264390263 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.308423051 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.301789407 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.266263312 seconds)
  done (took 32.314614877 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.462085128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.336616281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.417108659 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.316404266 seconds)
  done (took 6.723820869 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.317315256 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.319084191 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.327852155 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.368431103 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.394670855 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.327057633 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.293694975 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.287771769 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.272413579 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.318607261 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.39542996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.334007608 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.403703655 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.265905878 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.452831548 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.265589423 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.26671606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.318106725 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.369516154 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.39214721 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.267459474 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.318841627 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.321957532 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.335556682 seconds)
  done (took 33.126621321 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.266401721 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.27429139 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.271656823 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.264351072 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.264760429 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.267724182 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.271659096 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.268100438 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.286159435 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.267381179 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.265330404 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.265464512 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.264186391 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.265177045 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.264957816 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.279282697 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.279080785 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.26481267 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.270859859 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.27244712 seconds)
  done (took 26.586506725 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.260021605 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.113754518 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.612485389 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.515093884 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.260569505 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.25585736 seconds)
  done (took 27.209987164 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.330843023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.468037086 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.267848924 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.617752 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.698066173 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.267451736 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.268396284 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.503078132 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.794423847 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.788123868 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.320436301 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.332518489 seconds)
  done (took 18.853405663 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.269473831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260612902 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.265133228 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276757743 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.319740627 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.269610354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.273251968 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.261266704 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.321529837 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.324535474 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.272308725 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.32256295 seconds)
  done (took 36.633532296 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349145335 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307911774 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.260066852 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973918688 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982724077 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471894461 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.002987844 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126277624 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.268858274 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537341831 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265064738 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354062689 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518363528 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26979703 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264231666 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.248582451 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489254677 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749489643 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265580945 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.152596846 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289775498 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271209232 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.334043398 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.290916885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476305212 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.242520852 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.525455364 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041634145 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541714494 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276667222 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274915715 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264153562 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538484797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924622151 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360270871 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273430308 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.941218251 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810864773 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.26614394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.232694725 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.085540764 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267267157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274964361 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265454898 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198278203 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268768537 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690773317 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.271757041 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.976361643 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.265964991 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275003462 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358359831 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.268659885 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.834293164 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267718506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.269105725 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.263579969 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26990155 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838350723 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675787609 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268086717 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.200907336 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.624288098 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151821555 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865763169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365490501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.269255182 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269659943 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201444188 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.215164199 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281854104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413635758 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.287305775 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916787847 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959135432 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279282919 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198635543 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80142179 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273804635 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.200114419 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49434149 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0431867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203481176 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.211730098 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200748656 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979290086 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276503506 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.656580029 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.274299285 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.68481596 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.279668086 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282594858 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290146524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.490738235 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.151315791 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267223959 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.108169234 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408789067 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28366884 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.687546828 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203631572 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.267369351 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522525468 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.480591855 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273250263 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.26148264 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461189752 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26811639 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.281421002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27481589 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.277789766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.823635014 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.28003489 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.672151795 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284148488 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.04311577 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022914906 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271795209 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.36703807 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27259007 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512674756 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.045281415 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168819109 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336545512 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271403551 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268810018 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.269353303 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11900405 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.15956105 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.270295209 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272092701 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279642542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.269635471 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213151569 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.27350242 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275528642 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.047252463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.493947086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272732004 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544189058 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204059366 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417981684 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277602097 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.490864186 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.469420886 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.26988441 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530347604 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271480231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272212859 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281790893 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288811162 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365529469 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292271112 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.279458082 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.527660756 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.274210395 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.273736167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.264406516 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.051244796 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275064557 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.275687364 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.091953121 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825918459 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249466374 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276260955 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159664475 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.284821884 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337496705 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27603587 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.280561209 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.045942461 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073121413 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.276873864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.268107717 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494955537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281151157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.257000114 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3518 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.461079084 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.83312398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283408711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.205937765 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.982068572 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.964014404 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271551278 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.461932964 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273141481 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282072797 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.28237379 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.761620074 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.834553151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27363308 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.17291626 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.277623383 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283223609 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.276638524 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272874011 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.030760588 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.694956401 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288421634 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.284494654 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41619342 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.286240472 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.206569316 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.788171128 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.278127974 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271500198 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.048459054 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307506971 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.178868536 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756278178 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530403677 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.952056449 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285440138 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.290250157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.30216894 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.270588811 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.128972393 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299051967 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.286229595 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278556495 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.283903471 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.193802951 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.714280875 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841359972 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989750144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786818537 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211280812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.288878105 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.168528982 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701731979 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209499038 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930441575 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459510072 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699870921 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221862552 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462883091 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.476924682 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020525178 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281062191 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500879507 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203825915 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.141487616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300849635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48711692 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306949734 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28033854 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203646233 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.573183561 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498367521 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.153691997 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357601729 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698194996 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.147231963 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.067380747 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.272967244 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.636027204 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442288075 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.905883457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66378855 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270166455 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275062712 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748864981 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281646901 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.801216045 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89761738 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286809387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.466262832 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211310637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.287863342 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286003334 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.275925537 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.523526745 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.278170237 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.527792573 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285759617 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210863784 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277228381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789224366 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.134154918 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.281282972 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276247812 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026977123 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280147919 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556255599 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.289011971 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.011239185 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277176224 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.210397014 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211476278 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.970704578 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279896144 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25285669 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761418625 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.618294014 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264803061 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305328875 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122267682 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.533779094 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.291155799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842067215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503870564 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.048087447 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300436806 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.377280322 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.197484373 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.27835532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175730532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514566299 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100013525 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499654508 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.282296182 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.183400909 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27621453 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490813044 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186591389 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277979916 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53549944 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.988272861 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.285989724 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991395796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304987781 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278804462 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29276402 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.635287087 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284867951 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349882887 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287297185 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.288546939 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.290644189 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447501527 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278970636 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280510581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.292977049 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372167787 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.736986359 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.03250364 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.052548561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852393269 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007886271 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.848750021 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292363887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277381932 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279555947 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212963418 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424212288 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.805280238 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55297602 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411447172 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.695442789 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302014733 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209808964 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307235949 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490741328 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553775703 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.150273669 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278959021 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939865565 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.17343194 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291655002 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.490971797 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77591266 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83940667 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400760706 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286461718 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.703628941 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555854414 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372796431 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279902215 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86905568 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.297514141 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.665013137 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.286874708 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290344332 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429374887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291086593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954370141 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.291808262 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.441730491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.053604499 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.303235094 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538259994 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.739679824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.289977997 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852216626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968567325 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545494929 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352014291 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293665354 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.384890825 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427587485 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.281542837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172703898 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281574609 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126579423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.992975269 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.292261125 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854718986 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545714182 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.278720901 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.287649165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305242135 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.292076123 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505648685 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006430225 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507665244 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292040241 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28502611 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274895799 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858411948 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295662274 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217878129 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284031816 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52505215 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520097407 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308595887 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.735326364 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.993273017 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843955239 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.256446284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302326137 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285015939 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.971972818 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856615891 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.041045822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774260203 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943005466 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284074551 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557468007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.289839296 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286293308 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560404924 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.287962777 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.28385156 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296650672 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.856756314 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037789339 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.304178244 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.255767168 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.221320549 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.510454967 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90396262 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222783804 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281101769 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.46215338 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287359318 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415828224 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291783282 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.296103749 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2894606 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.018622333 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570222008 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.288402624 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.273754226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.276096023 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290813549 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290413113 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512399561 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288877369 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.959707143 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.636764586 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541919271 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292338997 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.271178429 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.289977743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287049636 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003735969 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254811638 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.790321004 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8471463 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.295869564 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.296782047 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.290928203 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.504028484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49810373 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28787648 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297331258 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285716121 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301558748 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.190714904 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.054158034 seconds)
  done (took 1553.390410217 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.293513143 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.292660606 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.299915348 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.316828596 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.326593227 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.371601119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.374763552 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.372649698 seconds)
  done (took 51.867401131 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.298838462 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.44132702 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.317197418 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.296458805 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.296643604 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.288327547 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.734618311 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.287381315 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.29175501 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.295912079 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.288239237 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.291551851 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.940162586 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.293435672 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.299288318 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.277265563 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.295953382 seconds)
  done (took 64.459226809 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.290821182 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.761985664 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.384761348 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.287852474 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.284672466 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.299478564 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.148609362 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.36101576 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288906137 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.46935877 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.939942266 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.322351296 seconds)
  done (took 84.060880644 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.29557851 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.296256885 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.295805076 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.297237717 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.29583581 seconds)
  done (took 7.700043725 seconds)
done (took 1970.333814352 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.716153151 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.971948746 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.955943691 seconds)
  done (took 5.149170942 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.434719096 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.484838894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.605514432 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.610889257 seconds)
  done (took 7.357653315 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.577705657 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.67332665 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.476525188 seconds)
  done (took 5.948267878 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.669041345 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.304941861 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.410429271 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.287596664 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.288672588 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.289260157 seconds)
  done (took 20.08851056 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.291428992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.29549313 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.291778091 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.297331786 seconds)
  done (took 6.39804302 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.274082491 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.968810015 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.274110346 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.288572928 seconds)
  done (took 18.027268979 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.039134252 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.053113943 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.03696141 seconds)
  done (took 7.350931972 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.294581393 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.132936606 seconds)
  done (took 9.649009428 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.592654602 seconds)
  done (took 2.813902175 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.425301917 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.620859771 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.334464587 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.261986981 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.35472272 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.038569115 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.897714516 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.49112015 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.25138416 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.4248314 seconds)
  done (took 27.32386825 seconds)
done (took 123.427991805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.021536152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.531083738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.498399675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.994477526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.557149562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.497111999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.712059003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.96134191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.502583244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.488733167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.994861726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.589542633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.445504945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.536413435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.445251485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.537592986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.525525938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.066951662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.719257086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.87968566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.71296628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.634116283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.825569529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.675238623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.522278339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.447927957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.215153718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.53410644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.889763553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.276160801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44498302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.0557353 seconds)
  done (took 191.961738692 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.303361901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.288489425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.287464035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.299034058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.288607734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.291784816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.30410991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.287046478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.287884271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.311209529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.293756311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.287185821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.288645254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.303491937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.303584609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.288738474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.302067399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.294578672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.294998161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290511024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.290705335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.288443049 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.300751405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.288961708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.307210955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.301155693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.288366366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.309934947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.288618825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.29394428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.29255029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.290267667 seconds)
  done (took 202.664393962 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.300850312 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.290591207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.291434363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.303409619 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.294373814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295264704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.308814616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.289534426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.302685472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.288356474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.288397895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.28927741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.291498578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291121853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.294952684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.289209727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.291057952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.29311462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.292711725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290334534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.301538601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.291007789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.307894507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.300274484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.294275278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.292316429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.290129968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.303685565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.290288998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.289347016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.302112762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294793728 seconds)
  done (took 202.660410186 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.4984241 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.302737618 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.304979515 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.25601472 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.303454732 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.303595756 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.293748992 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.492528828 seconds)
  done (took 13.984125174 seconds)
done (took 612.49223452 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.592790364 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.278992691 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.500197276 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.32352707 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.083903105 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.319672329 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.32326917 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.494231017 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.231166847 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.496064462 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.597516572 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.32077545 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741807762 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.321356649 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.573875022 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.418731014 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.17855889 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.294989276 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.633442754 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.820587451 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.575352937 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.821661313 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.490121913 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.222908172 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.743569818 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.825376845 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.047617082 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.181487983 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321591346 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.640947501 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.889977254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.300057826 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.381047118 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.361555834 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.417336147 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.400422825 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280219401 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.359207659 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.500567923 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.587566902 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.861590499 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.043270602 seconds)
  done (took 90.025012997 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.290159722 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.291076055 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.288681019 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.289972339 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.291732402 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.289248443 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.290943444 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.290220521 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.29121277 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.291878818 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.292133776 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.292718329 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.288799746 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.29258182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.29024095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.290734609 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.290550719 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.293203162 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.289578097 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.290799681 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.290820284 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.289784707 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.292306175 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.291737465 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.288284916 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.29233007 seconds)
  done (took 34.792613062 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.307334084 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.551890228 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.71994383 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.309694939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.305734334 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.307126407 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.381457085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.305956985 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.308188479 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.307769221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.460734688 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.308605992 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.341425208 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.742724225 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.308769549 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.306925817 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.305642467 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.304614657 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.563569945 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.315973481 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.399366304 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.307865522 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.38025786 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.316288289 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.325154664 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305211272 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.310897498 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.818017926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.30894022 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.459602667 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.056188604 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.378242024 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.773815325 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.733186222 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.057732848 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.30800037 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.306728462 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464132582 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.308420482 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.305964248 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.381955453 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.308493157 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.733931237 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.937430218 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.32454132 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.307412966 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.842193475 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.463130654 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.547061308 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.31540874 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.753585501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.309235681 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.311490664 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.307611105 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.550503724 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.315407206 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.310305929 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.842757376 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.326807786 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.38554082 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.311222089 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.307555718 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.571507928 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.308175654 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.560021277 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.309497204 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.315510697 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.307282521 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.735883415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.310498221 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.961790823 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.323883353 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.308812533 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.461531191 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.557535975 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.875303683 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.311964431 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.577370893 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.791295908 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.382971426 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.313026694 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.810478084 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.388760611 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.312166322 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.312409961 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.312975978 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.31164726 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.357525706 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.383065605 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.886944363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.948943561 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.859928004 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.403085268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.322077228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.310073411 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.842805076 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.325611536 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310190852 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.732144592 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.958239211 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.326034568 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.318247223 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.946094197 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.328690347 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.385999458 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.313803051 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.738618642 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.311936115 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.359416083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.311402671 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.317560674 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.313760445 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.386433642 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.312672054 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.312190466 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.929916533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.484957577 seconds)
  done (took 172.58773335 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.315297913 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.302835121 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.305479858 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.300100311 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.304062526 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.309944195 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.302935181 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.303785573 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.309558221 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.305000507 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.305148609 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.305105557 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.304180546 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.325781794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.312500519 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.312024585 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.917683201 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.305403208 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.318550422 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.302400127 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.090658332 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.306583039 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.318034339 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.303587026 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.305703438 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.304939614 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.311928408 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.305865145 seconds)
  done (took 151.253038352 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.312405717 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.880065528 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.315204275 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.440637565 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.33306943 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.308840914 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.438110598 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.367356198 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.312994028 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.31107496 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.310609831 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.615957961 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.314624424 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.830350614 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.497655734 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.442293867 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.830094026 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.315004223 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.309132611 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.311920219 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.441490092 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.321009141 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.618986185 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.877730197 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313163014 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.867590822 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.299639717 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.314094323 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.311471416 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.88117877 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.309112147 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.621647335 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.387889554 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.371747603 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.869336564 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.831406754 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.835477035 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.455919006 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.309247847 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.313081479 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.312109277 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.300986406 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.863183236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.312858307 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.315027588 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.857479247 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.326287574 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.316384528 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.322965193 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.311991925 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.371308146 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.375210375 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.61373656 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.865595904 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.389185689 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.335603026 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.441358061 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.689617422 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.317491078 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.836329354 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.302139575 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.869255773 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.316448798 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.302464816 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.315060349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.320660224 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.460651124 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.440833443 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.834259329 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.315683627 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.835546821 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.461994739 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.314613824 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.314008139 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.316551187 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.866985097 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.836057277 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.462561338 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.447897026 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.502512111 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.304676824 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.314297231 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.303532136 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.391058527 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.314794355 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.869746805 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.836121028 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.317546237 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.317658877 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.317933576 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.316702246 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.487270935 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.870173966 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.389380881 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.831204082 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.627088485 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.611657473 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.314660815 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.372483141 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.316802231 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.614289882 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.315876332 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.372273676 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.756648889 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.613805495 seconds)
  done (took 156.999746005 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.557897387 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.503667872 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.4080745 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.427578834 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.889735311 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.868823885 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.604018925 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.442804683 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.42332815 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.561290245 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.449577891 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.404730911 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.484996479 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.393136491 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.0329314 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.383846859 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.410582484 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.444292863 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.411036902 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.353609117 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.93706811 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.598901226 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.484376239 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.249493673 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.40509708 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.072706676 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.860286136 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.871498574 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.491275156 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.587850645 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.841129126 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.427423376 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.254842537 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.959514246 seconds)
  done (took 63.741199305 seconds)
done (took 670.626297923 seconds)
SAVING RESULT...
DONE!
