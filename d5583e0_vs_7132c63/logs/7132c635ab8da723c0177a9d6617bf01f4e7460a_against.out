cset: moving following pidspec: 18694
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.415698055 seconds)
loading group "string"... done (took 0.609382321 seconds)
loading group "linalg"... done (took 7.657832015 seconds)
loading group "parallel"... done (took 0.175096411 seconds)
loading group "find"... done (took 1.198583837 seconds)
loading group "tuple"... done (took 2.119819078 seconds)
loading group "dates"... done (took 1.350103421 seconds)
loading group "micro"... done (took 0.24932153 seconds)
loading group "io"... done (took 0.982201964 seconds)
loading group "scalar"... done (took 42.272139451 seconds)
loading group "sparse"... done (took 13.852214106 seconds)
loading group "broadcast"... done (took 1.061652179 seconds)
loading group "union"... done (took 14.710167989 seconds)
loading group "simd"... done (took 4.841120209 seconds)
loading group "random"... done (took 9.782263578 seconds)
loading group "problem"... done (took 2.031579655 seconds)
loading group "array"... done (took 22.914976307 seconds)
loading group "misc"... done (took 2.064682357 seconds)
loading group "sort"... done (took 3.49637663 seconds)
loading group "collection"... done (took 19.829104308 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575939882 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142846765 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150957199 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131793798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205005423 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157867032 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159541449 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099510702 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962168056 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174694376 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153897009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.532173097 seconds)
done (took 5.183377735 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218333996 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095358355 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104650494 seconds)
  done (took 0.87590648 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078487133 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147865586 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095060864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078570715 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095329847 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078628531 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095471171 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.09382176 seconds)
  done (took 1.366535316 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087221864 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098077893 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082768345 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097124758 seconds)
  done (took 1.046844359 seconds)
done (took 4.275738276 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742660388 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274191968 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205681307 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46692908 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197501804 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21918689 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6751937 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337538441 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254598745 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100408063 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145157837 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391812324 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138516306 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680278283 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091203909 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126126317 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177277836 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439880089 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083638629 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110395274 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117680016 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143070926 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130994983 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091306273 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186712371 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082454952 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.196592203 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109100065 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081987873 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.278091652 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202114441 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68670281 seconds)
  done (took 10.887560254 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113150849 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135290165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099280296 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139292006 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135567374 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103127635 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085195496 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097408459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123191043 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177509976 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131549807 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121994579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095881718 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082702268 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116186605 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246939846 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119751273 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10103631 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101348616 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088831998 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138190677 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113772741 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10964478 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094705493 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166687245 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223147184 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111278362 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126864479 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098122431 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113470292 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1445865 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144167499 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095371992 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081223413 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1751938 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126113968 seconds)
  done (took 5.176887543 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090391477 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190850747 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121703381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172087514 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080944612 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144281971 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095718953 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113839837 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258006215 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.128004409 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177341944 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142319144 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101025916 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097270501 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08254372 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097935663 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.617265191 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123832716 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152062293 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116325364 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103267324 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085101136 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365144753 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103456702 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080470004 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098930133 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070679787 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162542818 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102884786 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.166283763 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122974846 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082152247 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137008375 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207491822 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125408482 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.111372967 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136695384 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097738334 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079523244 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177327558 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105438626 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09725655 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103851934 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135217307 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136472577 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098052291 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081392177 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205118615 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096727632 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114727053 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.934886173 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180306206 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08956323 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096267337 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327271377 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098944385 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097992465 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07835694 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283048157 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189165463 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098521809 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080840992 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097572051 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081436299 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399138379 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081964771 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.75433645 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085960997 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109787123 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106009836 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100895075 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097443839 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087866779 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10509541 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098213176 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098195553 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098926463 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080235266 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096950351 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083254412 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108197862 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102436061 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081528502 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16176975 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079322243 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116815724 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126295162 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083691274 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095635041 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114338728 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098397181 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100561164 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117457017 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100318606 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108571316 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084286447 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14297464 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096856114 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135313482 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092440223 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078338046 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127888675 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102469819 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13111545 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07825578 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111889204 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10042812 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085019975 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096350659 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077635827 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165136918 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080005964 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097505492 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081604365 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11257591 seconds)
  done (took 22.532568384 seconds)
done (took 40.37010871 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32048059 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103653495 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103591439 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103466706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101915928 seconds)
  done (took 1.494279299 seconds)
done (took 2.230785591 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.165987331 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115949487 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095647517 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127795259 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077807299 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.134038075 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.13170735 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09454808 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132042706 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093758581 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127304995 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077771738 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093179659 seconds)
  done (took 2.229303532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095379467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114830997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084306016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111094538 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078113382 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112622073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093701915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120637135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111951855 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087385124 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095832036 seconds)
  done (took 1.834587795 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094208775 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112584819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083045953 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110395004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076987902 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111277099 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095076549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119254647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112572823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089835152 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095847419 seconds)
  done (took 1.832006463 seconds)
done (took 6.62117637 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091452971 seconds)
  done (took 0.817785177 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925841294 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.849380471 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113820728 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151553953 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317521221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194945364 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483484982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126298948 seconds)
  done (took 11.079834819 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116105952 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09992784 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100155269 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097339208 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104395 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083287638 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100815249 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100979295 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086748176 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099527773 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082826143 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101849149 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101406182 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086157087 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101177781 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082456706 seconds)
  done (took 2.340001637 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118694096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118761307 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106395331 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108998743 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086890322 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104068819 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105454763 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088756917 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101463609 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103502053 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090134253 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105948667 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103286952 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079906774 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105529082 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108125076 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085948233 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105944152 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106969992 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090798828 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106628837 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095589806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087617688 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106217276 seconds)
  done (took 3.263841071 seconds)
done (took 18.234045766 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161031274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108173284 seconds)
  done (took 1.004993721 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097643246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112850752 seconds)
  done (took 0.950988081 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098842958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096330103 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12375614 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109702569 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08109488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096616634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12000519 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080028523 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096454895 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096823177 seconds)
  done (took 1.743450078 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083604287 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110053705 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101352918 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09534701 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106068214 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094867089 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088660818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098927551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109147448 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07807774 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102902851 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114433989 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086067616 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116458789 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105117385 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099263974 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086718712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09879979 seconds)
  done (took 2.518369897 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080666771 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096609936 seconds)
  done (took 0.920388782 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082200529 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094978817 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081290014 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097510622 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094774836 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077452389 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093821935 seconds)
  done (took 1.364483423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.437830682 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135546785 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261487431 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101189009 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103200324 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302941835 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097366265 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085860842 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103017774 seconds)
  done (took 2.427254111 seconds)
done (took 11.670762456 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095115599 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115481152 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113557947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46268238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107924261 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097408717 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159207004 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253127234 seconds)
done (took 2.154277654 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144465424 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.596207656 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424644094 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229620354 seconds)
  done (took 2.001590329 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402161272 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099205958 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082770277 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081935513 seconds)
  done (took 1.418986334 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080383485 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100038999 seconds)
  done (took 0.932566392 seconds)
done (took 5.250192212 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082620342 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131935986 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080258004 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09745168 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079980582 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096427667 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078687972 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096294374 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080094764 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097302375 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096725929 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080879771 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096655543 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08119517 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094896716 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078576804 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096684315 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07851079 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094894403 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079216897 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09451286 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080299052 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093849752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077599082 seconds)
  done (took 2.933539092 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100228197 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098842163 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10327251 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086435826 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102832369 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087672908 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102674215 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097426258 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087670249 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101216899 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101339418 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085954918 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100329332 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085603208 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101105871 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102318781 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087585099 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099234437 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082711936 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102727846 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103255218 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081528727 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103527769 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10197148 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084612351 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102257233 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083409635 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099067689 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103082197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085594567 seconds)
  done (took 3.62239032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086288927 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094359519 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079158807 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10223161 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079299709 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097789884 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078587856 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096486665 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079584886 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096458144 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080109828 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095294699 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078726693 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097002675 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096432668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081728545 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112243528 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079114972 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095878167 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079503511 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098763284 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078982387 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095919668 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077935844 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095652118 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077780765 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096935164 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078976576 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096733786 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078394881 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099970622 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082628078 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095808713 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102102778 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081500416 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095283431 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082517309 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094303801 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079135946 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093742222 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077880386 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095574292 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078594621 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101949594 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078476071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098319212 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078373285 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097038243 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079427563 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098782835 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094279807 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07828497 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097590477 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07992878 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099854048 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078671867 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096950864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078517398 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097688268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078683492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09612528 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078151223 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097966832 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079099293 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111378564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102118893 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078696655 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096175393 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080014728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097883831 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080614567 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109736608 seconds)
  done (took 7.202861701 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084606092 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106472137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080261892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099002653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077626737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0971557 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099438441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079751014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098518783 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08479588 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096972697 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080002358 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097263231 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108216694 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07997744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097481566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086726158 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094406336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079147976 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099430993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079437682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10059153 seconds)
  done (took 2.767837213 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209419164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10451187 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14360406 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108096871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084383589 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108197492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102342644 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086138245 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103308875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084143914 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102192044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102820919 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084551062 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101341844 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100789397 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084508337 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103815809 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084396689 seconds)
  done (took 2.662502846 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093762472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099205166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.212535317 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098764944 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098845752 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083853845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104799361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108837942 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084949211 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098819544 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091690559 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101705796 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100919732 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081723989 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100911238 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082257625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101538671 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08225812 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109218484 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105547758 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103214586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091994101 seconds)
  done (took 3.003683978 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097663091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100898706 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118914237 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085325792 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095905672 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080413645 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106774908 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08159907 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105976061 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101026669 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082014658 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097978567 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087727245 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099295778 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104094142 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081963815 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100996549 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082211549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101165226 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077812155 seconds)
  done (took 2.658415828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103999023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100486241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099682379 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091313823 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100627104 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082172045 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10903551 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100753697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082347845 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125272617 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100532993 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084004693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109238906 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106268505 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100134063 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093395302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109549639 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109495004 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082336441 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100537816 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125166441 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083482582 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109705628 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101012605 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082495634 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099876161 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100143789 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089506278 seconds)
  done (took 3.553827413 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081943779 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098673277 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082222039 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09679791 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07960988 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096609733 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079548903 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096307488 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081983951 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09641401 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081536207 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099294566 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082232146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100447844 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082157819 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099308361 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081805816 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096899619 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079255954 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096046415 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081167761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099736737 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080817843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097014914 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079665468 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099104163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079347 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096314996 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081397212 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096940782 seconds)
  done (took 3.453031568 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091669173 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107742123 seconds)
  done (took 0.972661015 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080356489 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115671807 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07966113 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103217147 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087185305 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09996052 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108613891 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087281662 seconds)
  done (took 1.534196356 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096798714 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110439326 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083379667 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112804111 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11038909 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098691468 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17138164 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102304887 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106743657 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079905682 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113109038 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081410167 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106994656 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082695386 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106104394 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088754869 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097847401 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105438828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084775527 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098876829 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084183426 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108878158 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104468998 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079826748 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101288007 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091574989 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113314203 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101762592 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085705104 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106940692 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088051599 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095125711 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082207968 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101267164 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09780231 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092180893 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119028678 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085660506 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110908987 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102132311 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093967004 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09577677 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104362479 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088523392 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110319456 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083508972 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100846603 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077284105 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098810372 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08441701 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095713303 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100067315 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078163453 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106944915 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086764741 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111537374 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081967388 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101429758 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.1024592 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085968032 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107190036 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085858112 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103416287 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083407253 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110398997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105078738 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092885805 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095963701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077816286 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099168407 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092681915 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124158142 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107836635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084093797 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102264293 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08021634 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103800124 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101835147 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088752281 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106743685 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08332935 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107970875 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108523107 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083243183 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102400757 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109431703 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081864879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102325839 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079921967 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11892903 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080816283 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098410772 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09756474 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094303742 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104412536 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08274443 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098221279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089990151 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095183551 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100202239 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08415676 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101395721 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093683641 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108110933 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107239653 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092554873 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108119326 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083701738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104022753 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097534614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084185231 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100251946 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090250853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094285674 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086268823 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101651161 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082729043 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108969499 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09764414 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082938682 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109640279 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089313691 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098805961 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080572238 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104275321 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100648533 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087451121 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109993087 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081853841 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096684855 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077465449 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104444263 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100659579 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087555165 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107240312 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086087577 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096638976 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098614553 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087839899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111298993 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082926015 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101532191 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106884307 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08351646 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099054378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089292896 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104069319 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082460418 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106714229 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101583746 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078900892 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104890756 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085661687 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099339738 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086398757 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10546356 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103599864 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085038081 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099292309 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089777984 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102213734 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081558496 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101248508 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081227847 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11253356 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103652325 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078841869 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09839508 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09170095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099474765 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099827093 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081766698 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102888357 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083600461 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099372355 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082513792 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103057676 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113530085 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088165195 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102551451 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088673918 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113428248 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10031376 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086988957 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10168658 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085045667 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102852264 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092199999 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107113008 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107863493 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086095897 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098487717 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089396158 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110520804 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100191897 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081383726 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099629358 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088521295 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107040525 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087505586 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102533275 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099835958 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08401489 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105881439 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086012712 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101215734 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081575667 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106915101 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101361932 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090501987 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102882846 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111388521 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08725269 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096539743 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087659225 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100423354 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089175109 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096685265 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080673571 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10043782 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101823182 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083085674 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104772866 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077181483 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108905568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09105711 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101190632 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082409618 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101356372 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108260975 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085119162 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105756632 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086909416 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10843938 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112165787 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08268149 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103950341 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094870978 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102312806 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077583044 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10756766 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099471508 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082371867 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100701401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082342565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105273365 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092878021 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108985979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095032602 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086191635 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099666087 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082001479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097377854 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088034019 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104391357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084103512 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109164727 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102417167 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086717409 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105952217 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083303104 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103822387 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103862642 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087334266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102768616 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086249444 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100992526 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085858949 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100847728 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080739846 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103529047 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102010415 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084705836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107854639 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083354755 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102360411 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086084684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102856155 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102831978 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084131301 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100761656 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087420974 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101812766 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084230502 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104602891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07828654 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109905269 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100917933 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092047306 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102920453 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07982247 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108726167 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086435444 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107500674 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103255901 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084732477 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103166313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084106076 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104998643 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091029254 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101434159 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113607789 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092347383 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103414606 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085957135 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102782905 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103842755 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082733044 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103062425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085205605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101983239 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083585479 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107685321 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0866531 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102523315 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103659443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084385751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102756135 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085147786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097114425 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082722448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101382515 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083683794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113016154 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103934771 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082425776 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101919963 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084684658 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10269618 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080530179 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111492581 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112755126 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084027234 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110974403 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101569356 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085359395 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113089487 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077049472 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101749213 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081140701 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100015422 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109181541 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085188103 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111740661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084172293 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10150815 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081360378 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104331924 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082770276 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106716769 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082063824 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106211914 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101691615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08313325 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102401718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086831638 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10493438 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113728316 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083315455 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10285125 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084462483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10011645 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082355147 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101331825 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08615003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103879006 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081134411 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100021538 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102306231 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084935243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103676299 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08383426 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10362614 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09100191 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102947884 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104644742 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088849336 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096732598 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088143802 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102460317 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083605281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101654 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087679625 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106172698 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103182766 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092952249 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102882859 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084310988 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102223662 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100180752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083337134 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102611755 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085213833 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101870506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085548597 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110768553 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081700976 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105793001 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101654224 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084377121 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110529027 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08551364 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10571231 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111875613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084329494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103831767 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09159615 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106688226 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106017548 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085366033 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104016067 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091203549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101699158 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089920929 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103279579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085591214 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105900876 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100987997 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084223865 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102744482 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08348325 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109758767 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085172505 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102486363 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083213644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100814789 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102973424 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08880605 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110714949 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087286304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107424207 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078923294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100652552 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103801608 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081992861 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104310874 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088249037 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109090916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085403947 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103947282 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100830483 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094042251 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109745084 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087578501 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101651331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087863151 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105249725 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105348935 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085770364 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102300402 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085747535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107778335 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086608702 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103255197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109762713 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087434454 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103913699 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085940751 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103825671 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084667834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097836605 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084329963 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105073796 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107912696 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087479183 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103450949 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095331216 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101074824 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084380562 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107370501 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102598384 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089329839 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098095711 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08560988 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10472559 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085078162 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099476661 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102126324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081623392 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105100775 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084092546 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098405052 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095843973 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114160741 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106674912 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083136783 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101718411 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080284994 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098280058 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083089915 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10453544 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086021484 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115026092 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102438403 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083985401 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098011805 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084429071 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106650767 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086876541 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101438341 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078840782 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103082592 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106887816 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090607729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102490381 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085023396 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10728198 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086285152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101884691 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1076462 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081160039 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106705393 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097726903 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105030737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084031485 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109498133 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111668971 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086181063 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099792068 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084952702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10707967 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1027701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086243874 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104260938 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100278729 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107715104 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103273566 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083737179 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106209087 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083830217 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113446609 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085330626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105651061 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108514995 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086610589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114588676 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08697448 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112786873 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107577759 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087793464 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102767088 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084333153 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102184911 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08259223 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105233362 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106498171 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090449852 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113013802 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083617103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11555877 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115321892 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086398954 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101135608 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083560947 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10465908 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080871558 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109108389 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082891337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102773101 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102247035 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084491353 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105480159 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090789586 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104752405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086209792 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104483407 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078946406 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106307659 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106170776 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085910461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10105972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085370886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105385282 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088723605 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109063166 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081358239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11037248 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107703409 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085980095 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102074079 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095915214 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107905672 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091710647 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108089651 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08849667 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110271961 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11188792 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09564628 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110290459 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090311487 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118967084 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112448695 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086472747 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105721611 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095278478 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10647005 seconds)
  done (took 58.381435635 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147087812 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081298724 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099557155 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080576276 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114747352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10102276 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080118807 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099853195 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081517949 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103106299 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083416376 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104048376 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114654431 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126311203 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094028379 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106738287 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098667283 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082414895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099416494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081640729 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110854212 seconds)
  done (took 2.91189625 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105867786 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118850143 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116934195 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120334734 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091380229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116021845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116552689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116399387 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10161234 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112464966 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119103896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115534269 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092235904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111311679 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112632037 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094857488 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120026315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110561963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116304071 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096880954 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113578818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116783354 seconds)
  done (took 3.255679774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085623739 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102790742 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086535251 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098594824 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085010115 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098961078 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089343061 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10189904 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087656989 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103308604 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.101959643 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084150263 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105708274 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080552689 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103477386 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083195973 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152740692 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107535045 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084333358 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106301108 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099251026 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086469028 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099038287 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080591448 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103385666 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08968895 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105585963 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082084139 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10337823 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083466416 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105182363 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101527749 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086337244 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104186983 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083953519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103097861 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085069363 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104572506 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080071749 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102578207 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084899879 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100986787 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084458336 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10774549 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.101876457 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082646428 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105261072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085220046 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098949569 seconds)
  done (took 5.514262962 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106631658 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163031392 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087508118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145593736 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121938207 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114325686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089620698 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143856507 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10325811 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083553711 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124108663 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122113454 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105328999 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090674995 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112279752 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104667219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086850781 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103707048 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109469547 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085337679 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10912245 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091998328 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12202251 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119930422 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109252047 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084207149 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104817161 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110619683 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099177843 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1114818 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110197706 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091134171 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122503718 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107201494 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084538088 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108313685 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124194451 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105257257 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088784315 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101782137 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088018549 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110411258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11088975 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104120172 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105787326 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110630645 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085063064 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102982415 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119533584 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087961701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114576815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121957141 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089868997 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106106725 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11065541 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122136235 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085344396 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104079277 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088825001 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120318399 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102839636 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090064369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120720024 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107493041 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092884964 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121771982 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110770246 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109859181 seconds)
  done (took 8.22533674 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094217608 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111910541 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122851178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121641371 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092610809 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112615415 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11213128 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092066731 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113443269 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116366536 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112547622 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134937165 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088001023 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115869133 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112674931 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093769458 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112638701 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112223623 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092122903 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112180638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111833639 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121800001 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091787665 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121881734 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142307359 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106640372 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111494784 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092947348 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122048784 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111776113 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124924317 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092947061 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113040189 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122052794 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125576711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092222357 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104829207 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11168491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09216167 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112492012 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107466135 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121083534 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09264952 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106689163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111586996 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092931372 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122435306 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125275211 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116939865 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117598709 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092126847 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122052756 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112261575 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111801534 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102066898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147594271 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122480213 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122793457 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112468909 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123549472 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121345827 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110170203 seconds)
  done (took 7.752317589 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108503408 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115756404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118712449 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101269575 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083594481 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110146731 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083506051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103461988 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115382649 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097052918 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118162373 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110307331 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093534549 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117979773 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109919831 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113319378 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093349399 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115563162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121214925 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114174178 seconds)
  done (took 2.98552748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094843865 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125309243 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086427571 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113631565 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108904906 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093483362 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108258583 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108798659 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087435534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108944953 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098530733 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11915201 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107214446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093339687 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119019055 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113018817 seconds)
  done (took 2.523830558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10132551 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118170443 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122208273 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086118357 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105116905 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103072774 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085416902 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102505379 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082803127 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121786419 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085801629 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110929097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105770278 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085389997 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10228893 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090094757 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102903953 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083941699 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106745685 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120674919 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098707935 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10550326 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106680111 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08803702 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106559733 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091230018 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107952094 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104965117 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083788959 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106498771 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086495725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114775636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10290251 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085263796 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105083278 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083656334 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106497161 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10715025 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088923884 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106775046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086023983 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107366131 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086083987 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108445783 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102916931 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08645669 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102357128 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09208723 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105263895 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085670117 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107093156 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107280349 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08697848 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117437424 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110840104 seconds)
  done (took 6.344188856 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101171736 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109747192 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080743348 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104321177 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08886855 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109509453 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109288768 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08797249 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109095567 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083624073 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108245294 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08890082 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108732808 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110554832 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088529037 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110370973 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081859058 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108711478 seconds)
  done (took 2.634164724 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09228528 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106047673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094045854 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106379875 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085101572 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110091715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082107525 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105746708 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10459363 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08660602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105894593 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088433358 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105429573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088183112 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106956773 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085737913 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108609042 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104691556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086264875 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102045385 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089351363 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104824158 seconds)
  done (took 2.995697397 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116529451 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.122781814 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092241021 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22798658 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104094724 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132749868 seconds)
  done (took 1.642920649 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110779356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122622696 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107202897 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107989454 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116733907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108479526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089679436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110018295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119963963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102366324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110123134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11920163 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119042584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098557837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116396414 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115592789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108970981 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089061451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107792419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129595841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088826597 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119869332 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109294735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088696428 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110188406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117985987 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120516634 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125305364 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088717903 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120239241 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11630404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088587924 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120142536 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124135272 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111303802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099254712 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109347193 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13054196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116181035 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119353937 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089975777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116878666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12115147 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093858984 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121042333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110534133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11538413 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088767255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11007547 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136729708 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117327616 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098905896 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116115053 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11963787 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119362707 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137297386 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123358509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099016724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116206469 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11963642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116027316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098080798 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124366421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116222207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118597939 seconds)
  done (took 8.254435256 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103720616 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12724143 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109384494 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123973438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099040835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109304991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108434932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090023235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109615748 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108849557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15397487 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089763763 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119847497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120018552 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10968965 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089498196 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110003178 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118278997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088708338 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13705134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109944171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117825402 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119534343 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099135822 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125556879 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11661392 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109134683 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089458723 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109817763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109348892 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094543877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109661139 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119907256 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090767473 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122426802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113312383 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115900782 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09846136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113766078 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116608996 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120603409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108540047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109584509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108695647 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124659377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088639437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110235847 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109078837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089590296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108406331 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123516732 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103695747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123899426 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119172789 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110642977 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109366733 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089548282 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109433147 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089036403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116831915 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119700021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110009309 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137818085 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088615247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110216743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120107029 seconds)
  done (took 8.142708365 seconds)
done (took 156.680711216 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215480381 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200763651 seconds)
  done (took 1.266072356 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099309642 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138452884 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096977877 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170865459 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107307613 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120437615 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140113881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098886117 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108641744 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086550559 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108908956 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087761339 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174499451 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106925768 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087040145 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109745475 seconds)
  done (took 2.699175709 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119714841 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256257961 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126301236 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106450688 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090413008 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110808376 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085527031 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112732071 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089869747 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108049413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089231159 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108422105 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085805841 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108255449 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110569593 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089322087 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106290318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089291632 seconds)
  done (took 2.848442573 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114894221 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148092092 seconds)
  done (took 1.123305367 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244904189 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162024006 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230940414 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.470124842 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.273815834 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.358986697 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.213603435 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213107898 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165210415 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210331941 seconds)
  done (took 3.397692051 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120430201 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182622942 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319917789 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156735193 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109352569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131870841 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157348642 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132373164 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124015546 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102923325 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123978872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119878865 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14027907 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096487176 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116597203 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119245554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12212408 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115853473 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117118331 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097444314 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139789171 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10730252 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095375496 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115822426 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.120547746 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098797876 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107081853 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086425016 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118544125 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116469757 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09283915 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128025504 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121386199 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156847357 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125545935 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157565772 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119054089 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092033936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116275852 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091888652 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120456788 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120871535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126578085 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098628806 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107298752 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099232021 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106669201 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085357728 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115945584 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120888249 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094738044 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115188074 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155365288 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12085295 seconds)
  done (took 7.466917578 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788768397 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157497137 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09088509 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884832141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141310827 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104634002 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779841352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118266807 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2618097 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761875993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14106394 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125226296 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207511833 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259966724 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926364116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288144745 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67144353 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126960776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153498186 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155409562 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120196357 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138451992 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11058138 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430308825 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117433844 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113046123 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097025675 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120001354 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160636626 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126864617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115169417 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17987181 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246523062 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205268793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118465041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090601628 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11276555 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171876079 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266715221 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194674777 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181649788 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110050613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112018976 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101677482 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133785211 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109956965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163696322 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175993486 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171391383 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11574315 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120017409 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099186699 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121626019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165984367 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122742279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318143878 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322801577 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090510798 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123784057 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127434474 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260921994 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101580285 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225972741 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1412674 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213909851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09109866 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7770776 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171023982 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112594069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096110531 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12180469 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117504878 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099525925 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168434364 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408661859 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125381369 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115386375 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090314452 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230704514 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125398522 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091552627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163017049 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117538947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121943546 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10306426 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122824031 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170276439 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250264155 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102269476 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121832527 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116930701 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104779263 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119336151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211992477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220480294 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184948652 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211163088 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10153244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187757509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170272535 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121684741 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174147427 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121453182 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10113705 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123972917 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219167571 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145991602 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124955924 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093961265 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120254267 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148805126 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128812208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096742308 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194472586 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459703967 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168410354 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109278438 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129334588 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098186986 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184162556 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096117194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263169866 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123390813 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17019585 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120946518 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087497923 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121896122 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164170576 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123265612 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122097753 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101292225 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120337795 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237242378 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217733508 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123338301 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221537087 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184565998 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118846413 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173747311 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123946508 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168669145 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121707355 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122780553 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095953159 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771191863 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125459484 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099007469 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117170775 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190473855 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112286631 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104116116 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127120985 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109227999 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781927893 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128779542 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121958961 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104139245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118824429 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121359057 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096734229 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115625461 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164555905 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230277649 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119990752 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120727401 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103440676 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182911012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095475517 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125987139 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127342622 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104552167 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122655464 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117632521 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103009835 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192577878 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1640457 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22204506 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575255721 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112986755 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126112397 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230004134 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090759801 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291740927 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120886002 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223679254 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164975005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099932707 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319209908 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187388068 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188974567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105967349 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194511544 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087719169 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119861408 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166124976 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112959726 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096495157 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185437029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103677238 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123601204 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.970508653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091088149 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25126042 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087847312 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195084698 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096198405 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121214143 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287669822 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091673222 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129080178 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16548623 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115870944 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125393549 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848923127 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126206408 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123187748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097380074 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222424478 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16593669 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121207542 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12144518 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098823387 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185248399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213085843 seconds)
  done (took 44.346587917 seconds)
done (took 64.005118806 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282043926 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219494574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270734566 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172034448 seconds)
  done (took 1.907414053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172965144 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151583529 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12332611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107853862 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15255443 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086299846 seconds)
  done (took 1.679970833 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364948784 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278890259 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248128413 seconds)
  done (took 1.785596309 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321175163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254044944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476268605 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327573391 seconds)
  done (took 2.365960073 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215471526 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134832242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11329708 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104925995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202449085 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250019376 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144628166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204462788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122208518 seconds)
  done (took 2.425719525 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.177368281 seconds)
done (took 11.23375643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134577247 seconds)
    (2/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.257215701 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.301370557 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103122817 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.248114283 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.167601321 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.18541034 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124250157 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.173418845 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120812025 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117034248 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.126932064 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.266633627 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117654686 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126149713 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085941811 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.236797425 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.221555869 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.150402034 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.152238377 seconds)
    (21/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11869482 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099069827 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114875702 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140141567 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090751172 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.198865089 seconds)
    (27/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09635409 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.215539378 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121450788 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.150231775 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.150834539 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094620785 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067825727 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116606114 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109128808 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094504169 seconds)
    (37/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116334714 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178455874 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216988543 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.15956253 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.14450477 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099650032 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116208883 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14733341 seconds)
    (45/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111153793 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093749141 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123705004 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136455342 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098929556 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119319472 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.169511359 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139808296 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195400744 seconds)
    (54/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128112061 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073517829 seconds)
    (56/309) benchmarking ("sort", Float32, false)...
    done (took 0.174862358 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15459717 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.127511339 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186492625 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138460316 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138165917 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096463953 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118029489 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077605555 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 0.109821571 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117569285 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143558699 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138357282 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.134761935 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.161239708 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093739287 seconds)
    (72/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121388498 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114388388 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225745288 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.100605301 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179370403 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.097113519 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.125318927 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225934608 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.1131492 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.198638491 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189176828 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101097378 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175932593 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.121406168 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.166855955 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122421409 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.161993765 seconds)
    (89/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.186608194 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155210634 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.219589407 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116197875 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132634995 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119874991 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.153661426 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.192233853 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215278384 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119870839 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082453248 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.143912568 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.197155223 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138404709 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088234632 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116427976 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153125517 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090056075 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.127096566 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 0.212730278 seconds)
    (109/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067214996 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07446352 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187177771 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.144209645 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121365946 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086907797 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136555017 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.18335346 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095747021 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118644043 seconds)
    (119/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068571004 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.16503421 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098474084 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.137271395 seconds)
    (123/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118870802 seconds)
    (124/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090520078 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120103258 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151855568 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.18535623 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118103309 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.421196272 seconds)
    (130/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109798181 seconds)
    (131/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200607625 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090057061 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119352989 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094572432 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.190624159 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121747178 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096662618 seconds)
    (138/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124571377 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109903163 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086760801 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118231547 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088717505 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187130923 seconds)
    (144/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066482268 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.096356833 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108203369 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119389938 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.203588753 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09578682 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090912017 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150475009 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112284932 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092258406 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111619158 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087590275 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111325077 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088069136 seconds)
    (158/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091516741 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09300206 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.183435568 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110365417 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.16388184 seconds)
    (163/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.101592777 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066472317 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117281836 seconds)
    (166/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06699615 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120249292 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.154208803 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111662682 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154910319 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087137461 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186275647 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.166624869 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067813439 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.13665448 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069320258 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091957749 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08628984 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177733961 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115091052 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119130293 seconds)
    (182/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090772588 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117157655 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093727962 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135024048 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116271769 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096186583 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092042463 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067295202 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086547775 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091833828 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067773827 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.103301684 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067597466 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086959733 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173587237 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092446998 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088152119 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067517201 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116243328 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132276572 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086931677 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123222959 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105022312 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10924664 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088048824 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110843124 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.136172113 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.175246055 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111459251 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192319248 seconds)
    (212/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068306368 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09178487 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105476607 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111993132 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096199375 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119564298 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087741508 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.140945077 seconds)
    (220/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129490306 seconds)
    (221/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.124327042 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188139028 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092722291 seconds)
    (224/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067889977 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094141068 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111460174 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175517793 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092806758 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067857878 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117377019 seconds)
    (231/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138920469 seconds)
    (232/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068498712 seconds)
    (233/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194721121 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086340559 seconds)
    (235/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.203178728 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.182958508 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069113874 seconds)
    (238/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119369042 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067832175 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112198541 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067822731 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190338917 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.217289093 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070026583 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113356491 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067745108 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119489349 seconds)
    (248/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.127194447 seconds)
    (249/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091119861 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068747146 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068429652 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102438566 seconds)
    (253/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068152116 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067943959 seconds)
    (255/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164297533 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114015465 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095421543 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156108511 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101654658 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139231739 seconds)
    (261/309) benchmarking ("sort", Float64, false)...
    done (took 0.175427949 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088785336 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.092551797 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090591492 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111826788 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.0677568 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082788075 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110713759 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.154936627 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068492637 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121369628 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068834089 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067258565 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120463042 seconds)
    (275/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067933512 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183383245 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125635699 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10892531 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068311938 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111383204 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068269505 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091438944 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08967196 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112210881 seconds)
    (285/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101566119 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110506901 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094925418 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109803032 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068674773 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110064129 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09635691 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245525833 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069481095 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067927572 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092627433 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068645041 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093774734 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120201798 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110896648 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158197813 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095027323 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068389673 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068684243 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.199736925 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11273922 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092857913 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11246039 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.17286675 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121613172 seconds)
  done (took 40.026001616 seconds)
done (took 40.921222221 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101605218 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138171102 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098769148 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13715997 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124345689 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09214087 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119643973 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099485278 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124634505 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126921678 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100501036 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094082629 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097859141 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122401924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097317979 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136936741 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125834221 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094794314 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121598583 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086497605 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120697036 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087614406 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113443126 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070791451 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123779892 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095396393 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117912326 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122546186 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087924203 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111903521 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090498017 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.1195238 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087339064 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126667169 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09444681 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121153426 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099810278 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12131516 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114300149 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088929187 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119712117 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087785506 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119471058 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095551425 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118510345 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093245397 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120269754 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100861804 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136711727 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113866674 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095932056 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122725346 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097084175 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119528989 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091495433 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120836797 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116926808 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113487147 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121379744 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090187456 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121085806 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095559731 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118218504 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121990071 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097507448 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.125519643 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099714538 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117886395 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098282663 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117581747 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087471356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121019154 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116278131 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087213058 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121769118 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099248105 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111921321 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093341659 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119979421 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093055124 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111984027 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089845119 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113982415 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09390828 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113934542 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070630701 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116154433 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093547687 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11111102 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097002142 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118761038 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094437296 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114404514 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125380329 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087424465 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117022956 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088078884 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11314907 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090861101 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116128864 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087291416 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114097076 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097598247 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.114444683 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094446115 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125150566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087947616 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119410748 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087304853 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112013296 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126938934 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098403109 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113855997 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090465972 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111654519 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09561988 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112058034 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088631393 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112707959 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088669208 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118609237 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087774164 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114384341 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095317167 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12624948 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087285639 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115769339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114592553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087876762 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118696314 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088567099 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112763976 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089687452 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102971832 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090306996 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111894798 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095659215 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114056908 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096915297 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114175693 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098135554 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116497944 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094074864 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118361582 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087384003 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099537365 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090809752 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115620708 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089979624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11192105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08939282 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112402548 seconds)
done (took 17.138709301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089168529 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187854377 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15441863 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143527913 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109036853 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11312948 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123533518 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12136429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115863973 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145291849 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112332238 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133207866 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150877734 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087739345 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11316204 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092130735 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114866205 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104427263 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147159103 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134636295 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167222692 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087896389 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148420693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137449425 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122807669 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115950537 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11358249 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092082599 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116266339 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105756519 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134565216 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116085245 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089257173 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136935999 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105489716 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120896063 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112674588 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095803117 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11309947 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088929961 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143815901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135122784 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094175518 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119071376 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092772684 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115309976 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090442897 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122924876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124282332 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092682154 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129229853 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159559137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0917978 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123002295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111816156 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098905838 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124051587 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090950292 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113869741 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091236924 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112454286 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092171075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128841858 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144280973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117776653 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.09863924 seconds)
  done (took 8.724660288 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105904017 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142045059 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131154165 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106834335 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113858333 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089229008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114127863 seconds)
  done (took 1.769364849 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089140864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135891944 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129858886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137097885 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133815595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110421321 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125007241 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088941654 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132972053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090474569 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135049733 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154471936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09105417 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122141034 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140603353 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088904543 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137953049 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08921203 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118533424 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138770659 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09254641 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137373487 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091289962 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115466137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104056224 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115390311 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164420262 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095506842 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116472559 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092605853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114603902 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169248707 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106833387 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126716514 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114648149 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104182249 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130817986 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087018493 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132271095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095641332 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129497259 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115662414 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091218617 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113538766 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094584393 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.126504579 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0911573 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117218723 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092234984 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136883112 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090151895 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129366777 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11582531 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093686685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116956941 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095442677 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125494554 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090585379 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136025536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091719282 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132467631 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134349901 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104068254 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133204242 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092360076 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12936147 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130027836 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092048783 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116822768 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092734757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133444242 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08747495 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117805112 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100934494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117424717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139346658 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113348684 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117502764 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101165685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116013969 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09032859 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116439338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.139752252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094481096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115653775 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094147937 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118738676 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.088387049 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114533152 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093784712 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113782024 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092340563 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118760839 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090345216 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118577361 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132253349 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091414335 seconds)
  done (took 11.983393844 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090802343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11614785 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093649299 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116950987 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090828858 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117435387 seconds)
  done (took 1.60345249 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116245588 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119538818 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105214487 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122540937 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159137152 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.131852582 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105801345 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126366997 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108624084 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128403007 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131338591 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106514695 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137136749 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123894658 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104941358 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122284316 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.132000629 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101158299 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129503171 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098605233 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13908383 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123589946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097563842 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134638413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119622051 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097068778 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128977391 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103998854 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128918041 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125768692 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097370152 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120186367 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122178095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099853725 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132824139 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097833446 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122133266 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121474758 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102227605 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119730728 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13195657 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097345469 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128545535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09528379 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125610435 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123088689 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095467588 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127649287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131468422 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095074193 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121082483 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096340171 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121018352 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121268147 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09838104 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12636619 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095757253 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132084601 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124215277 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097936671 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119681581 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09397 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125711405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120527381 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105701046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120865582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123840317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09829857 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124837184 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097436358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121059767 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119686892 seconds)
  done (took 9.380241173 seconds)
done (took 34.416087385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693535577 seconds)
  done (took 1.666072375 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.731703015 seconds)
  done (took 1.705657852 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.984602736 seconds)
  done (took 17.960135768 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50986724 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586316384 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.89045713 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182698598 seconds)
  done (took 3.142675339 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947649962 seconds)
  done (took 1.938801729 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248110882 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23425351 seconds)
  done (took 1.460733285 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816677299 seconds)
  done (took 1.802685679 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355140769 seconds)
  done (took 2.334701058 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336351974 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187285998 seconds)
  done (took 1.509207127 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559484734 seconds)
  done (took 1.544496615 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.832838651 seconds)
  done (took 7.823423852 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270726916 seconds)
  done (took 1.268927767 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303743427 seconds)
  done (took 1.294522482 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.561479824 seconds)
  done (took 4.55357637 seconds)
done (took 50.984868725 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099008081 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128668224 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102483933 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126409967 seconds)
  done (took 1.441429298 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101982439 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123867501 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101253167 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122051542 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127634053 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097119078 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12517139 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102409378 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122436555 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098239988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122387392 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121437029 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099136775 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124689062 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094681477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125829667 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100643843 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122855692 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125807834 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097313511 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12002678 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099652058 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127317598 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095707011 seconds)
  done (took 3.69355618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101897844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120434357 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097550434 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120175932 seconds)
  done (took 1.439620925 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10047831 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144869476 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14003362 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101464393 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144936651 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137141498 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094154821 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118001786 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095351694 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126638193 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091787431 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15118782 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139333582 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.101194589 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128730867 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089975709 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117818609 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138659577 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10106598 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128163005 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096936535 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126190965 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091996436 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141091471 seconds)
  done (took 3.84157619 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172752246 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129152535 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141176574 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096358868 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162036655 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142832531 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089215641 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142394408 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089716895 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133742015 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119963421 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134413317 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131115452 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089531342 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116026776 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088838511 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132108603 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131698531 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092456771 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130051411 seconds)
  done (took 3.466984374 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099760477 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119336595 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08918017 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118233118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099892019 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123070342 seconds)
  done (took 1.650137053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091757036 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117044384 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090768662 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115864598 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095158575 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.1162137 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090333815 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116470046 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09106545 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117121006 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090642097 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114986167 seconds)
  done (took 2.248430097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466579455 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094611396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122146623 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113425914 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097936333 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117021361 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104177165 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120724347 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142895005 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09103829 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116562373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092216038 seconds)
  done (took 2.679042116 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242149388 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126704045 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298436339 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279752021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160051761 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172717412 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280479791 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164462231 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.229662047 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161506959 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212341918 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22639456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154402719 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197720353 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13925599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121602952 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230812197 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252522827 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157328568 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211417091 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231156076 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168542631 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181416054 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154697839 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113392521 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172547109 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123299317 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132232838 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213293037 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210509163 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193666959 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167630993 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149319889 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247808528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254736578 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20072579 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290006761 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136974066 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174748535 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171149663 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270910061 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113350377 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241401875 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162636393 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132916502 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199040745 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170520514 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178392865 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152524291 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142552086 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22621632 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219322017 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22215329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112908472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237495832 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162131287 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.171768756 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196732147 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256250133 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22823122 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184698368 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094606651 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216087081 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195608186 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185938667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.194928178 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1862212 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149523807 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195878753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191256484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195111679 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193076216 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184048178 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139039511 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173903726 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177533878 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200955711 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237341005 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207079728 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096997435 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182232 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151860677 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133530348 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19615645 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0999661 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245082211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151126691 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138184121 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244414195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162250834 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163812186 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201495209 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223254039 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151002822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085034206 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158275017 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156341807 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194385647 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142049726 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163397585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163951754 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132420852 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180890943 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097986099 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207811205 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09240799 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180008633 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21497056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101140883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163446186 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155785649 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151707172 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183489426 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203944625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142733838 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135424174 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210859015 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207408841 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151477528 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181414744 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204702171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144977433 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152595312 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204336829 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248852185 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141279995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208553352 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157407981 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136433894 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10780185 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210202609 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157191628 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.135978751 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134689914 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.2119923 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21545789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126750189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112754028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219506339 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109175171 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133351868 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164301855 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151729724 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140835579 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149752799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.126376317 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21165431 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1832203 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156129295 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169642083 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153720362 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254945524 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142097475 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.125388741 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149648629 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122302342 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198307987 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227694302 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104568168 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234524495 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176087369 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203895052 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199594585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109293082 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179263627 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132159475 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094759119 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224240815 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169981079 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164636911 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198912139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227457922 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183862257 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210729833 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172852656 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178536544 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167072524 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160436404 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112492391 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16198835 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167658742 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123698624 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146415482 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135242831 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125774769 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143910415 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135976263 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202906729 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201514253 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192921214 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160645107 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152455555 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18314698 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130753915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18223561 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180544914 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149220401 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201111727 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223149304 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195427876 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143824453 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202992086 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122092091 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098701541 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144071056 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17305999 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136221403 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136250281 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169569425 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183532313 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187778919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206534372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212508241 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177124252 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219109317 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097415427 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169849963 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187430529 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178801248 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189470436 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140703187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154000225 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180056485 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158305468 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259936346 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170118933 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180675281 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237957379 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124752155 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133072615 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153584148 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189348564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155999814 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178982353 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149666186 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142322258 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163415255 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134294632 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163260525 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1880901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164829776 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219716144 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124178358 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217626808 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102129361 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19540992 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134133815 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16621186 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109572078 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180516647 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231412299 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149350361 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171084506 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195008583 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132399695 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312803553 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214181236 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22837015 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111856344 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160284663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162212342 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166494538 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202717706 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179029594 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161777599 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193548403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159393278 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111521902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142286462 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153456509 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155503109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106863316 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150159504 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.206803545 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113363974 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221005402 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164017707 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160606722 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175298628 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150956385 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118982091 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152954487 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248387889 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180024641 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245148876 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125299702 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208795899 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209190947 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126424707 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105410038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135534158 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181349126 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138435805 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193821909 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189414937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230819462 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182900603 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219743691 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113534947 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122015075 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159107941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176693198 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234448928 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126000965 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161330516 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240062462 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142904106 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105705679 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17525056 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227075998 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120659976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227336807 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080262043 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280117972 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124283858 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134698006 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167031374 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211525898 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139265797 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186479286 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174944549 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170814352 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165742105 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151730912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193178851 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246467153 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203964675 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216127491 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106044949 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160328323 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178641153 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227039249 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159665286 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11406961 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236321325 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198081458 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226617201 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115700284 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173759734 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170278661 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160277793 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21640575 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108181937 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236769104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136855261 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198449584 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156653898 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145502885 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178017344 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217138823 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116302118 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217657301 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177875095 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138000315 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107035627 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170305498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20826408 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155553272 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10111132 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183455636 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126999538 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193826037 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265174293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135702651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157825388 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148136754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110943805 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158264706 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15976495 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142095996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164891746 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208981688 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137533285 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193908833 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234634665 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174806512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176065634 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146240706 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694995649 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13304289 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197609718 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156286207 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235650077 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124870537 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202802504 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131866358 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197914864 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198458291 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161697909 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233852375 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195577361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208184289 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106336409 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160343858 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163443768 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147084926 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155783734 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17108919 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161937304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155715793 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180580866 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171216704 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137536401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141457619 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202697501 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156719079 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188920688 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181424839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140925829 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175109994 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217137935 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106908396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.212715132 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212802505 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144634695 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152507531 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134799738 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15658857 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237025994 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125688192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229873508 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178510064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160503473 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169971537 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148764448 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195372756 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161430022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180346149 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148350568 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161480604 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159513635 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139869142 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104271787 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156343922 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169214589 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152415281 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160961654 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166787572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196948692 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124836694 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145573644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1987321 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191560238 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246931795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138760613 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110039468 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164913539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152780141 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181540724 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179564924 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136982103 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141113387 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139056559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13338522 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138860121 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156787967 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197794224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166197118 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21008737 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138831927 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27935261 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141321996 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155088502 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090027457 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133481195 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151943066 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120708872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157553122 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220683686 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264463539 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121081362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13466388 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150468825 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098967069 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138323401 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166947695 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169125715 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179393803 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146892908 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10826268 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159692029 seconds)
  done (took 83.881479909 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183526481 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136009519 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148968308 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203321601 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178712849 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271714227 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213675703 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25557126 seconds)
  done (took 2.677623896 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095542804 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147394426 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158574901 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134490208 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092769562 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121280001 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.348457965 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133567212 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118074095 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12228618 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175793724 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094973932 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.525354263 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.1179603 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119908949 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083599813 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.117873123 seconds)
  done (took 3.790780201 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.482418312 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722371473 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.507001041 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098529691 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.144699953 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113941181 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.739409748 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197412559 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11532735 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486543734 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.781336791 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159538535 seconds)
  done (took 18.638742486 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09946663 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122824187 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108892468 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137136392 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097722557 seconds)
  done (took 1.664135942 seconds)
done (took 132.100638869 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104423411 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407185551 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072578041 seconds)
  done (took 1.606236475 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110171036 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138419497 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109846989 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137738306 seconds)
  done (took 1.600096812 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098660398 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128290556 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110726062 seconds)
  done (took 1.435075228 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325420786 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190833006 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.16348179 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.1067086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130849421 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105267826 seconds)
  done (took 1.446487268 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098822537 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12893467 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099256908 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131239039 seconds)
  done (took 1.565667306 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095821841 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071666285 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105433975 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075304377 seconds)
  done (took 1.448535171 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11554444 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132956598 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105317966 seconds)
  done (took 1.459335148 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131471098 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140840472 seconds)
  done (took 1.377840509 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106032339 seconds)
  done (took 1.20676433 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119180458 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171058215 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.19249995 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167456 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230397065 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167775607 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143618385 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11739301 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133283423 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14667533 seconds)
  done (took 2.695924967 seconds)
done (took 17.722914383 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104889199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.425919843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414810131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118608664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725676985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38202506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.06927727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147717422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167683554 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094513146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14138534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67522904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023573529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380071535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9844193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378295958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707710883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09445904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121856019 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096444824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055778585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093720367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123388243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094138199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706906985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428319847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096625417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376268838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093783138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129196475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412464712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09604232 seconds)
  done (took 17.056755201 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097060727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1752488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099511089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139972916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12548662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095678635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12582793 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094648882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181732181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124204459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141584728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095328515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127943695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099639045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143671342 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094498666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126838718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122744859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093919061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124316327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114017519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121966942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095328185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124426331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096252858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136976342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124859793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093563903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122947277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100294359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129477083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096884749 seconds)
  done (took 4.895920397 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142062734 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185092457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130185249 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128356157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17063899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125251757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202572014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148075427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157369514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124907323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141510045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095037618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158166014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126416987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11622365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122539088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09765876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124009556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094334932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12521031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142410419 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094644028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124854462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09461778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124615828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13907433 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097102575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123066902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094565151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128370039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101540129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126132259 seconds)
  done (took 5.217288333 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0985673 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129665653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110998211 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139623303 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097077197 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127417205 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098821576 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126499552 seconds)
  done (took 2.038956062 seconds)
done (took 30.315027542 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105875675 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124138701 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099892328 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136805987 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098632106 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133654623 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093450907 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.130113012 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100415225 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127866182 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131004218 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094373 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12640631 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093662634 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130666114 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094304311 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133880862 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097851756 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134780523 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134342189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096003266 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.12998196 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100211526 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133602034 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10487785 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13484205 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135503998 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100537082 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124872292 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096737826 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125417335 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104644368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123536918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104699317 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123154411 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093393464 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123239698 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093344627 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135516462 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101164947 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.127458575 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129922203 seconds)
  done (took 5.966002501 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108381692 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141721225 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105941466 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082271864 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118327295 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081624481 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140182878 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080227855 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112720868 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109160923 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074982648 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107624171 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079432335 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103188808 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07800887 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076134225 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109785139 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076799858 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077520356 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107393302 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080457797 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073284248 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110648415 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079860303 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106060453 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08296474 seconds)
  done (took 3.616135136 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101271062 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13771212 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113519155 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185651053 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163023848 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101420958 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133677446 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142577769 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109814457 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121719567 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096972718 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150884103 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112636769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13152917 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093523692 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139200117 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137074476 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095090822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130157115 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115102715 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140305138 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104064678 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144311828 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135714402 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092817963 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124139521 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097027906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13717127 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099443553 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132821825 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127729524 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09679118 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124790422 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105589205 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127935337 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094702114 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143158617 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133560225 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103841775 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123919449 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097844249 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123696443 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11523344 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170062456 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.12367382 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.104119109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130844756 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10528676 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12394087 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112353681 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133487051 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09264506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127290094 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121743645 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094380186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138218314 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095951937 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125763603 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103711698 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125967773 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107250398 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127645514 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110386146 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12292129 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130375402 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092589148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122855092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092820474 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146097734 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094892678 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165734011 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124706074 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096991679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132391266 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101523772 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130042754 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093260215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1390584 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132117067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098037733 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133885031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097094043 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.125844151 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112932535 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126205646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095294643 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125149465 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100622832 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12613333 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095316178 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139518415 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123933946 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097503509 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14142019 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093393685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125637468 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09977349 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129390643 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121951242 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10801175 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.1295683 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094266482 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.1347652 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093802327 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126462779 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104201646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128178907 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122167849 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099363445 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128953735 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094734107 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124411536 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097408491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125215033 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10417386 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131164987 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098603729 seconds)
  done (took 15.011469055 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231688596 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221646576 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.126739091 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.213117791 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.107690409 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.136293547 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21524956 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157329825 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094720509 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.12564234 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095549061 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.164540127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.158804673 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.169472329 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105797459 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123547552 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113323922 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167342254 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216091085 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.211205126 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145562998 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133452686 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.096700073 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12516601 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.096836754 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137323812 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110566794 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134483148 seconds)
  done (took 5.267894175 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109794649 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158834724 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10022782 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145617955 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149461798 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093718917 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128545915 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095578606 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136551962 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13747872 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093783361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131593425 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.102180946 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133703988 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124565619 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105096218 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134409183 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.0963443 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128822988 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09920303 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131082959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134442218 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098864507 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123589353 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103725203 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123396895 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088022792 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143621626 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12390204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117033385 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122822661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101230359 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136181008 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095199115 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124629216 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09595736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126676353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096662652 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12589325 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123020064 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093508679 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07821193 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124306686 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137926551 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099992174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110885004 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101253444 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130135543 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09491282 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122202321 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096460552 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126789395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097313509 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131603599 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098688384 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126320434 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097330777 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117322878 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100423632 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127588105 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085135582 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122869698 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099372368 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120045655 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103125662 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129251795 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093235698 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126996141 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.12897422 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100683198 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126109712 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098766218 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122588448 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098209444 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128011258 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098793776 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.128477956 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093712491 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1251941 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09497032 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107013141 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095197579 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105126033 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097989928 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123055851 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094374904 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12724999 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.102006957 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139522913 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12589816 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10385462 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125757682 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093880909 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127501372 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084429102 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127893868 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11028411 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143896476 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095246193 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12407044 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139331362 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098336483 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124818577 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078333299 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132210024 seconds)
  done (took 13.14901103 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.118570861 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150666674 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097051249 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140103252 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151646944 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.118528352 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13322875 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.101611995 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12665852 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112528082 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125858223 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103709451 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128956064 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134307004 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117955201 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.133019389 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096685273 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134763485 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102671129 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.161030026 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138235321 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109716647 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135941148 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095228557 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130092449 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108411993 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.152758942 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.136201252 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.1044458 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139199581 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106708106 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.152142017 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.110296641 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129014679 seconds)
  done (took 5.377740183 seconds)
done (took 49.501621328 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.230293476 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.458908555 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.21584956 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.148519903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.256804362 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.236633257 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.221036825 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.210865407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.24725518 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.209839932 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.477910751 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.912997764 seconds)
done (took 58.968662324 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.292545372 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344909629 seconds)
    (2/2) benchmarking "String"...
    done (took 1.478470324 seconds)
  done (took 3.963748102 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.582878478 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.160681544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.469944844 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.211635019 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.210258081 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.502186335 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.892673044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.605029242 seconds)
  done (took 28.191673787 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.216517486 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.614744104 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.979612434 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.984954856 seconds)
  done (took 18.936370531 seconds)
done (took 61.108305445 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.197346319 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279209937 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.227211636 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.190213127 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.346109548 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.24174645 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.531417681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.233596088 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.233284364 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198552965 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.234658202 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.21153862 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232101275 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.548682794 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.219569861 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.216598793 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.234931656 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.749426328 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622537353 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223236142 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.219407366 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.229337467 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216684989 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21774527 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.214030162 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.213161061 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.232529908 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230062384 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.865103737 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.218169446 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.230531875 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.709344198 seconds)
  done (took 191.108144799 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.212308521 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.316337405 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.405911516 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.254298995 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.835568651 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.410198507 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349290789 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.898649482 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230641713 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.243147423 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.518949194 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.215147876 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.582894945 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185505472 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222752523 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.279888724 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.407728455 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.555092295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230925603 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.488035692 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.22039535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.604102654 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.532601937 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.454154276 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.247487956 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.21425108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.23613796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.224254487 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.405657768 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342664416 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216378804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.235013205 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.852356122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.073483619 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.240970998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.235330181 seconds)
  done (took 151.320837225 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.496137149 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213503364 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.214334613 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214513722 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247785988 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214860897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.808451594 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810651176 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.723785924 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.523286448 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.590540975 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49547889 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21398734 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309680473 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.228111338 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.216159008 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230345862 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257070647 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221640749 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215612934 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805429176 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.232920163 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.337388892 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.41331698 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.232585009 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248322396 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60978418 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216103738 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248379699 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549128115 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265895588 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215238556 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589700077 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.288682352 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330455411 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215151813 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218148773 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248353933 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216571016 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495944159 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217228112 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216583027 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218170509 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870399058 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.217308276 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.810478571 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222096277 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171809551 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.217192035 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216250949 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.78218396 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.871261099 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233115754 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216166845 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.218800989 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.216609572 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217176389 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250259628 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.713702753 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309682668 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233836819 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220157761 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25041603 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216432223 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.333299244 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232971913 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.503750764 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296104533 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.331616653 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.217079098 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809351207 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2224904 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318129734 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339799812 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217823344 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217153869 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217499723 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.217441988 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.3299045 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2179623 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.645683151 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.39710468 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236254833 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.589933802 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.316757224 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219326005 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629135279 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218890989 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218573999 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.987575673 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317330969 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.219162359 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.218373641 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219642306 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644541354 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814793755 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485342087 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220046427 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.75427866 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.219386698 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219912172 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.665199723 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.785747471 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891697615 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.219772127 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219610182 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332413708 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.397548985 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.237988242 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219529001 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.593126751 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218541903 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.279272814 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219972343 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619474082 seconds)
  done (took 368.119539744 seconds)
done (took 713.184631299 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868615773 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853236719 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.96909483 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849100404 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.808364706 seconds)
  done (took 10.496198638 seconds)
done (took 11.643032952 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4092168 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409546065 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282006374 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411962368 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250172302 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428823845 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390224871 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244736493 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323683987 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.30536084 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322527587 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275805063 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249189633 seconds)
  done (took 18.451798405 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54040582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534480284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285772238 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567699034 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261815572 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543722254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425993567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445708975 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445655763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256228305 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235564987 seconds)
  done (took 16.694518573 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554567983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546986341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290071245 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543121599 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263882135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545931498 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428161152 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.45087729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439274732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256198333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23650094 seconds)
  done (took 16.706386443 seconds)
done (took 53.000089503 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230820417 seconds)
  done (took 2.380816531 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268163205 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432083306 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250204922 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237494852 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233013638 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234256753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237314217 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.233358052 seconds)
  done (took 11.27835616 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.228943063 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229014911 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229208537 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231465506 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.23291215 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.229520738 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.229626785 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23141921 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.232111147 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229572015 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230326063 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.233132136 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.233903941 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.232233958 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.231541932 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228242857 seconds)
  done (took 20.844148343 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.232468371 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229497078 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229982819 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230340696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230621972 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231075552 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231070069 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.229972472 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22930057 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229911164 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232060369 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228977279 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.230864266 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229971433 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230364617 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232070332 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.231123926 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.232111651 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.2356641 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.231397954 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.231960316 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231532336 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.232487591 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.232665514 seconds)
  done (took 30.702260392 seconds)
done (took 66.355148889 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.502787124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.995831595 seconds)
  done (took 9.652778035 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.23405587 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.234499339 seconds)
  done (took 3.623491257 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233648133 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.234357483 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234736243 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234323501 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232590515 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.233786683 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2342381 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233563805 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234228287 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.234220054 seconds)
  done (took 13.494467815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234785793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233683141 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.232317634 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233870357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.234193415 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.231876086 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234270901 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234477429 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.233715124 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231818712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235353388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232935981 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233699435 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.232854662 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234914349 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232178533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232979246 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.232346371 seconds)
  done (took 23.357465318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.236046698 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.235246436 seconds)
  done (took 3.627034574 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.233323062 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233094558 seconds)
    (3/7) benchmarking "month"...
    done (took 1.232818164 seconds)
    (4/7) benchmarking "year"...
    done (took 1.23456208 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.232696354 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233240926 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.233971343 seconds)
  done (took 9.788126507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238197646 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404940373 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486765668 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.864493048 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.237371723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240712856 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.113508438 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240274168 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.240896679 seconds)
  done (took 14.223722788 seconds)
done (took 78.918034588 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265471854 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.248776916 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.459740591 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.252073576 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.251721289 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.57781973 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.283834138 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.360493274 seconds)
done (took 37.855155672 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.233878795 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.997875469 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.004332762 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.249336014 seconds)
  done (took 11.409228641 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.214601889 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.193924609 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.21714293 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.307898133 seconds)
  done (took 18.091652887 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.309736184 seconds)
    (2/2) benchmarking "read"...
    done (took 1.579366188 seconds)
  done (took 5.046438809 seconds)
done (took 41.937305491 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239143518 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239517569 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239622416 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.236890322 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.239765018 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.236654412 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.237432633 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236963215 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240830547 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.239895252 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.240712966 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.241073553 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.2406785 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240592492 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23707366 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238981145 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240513784 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238148439 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239256132 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237455911 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.238658491 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23948148 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238886313 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238342383 seconds)
  done (took 30.897113868 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242428372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.239658926 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241436567 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.241502956 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23908743 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240572547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241769161 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238757766 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.241553828 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.243170844 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239162401 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.239205339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240721375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238756826 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240756738 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238844442 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.241612062 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238878883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240864258 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239719083 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242831085 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238582226 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.240650278 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242364525 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239198241 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238820308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.24287689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.240052631 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243008928 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239759464 seconds)
  done (took 38.378207732 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248171558 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250034429 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.243046774 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243632959 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243410209 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.242760577 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.243056291 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242854683 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242143674 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.242460704 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24367213 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242111718 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.24248284 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243407457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.244187705 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242607176 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.242890348 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242911207 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243609308 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243866939 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.243352037 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24446353 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243500751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244564364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.244587055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.244347574 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.244524875 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243079856 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.24420285 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.245130578 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.243786578 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.244311606 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244483549 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243690084 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.245613274 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244602683 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.249637298 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.252015556 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245986424 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244557113 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.245336 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243953637 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.245356131 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245278936 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.24602547 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245838901 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244747121 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.246152035 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245463692 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245382055 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.245632395 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244931854 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245416868 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244726571 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244654741 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245382356 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245047991 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246633872 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.246654089 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.24557014 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246743418 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245520562 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.247223197 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.247178829 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.247064345 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246812742 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.247285642 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246660781 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246851242 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246613285 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.247917975 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246766384 seconds)
  done (took 90.809077331 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246884107 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245465965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.245193889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244469844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245590338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247130313 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243867816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248134011 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244353521 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246976347 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248104431 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24570606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24440908 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246824346 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254187865 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244448896 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248858657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246168916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.24799846 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248473601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248110901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245744904 seconds)
  done (took 28.593315216 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248352272 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247977036 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245939627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250548664 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245812698 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248311217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248623686 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248613702 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249067207 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244800299 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246013613 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248298387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246658789 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245304409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24730323 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246965211 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248886546 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24626714 seconds)
  done (took 23.620495975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246594456 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.247348943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248990795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246854783 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246904996 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250284239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247239473 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249131729 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249327816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.246854489 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250118984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25047349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.25193018 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248256628 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24949438 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248052792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2497165 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247979348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250550571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247478343 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248013979 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251221246 seconds)
  done (took 28.643247341 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251564383 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249870332 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248001315 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249247536 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248187814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250651969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250762749 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248577768 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250199076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249871884 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249154426 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250478014 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.248531371 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249720086 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248315112 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249241804 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250670776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249547635 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251301522 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248609287 seconds)
  done (took 26.163070408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251832055 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253358497 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252268355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253167141 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252665611 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252327409 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252658193 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253896177 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25325106 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253504676 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253783308 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253361339 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254030083 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253562922 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253632985 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253355752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253713577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252855432 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253559631 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253057264 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254411506 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254123013 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253227473 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254779279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254825267 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255232769 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253879713 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253752428 seconds)
  done (took 36.270066798 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254072078 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253097351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252328363 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.253374451 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.253101881 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251741298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252301082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252699824 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256420156 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252582362 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.255076516 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255227773 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254744681 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255117641 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256071752 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254857269 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255558536 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.25227716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252776423 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251517287 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257552581 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255490361 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256659319 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254210387 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253757432 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.25633191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253151744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252757014 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256521596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254676906 seconds)
  done (took 38.800495562 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273978227 seconds)
    (2/2) benchmarking "in"...
    done (took 1.279485819 seconds)
  done (took 3.727270431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253329782 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25673109 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255310012 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253872014 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254745269 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255981867 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256006507 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254144057 seconds)
  done (took 11.214665938 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.257590723 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256351044 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256731064 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.2577962 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256812764 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.258215843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264386358 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278036021 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.257242138 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.258778618 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.264944789 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265296872 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.261753641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258405014 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.257877617 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259511305 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257947496 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.258248969 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.258443179 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257984267 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258828518 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260188104 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259740278 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.25547841 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260341751 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268257874 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.282334184 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.259518277 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258708862 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.262947089 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258779408 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257017543 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.259283413 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258750658 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.259923894 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.25981583 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267249321 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280475915 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.266263092 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280153968 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260868503 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256821435 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.260293318 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.261801306 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261337465 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260116445 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.261187048 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257811467 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.259749128 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262972698 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265507955 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259943009 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.258784809 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263865312 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.261470342 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267713839 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279431274 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.263692267 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269404718 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.27106142 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292380981 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284931289 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262733441 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261995748 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271092574 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.284824016 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267669035 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.278688445 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260774751 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.262706725 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.268736787 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294181795 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.288151334 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.262656045 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262254069 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.263069775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261642311 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263379255 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269659515 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.283321599 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.261216546 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261717784 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272246925 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284484123 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.261019792 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.262174492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.26388756 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263081319 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264161593 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273264226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.283143894 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263425075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.262361292 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.263525131 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26550021 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264361443 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.262660771 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263916192 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.260495365 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.264483082 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26375885 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266811976 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.273155525 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264247666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263427743 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.272351778 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.283018674 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264111228 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.269963796 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.264995396 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264723219 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264632011 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.270992473 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.262989625 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26716109 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274189452 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.266471897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264218709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265486529 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264851956 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274892496 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.290486711 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.264614599 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264742522 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.269812509 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276048573 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265005312 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267047371 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265539802 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262613913 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.264574465 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.266940026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.265653494 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.265584344 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265430185 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26718402 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263306808 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265649397 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.265405325 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.266856867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266901836 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.267360542 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.266708476 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268150298 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267134257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267794385 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272880853 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285877127 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.267499447 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.267909138 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.265762326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268400547 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.266633274 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267238187 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267589874 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267640999 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267046339 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.268323838 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267844815 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.268726752 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268497665 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.268063568 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271342471 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267676811 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270362827 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266951841 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.265829534 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267623517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.268774339 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.267920945 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.269618529 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266955445 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.271491147 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.276452882 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.268158487 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268945847 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270261106 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268866617 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268660185 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26846236 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270698434 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277002221 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269841078 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.275280589 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.288328626 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268251901 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.269476535 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.269141435 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268714868 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268504927 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.273560441 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277159289 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281259816 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295729237 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270805011 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274210565 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.27138426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.273088349 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272445997 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269617736 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.270568074 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269954469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269371921 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27015211 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.271202185 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269468634 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268732837 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270711063 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270421152 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.271165551 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2717283 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271970572 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271864476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.269274754 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270543806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272870825 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.271266595 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.268898687 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269359032 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27212953 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.271614847 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.271058667 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.276837355 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.270504573 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273114548 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271496195 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.27157233 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270056132 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272676378 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273070325 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.27173109 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278405868 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291097779 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272957413 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278058747 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290991475 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.271868005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.274782254 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.273378818 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269931405 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.276359481 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281253662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273119598 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.273132422 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273571219 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272017196 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273181496 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27950159 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.291413724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272005164 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273828182 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.275342755 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270128359 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274097238 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272273498 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.274899503 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274324719 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275461867 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.274199511 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275844777 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273992833 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27355109 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.273970696 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276624401 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282158024 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279578934 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.274497743 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27693693 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275019911 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.279232629 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273880188 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274883428 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.274465115 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286521898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299095525 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281171546 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.295937434 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27506404 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281304229 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.296010509 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278068983 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275830415 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276164061 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.275912661 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.275574806 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.274992707 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276213878 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.278087397 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276325361 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276324624 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.280724237 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.275719503 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.275399829 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.276055271 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.277420225 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276466996 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274887954 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277712853 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277395314 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278346697 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.27463916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.276612668 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283900557 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296910774 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277483269 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.277587999 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277393221 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.276778549 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.278009819 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276346313 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279590604 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284091066 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280365205 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.284566293 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278691118 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286037304 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.277540426 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.281100986 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284470603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.275834196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276246699 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.277679377 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276556999 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283965835 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.297877159 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278127655 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281713504 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277623205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.278747538 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27886907 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.278011304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278208071 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.278078375 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286348139 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298066868 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.283117346 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280779237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.276650666 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278848505 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.280087261 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.278340106 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281539332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278660334 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.28029981 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27929416 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279612687 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279785103 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.280564993 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.280613194 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.277877545 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281063832 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289529117 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300275947 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284522824 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.280564233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.288366457 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.301487868 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286166307 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.302415219 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.281341373 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.280030633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.281015256 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.281876741 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279864657 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.282234892 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.280924591 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.281913741 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284410888 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.281656673 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.282675073 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.281037208 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.282081502 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.281515829 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293087286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306556984 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.2827944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285661448 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280020718 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.285503122 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.286487399 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28234219 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279936242 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.285327101 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292144525 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290744327 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.282339655 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.283091367 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28236643 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283936214 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.283123648 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.282997999 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.282992037 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283190807 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.283225486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.283200544 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283883246 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281887978 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.283969333 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285854226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283868543 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.294457954 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.302258308 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283978734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283948683 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282281717 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.283317378 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284080253 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.28341713 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283121846 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284433767 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284581772 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289556417 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.290347978 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.28667059 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282351335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283661622 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283605125 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28456129 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285729037 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.284297704 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284005898 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.285428255 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.285022731 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.285372318 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.283507146 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28538924 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.28442818 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284654083 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285703557 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291267896 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283860026 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.282921041 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.286811827 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284248183 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.284233729 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.28559696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.292853662 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308635864 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295216512 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293969206 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289384517 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285142032 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28936199 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.29298022 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284811093 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286500811 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28701776 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.286406448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287463094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.289240747 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287297228 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.292751297 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.305161733 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284890052 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294460462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.307425691 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287015856 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.286889186 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290346558 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286035116 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283980891 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28779277 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.28693467 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29403079 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306917448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287626658 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288019153 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285992159 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.28874723 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291678607 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288285867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.288057852 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28572902 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287600919 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288314899 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28710602 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.285965317 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2878373 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.287931644 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.291394724 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294177734 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.286478809 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28995253 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.289245129 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.289376978 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288227019 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288909596 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.287111389 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285575138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.288946394 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288635472 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289030351 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.29034709 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28746004 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.290466978 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290234393 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289132884 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293316711 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298518652 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.297611451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287908737 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.290196174 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.289765111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.292093525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289421556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290009233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290044175 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.288992328 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.290714999 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289876697 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.29045121 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293859163 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30694945 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.311571625 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291235814 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290755294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293304637 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.291749088 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.289236275 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.29150471 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.292057048 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293478511 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.300449861 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.292720456 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298015999 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310420487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.293255812 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296075828 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.29484455 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.297527675 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293985568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292224003 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291968021 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296671156 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.306482434 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293199767 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302569363 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322302764 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.312603748 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.292848062 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.292822405 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292174278 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292665364 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.294817578 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.294547445 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292305763 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292727993 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291515799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.293467294 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296960453 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292874414 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293421464 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.292683985 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.291532982 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292801411 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290388431 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.294967039 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292366422 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293197555 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292090959 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293635714 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.293204194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305524513 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319769981 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.294686041 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293934131 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.291364332 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296808646 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296741091 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304807103 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.300777675 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.294690656 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.294218165 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296352561 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293751852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292104407 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294647849 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293582159 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29550012 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.292869276 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.307522587 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320782449 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.298847639 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.292999632 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295639802 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.296317979 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295587061 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295766804 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2968582 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.295347936 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.297536869 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299421219 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296307731 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29684378 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.29968346 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.304400364 seconds)
  done (took 763.762901846 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293869642 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293426845 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295488883 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294434993 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295319247 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295249081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29359408 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294488779 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295009393 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295822671 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294801046 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294168171 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295192486 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295433351 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293959193 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295510503 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295418568 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295059541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294628662 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295305159 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295414811 seconds)
  done (took 28.402987148 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.298593673 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.29588013 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296799456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297695604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295794508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297846747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296614397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298826595 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299487841 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295291865 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299212708 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299949947 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.295750824 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295344351 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295863271 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298735038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.299406803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296585867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.298096321 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296043632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298722807 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296294433 seconds)
  done (took 29.756636167 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298448066 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.299581644 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297876087 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295921526 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299980523 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.297685587 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.298983814 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.299742105 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.300219844 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.299132135 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.298246621 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300808374 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305510712 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303108903 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.302581627 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.300515238 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.445108153 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.300746807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.299723334 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.298990282 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.297329292 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.305599294 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.319323015 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.298650953 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.298694808 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.300091296 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300067279 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.300717369 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.301767487 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.302941912 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304614995 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.301768175 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299557873 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.302194118 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.301016622 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.303337732 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.305621372 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300813341 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.298562801 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.302220569 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311534793 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.323284112 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.302556434 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.306552006 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.324933909 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.303605039 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.304065844 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309798601 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.299549433 seconds)
  done (took 65.18938311 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.302865434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.303195994 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.300498081 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30274981 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.304253345 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.30285104 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.303070594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304000821 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298857193 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.300097447 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.30314147 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.300193457 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300684584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.302533254 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.304144454 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300270991 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300140195 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300950292 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299689259 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300485836 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.300890668 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.303572744 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301947004 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.301394469 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302591709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301593008 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301257359 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.304165007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300928104 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300493371 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.305200477 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303157477 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30425988 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.301904601 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301579299 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.30378751 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.304930753 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.301887781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.304245688 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301793241 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303966675 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305039962 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304328363 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305693805 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302809507 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302186616 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301108773 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301385787 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.301469002 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304690799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30471059 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302988981 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.306374756 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.302605098 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305452985 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304605934 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302087749 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.30273158 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.306656684 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302907079 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302732385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305815864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303234816 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30547802 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.30616627 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304027392 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.303617508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306906932 seconds)
  done (took 89.816878638 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305854085 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305629439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306489481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305438902 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306033634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.306883295 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306252947 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305815766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305367142 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305525777 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305932864 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307256158 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.306894137 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307735857 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308204033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307345587 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30690913 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306677663 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307963343 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307107347 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.306499598 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307173373 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30678245 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307193581 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308582753 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307555412 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306853717 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306509268 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306857102 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306608983 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308815067 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.307543054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308113652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307431489 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308299305 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.307384161 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307800956 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308342273 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30893181 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30868731 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307861521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308569809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308274839 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.308551111 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309168546 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307715514 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308289523 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.309628743 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307900046 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308484155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308937756 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308958214 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309454998 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308673125 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308298769 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308702946 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309500841 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309124511 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309709922 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310275771 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310567552 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.31022141 seconds)
  done (took 82.303206658 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310730768 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311409357 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.308308569 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.308020761 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310185284 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307382462 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310937467 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.311074722 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311294829 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.310910828 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310179842 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307954737 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308912003 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31103959 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.309663288 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309318455 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30832494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308932922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31130206 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308969959 seconds)
  done (took 27.419669037 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309229271 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312713574 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.309366924 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309174385 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.311603476 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309719173 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.312393259 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311232031 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309443339 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311915886 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312900802 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313145369 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310761414 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309440802 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311941229 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310292135 seconds)
  done (took 22.200721485 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30987288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.313186023 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.311049151 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.312151574 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.311265072 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.310844082 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311787006 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.310561939 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.311148884 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.313006658 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312851373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312091626 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314017895 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312008342 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.312240092 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.31397212 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311042971 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.310701094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313781429 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.31345897 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.31155807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310873348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313803246 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.312654848 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.311089178 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.311544562 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311949501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310746971 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.311452863 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315032132 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310965836 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.311553955 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310032614 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310851115 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.313290482 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.310317365 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.314457019 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.314929374 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313064485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312515394 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312315717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.309470212 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312787102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314858764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.313421455 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31285456 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310837024 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31071596 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.310066806 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309588555 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.312786644 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.31178279 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312481156 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312503353 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313625368 seconds)
  done (took 73.39208739 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312555036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31407622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309226183 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313276795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314414547 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310595998 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313754713 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310921327 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310597501 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312546366 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311999786 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312340777 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311596341 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313212895 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312781447 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314216609 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310768234 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312170934 seconds)
  done (took 24.847491117 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311577859 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311515218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314023481 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310609353 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310722076 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314378931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310481883 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313564527 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314079959 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31177839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311823823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315205455 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315117774 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315882611 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311881543 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311140599 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314637034 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314618259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313158406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31128948 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315334746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315083448 seconds)
  done (took 30.115227495 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.313747687 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.314444644 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.313466815 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.330961657 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332933291 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.337669976 seconds)
  done (took 9.171417567 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321565811 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315080301 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313525596 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316017818 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3149483 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313725928 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312404159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31305417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316381485 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313572137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313398023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316092977 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316854543 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31395476 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316002116 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316628654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313886646 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314321771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314478962 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31782604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314480684 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317083641 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31601677 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313871718 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314529506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314929906 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317519573 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315624145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315047486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317100592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318165654 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315643353 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318634719 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316217343 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319223519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318288303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316498241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317145054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318152064 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314376207 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318627018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318232747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317673022 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315440348 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318136119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315013836 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316217744 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316348125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316517145 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319338064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318136886 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316862631 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319062475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319471683 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319043938 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320029474 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316565404 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316111234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32003967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317862282 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315867905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319091312 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316669199 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31636538 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319132463 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317516915 seconds)
  done (took 88.145052721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316751557 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316837518 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317511691 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318398874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317578393 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316828479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31636977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317325458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318220891 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31842096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320679402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31864729 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318686086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31790987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317461311 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318031823 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318549206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318333048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318791936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321537372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319057705 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317948235 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318738944 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317574604 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319079085 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322653207 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319325133 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319676235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319932455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319313272 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319361686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319658266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318675738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320478696 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319806141 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3189139 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319415228 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320076574 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319667286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322492261 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319889231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322756595 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319514386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32066761 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319871581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319697996 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319378348 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321030162 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320444604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320424959 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320698909 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320894224 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321432204 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32005355 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320621516 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320609371 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320971098 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320904734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320488838 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323097959 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320106582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321023915 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324021823 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320055186 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321174705 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320942204 seconds)
  done (took 88.329292398 seconds)
done (took 1781.128371648 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.376522028 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.332028859 seconds)
  done (took 13.944427945 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486710864 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.438117183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.317517699 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.352558909 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318508218 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.341744051 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.341368148 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319792613 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.319186992 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.31825105 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319000232 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.51016743 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.340214135 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.320098034 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.318620555 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.413056968 seconds)
  done (took 43.014380609 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.347679148 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326188947 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.446050586 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347479133 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349780434 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.522258939 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38626388 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329983981 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506513561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.367480719 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.971443315 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347906038 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.323335924 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.497860363 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.343991283 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.522280614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.586638382 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.065091479 seconds)
  done (took 30.822086919 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.812838799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.323788409 seconds)
  done (took 9.371928196 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.320345495 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.358840999 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.336184243 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.35455222 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.370052791 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.362085198 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.400416573 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.400869488 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.358469781 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.353576832 seconds)
  done (took 64.85237868 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346136579 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324925879 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326450098 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324493368 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.33087377 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.316867045 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.323324072 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318010307 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.283911681 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.46338115 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326185142 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331971145 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344625168 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.325499314 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322475282 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.361959202 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.496409641 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.323945551 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32110312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.329433076 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.32473238 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422738752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367508402 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.322584898 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458458235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.293394254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.332868799 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.330880096 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.471725677 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.324288814 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.325135688 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.324996936 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327414065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.947386564 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.82293326 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.340649037 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35245923 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.334066032 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.325115912 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.470214456 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.326033981 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335967482 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.318556815 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.854682073 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.475079874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.446842799 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.662898143 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.352059784 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.328263087 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.39115866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326290973 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326450671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356821765 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.126638376 seconds)
  done (took 111.927729251 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355388232 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.711381966 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48945269 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339278472 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.978243835 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.996415437 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343490542 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.633323898 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.397017421 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317714528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.667398626 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857337678 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342851359 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.32066065 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.959776296 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.398163468 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319184838 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.106114049 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342177407 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.320909136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823765864 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324139938 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327276057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.490293534 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356389902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786310342 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.880106722 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.783556012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339233437 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.317849946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798329988 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33964094 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.367444256 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.315959376 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591586241 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69701521 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683249019 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.340120396 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.341201018 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31695568 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.355210942 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790634673 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709308694 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.341164127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322983419 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801515489 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341094476 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.317743091 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.320340531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518916373 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.15616502 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315596927 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.835239916 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.323040582 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.682820535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383355872 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383435002 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814607366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339090137 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.428716834 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360581835 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316534847 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316750969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315195798 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319769249 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.666242836 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.437621531 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.318063487 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665375216 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797443641 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.346509869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859567222 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.21405806 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330859304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.410128212 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32036222 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.900409885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810708897 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.342491994 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315127627 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65152313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.336419587 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.648733049 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337483601 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338731736 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828494475 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.324716669 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.354667063 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31409292 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.320556931 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.955841728 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316682381 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.615557998 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.356598132 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31654381 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.314182319 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350483416 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314153883 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31592267 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.313932403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84888565 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.344356311 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.286591444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.338484891 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314625045 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32065523 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.315940472 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315271931 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533935209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.732597506 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.338268853 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317574925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.31526763 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.345465972 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.488467556 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.314618216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.622713961 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.334704034 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326671117 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328240184 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055548728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380628368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316211569 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.326784096 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.223202103 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528140688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.334680901 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.333366268 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317937094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340379792 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.557728593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336947276 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.374288323 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316848568 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039946019 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.368476086 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.325490462 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.828600774 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323763237 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.199039743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.334453028 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31960119 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604647401 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.596039154 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380859825 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317223394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321708418 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.011755125 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.345368851 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46409134 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339055557 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382310217 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516725669 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.619848127 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317783392 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.931780995 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317792066 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532979227 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320113015 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638727427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.820513668 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34192664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325844176 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.026786461 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023846694 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.986466357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.321262392 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.652632168 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.297938453 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.800960433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31816956 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318711993 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.78117185 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321441495 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322825541 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.319577411 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.31981682 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.474652158 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49376 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.661970624 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323590111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7710531 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36384567 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32087224 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.34260758 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320761031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.668271 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.394483977 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.322562175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.350980586 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.321387315 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.328045251 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797972946 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.274925975 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327349487 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473566092 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966430016 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.34275996 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.322052385 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.872294302 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.63090781 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840106237 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.401988676 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.637608947 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.35051271 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359799522 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903026865 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367529752 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799103464 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341205561 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.328042989 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933075633 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.344265648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.66905194 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.321877374 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321497034 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867418632 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339431824 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.326040846 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.628468685 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344736646 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573324845 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.323602769 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.326203605 seconds)
  done (took 1109.075214182 seconds)
done (took 1384.243388323 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.323235225 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327933079 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.308871124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.328446457 seconds)
  done (took 26.530427458 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.3335177 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329935937 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.329690369 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.329434339 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332414006 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331164457 seconds)
  done (took 9.22764575 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.404045011 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324757154 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.331659753 seconds)
  done (took 19.302919448 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534808524 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.654899608 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.68688406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.593817327 seconds)
  done (took 10.713392625 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.33071996 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330767326 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330540864 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.332928352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334114658 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336104271 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.334693059 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332984807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336692478 seconds)
  done (took 13.240832128 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.316485108 seconds)
done (took 85.571828677 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.436125017 seconds)
    (2/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.810588613 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.293434359 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.607870328 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.71568887 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.393927593 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.745545274 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.387063791 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.70519335 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.374043153 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351551693 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.181876489 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.994613426 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358609197 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.325980681 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.751400925 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.346822686 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.829936559 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.391090261 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.179715573 seconds)
    (21/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.480182751 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.411499711 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.389771177 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.844186198 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397739254 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.683320352 seconds)
    (27/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415799093 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.075267336 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.365968046 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.892321124 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.692241048 seconds)
    (32/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.375763328 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.269218361 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.460384354 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.746749596 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37546705 seconds)
    (37/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588652109 seconds)
    (38/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.810065295 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.330238624 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.117258615 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.694427382 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359049745 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.093555514 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.420523413 seconds)
    (45/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.384411358 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.35341253 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.475335665 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.407811397 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.350089932 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.443065211 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.344938879 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.93082717 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.724176772 seconds)
    (54/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.316016742 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.334559117 seconds)
    (56/309) benchmarking ("sort", Float32, false)...
    done (took 5.366217856 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.328266635 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.963301046 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.314734249 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.907012969 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.286397645 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.361874531 seconds)
    (63/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355092202 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.202422906 seconds)
    (65/309) benchmarking ("sort", Int64, false)...
    done (took 5.534990324 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.336106449 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.648522197 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.343196317 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.346899633 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.732876811 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.757716797 seconds)
    (72/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414089045 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.411644041 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.343162132 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.166028453 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.313761478 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.333263244 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.688693144 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.335185238 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460924145 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.309922729 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.634367798 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.454748209 seconds)
    (84/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.310227294 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.521201153 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.422023113 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.339233733 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.318337452 seconds)
    (89/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.721745993 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.151986281 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.335039724 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.787961877 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.759998869 seconds)
    (94/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.567253481 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325852107 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317882216 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.348259702 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.353777682 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.895969404 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.090460668 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.336568065 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.28745549 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422468249 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350586941 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.426596245 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.313257798 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.330204969 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 4.358410233 seconds)
    (109/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160374093 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.311423703 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.330870667 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337769831 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.346834912 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748358463 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365475439 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 1.845835714 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.372758118 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589212022 seconds)
    (119/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.31174544 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.441775899 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345117855 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.376650088 seconds)
    (123/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.343228424 seconds)
    (124/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.33277931 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.148938728 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.77307267 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.356296857 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600448302 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.333389917 seconds)
    (130/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.43663916 seconds)
    (131/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.001077474 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.423903862 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.41885843 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.435464575 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.314281802 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.415252601 seconds)
    (137/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.38284281 seconds)
    (138/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.607019913 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.998372378 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.128276915 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361443599 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45821486 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.802034733 seconds)
    (144/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.288182119 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.320638643 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.878764256 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.357921021 seconds)
    (148/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.314887048 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.422957353 seconds)
    (150/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.318756692 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.320640526 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338570861 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.813142481 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.351458975 seconds)
    (155/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.157262654 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.399238744 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.480038345 seconds)
    (158/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.317255018 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.386402066 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.114120449 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354844996 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.3339617 seconds)
    (163/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.749527556 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.584647673 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.179526152 seconds)
    (166/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.105799736 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.365577849 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.643632613 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.465106223 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.19760176 seconds)
    (171/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.343076949 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.17573811 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.363963806 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.931270098 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.879938029 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.325308365 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.349999024 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.850746452 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.321556527 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.352226294 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.370535168 seconds)
    (182/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.472257692 seconds)
    (183/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.457109404 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.423962833 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.22024157 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.592540871 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.402157406 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.318613371 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.717678696 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.856464437 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.35076218 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332477803 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.334618775 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.520685714 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.713996918 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.379668979 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.607369131 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.368781077 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32764549 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.380966872 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.739371281 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.578889802 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.360467437 seconds)
    (204/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.779615492 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.395027483 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.350180935 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.306872715 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.520105744 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.437962338 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.399817926 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.3484899 seconds)
    (212/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.977131682 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.321877735 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.833281564 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.345006144 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.975040241 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55677156 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.348261901 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.798262556 seconds)
    (220/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.529669647 seconds)
    (221/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.73674908 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.325981915 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.319553542 seconds)
    (224/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.53518959 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.383666871 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.445661738 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.553689449 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369107726 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.320157297 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.42242801 seconds)
    (231/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.367919084 seconds)
    (232/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.262870712 seconds)
    (233/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.339754199 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.384660135 seconds)
    (235/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.430814163 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.347740015 seconds)
    (237/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.437332531 seconds)
    (238/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.373726863 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.32057268 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.123614126 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.993878387 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.347217616 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.476603883 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.369289367 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.271754605 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.321599048 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.356103268 seconds)
    (248/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.666431252 seconds)
    (249/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.616757829 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.95714068 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.321800597 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.967863389 seconds)
    (253/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994255992 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.327516621 seconds)
    (255/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.35934842 seconds)
    (256/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.460901815 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352438993 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.410456662 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.0571361 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.384396827 seconds)
    (261/309) benchmarking ("sort", Float64, false)...
    done (took 5.669137672 seconds)
    (262/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.343436983 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.329914646 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.40723814 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.560271417 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.434911288 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.915106777 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139260226 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.333133178 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.949666489 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.370391115 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.869210938 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.563540954 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.741613611 seconds)
    (275/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.972777389 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.450159511 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.683492712 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.388307154 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.243810608 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.228728347 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326454287 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.579946202 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.431107485 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.015998226 seconds)
    (285/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065890716 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.245595721 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.427074652 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.426982953 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.323594707 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.457370939 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.141920926 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 6.344337048 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.330887147 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.529710367 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.325290959 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.590166619 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.403321966 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.108045875 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.974706622 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.346135962 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.344411534 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.330928103 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.851119573 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.359881608 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140918186 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.367103389 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19136749 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.435754829 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.41357778 seconds)
  done (took 1041.549718447 seconds)
done (took 1042.793125247 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.37889479 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373437295 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.356501258 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37902168 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.470994098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.381270297 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.367696664 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.358455385 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405962278 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.406651742 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.358005955 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.379901579 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360487793 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.358891052 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357942158 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374597322 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.454503808 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.366583277 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.37586302 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.367391581 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.376455581 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35766693 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.406902827 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.381300403 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.361274944 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.36205302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363262611 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.380469781 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.470928755 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.364279373 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360507283 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.372200161 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.454104521 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363691218 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353577699 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.380621163 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.37226915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.368593793 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.363338316 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39203755 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.828746541 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.378159579 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.362301156 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.359692122 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35987497 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363831793 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.362274877 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.365847585 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374155323 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376207711 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.816912477 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.394034956 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.364440895 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.362464642 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371277668 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361471356 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.364233259 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378110084 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381615135 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377723043 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.442791721 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.369899764 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.362530655 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.37978117 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369293138 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.856437425 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373396528 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.366712921 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.830907508 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.382961868 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.855906509 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.38890844 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.363592036 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376723866 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394664442 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.458574032 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.362928529 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36279786 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.371273107 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.36136468 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.373347306 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375970802 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.366922937 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.362657047 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378550697 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.386977363 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372009769 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.366131503 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371941988 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.383333163 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.3710652 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.374934194 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365891541 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358488108 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372769758 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.366147857 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.366690839 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36681811 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368321241 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373686929 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.880016922 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405158405 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.360260191 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.359853122 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.364619816 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378543807 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.876782608 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.390658465 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.387087654 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411609649 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.365720308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.448407023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.374115285 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381273578 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373474042 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.368545152 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.359623122 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.449362897 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.8987632 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.405350572 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367166096 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.365357661 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381642888 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.368464124 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361436506 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.461147068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.373539702 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37997939 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.487804706 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.376289076 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39922415 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365877983 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.36926857 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.389798616 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382826099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398772505 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36817099 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384240113 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.383370861 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363205564 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.377742528 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37819227 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368449049 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.373280809 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359112991 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390018216 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379185338 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380115571 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.389145652 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48863317 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.362822313 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.449741035 seconds)
done (took 230.92812496 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423961177 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.35960363 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.447070647 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362390921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462623688 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.464279022 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.360472405 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.35999113 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36055829 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.743940396 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.361158255 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.361918829 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.356254988 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363124449 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447035506 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.363761376 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.361895564 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.70743564 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364198564 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.434346162 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.365806841 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.362360311 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.365467504 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745285416 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.364068378 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362330891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.43480779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365423731 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.709096669 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.363228374 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.36489779 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.710898577 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453580411 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.381758475 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.375255237 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372029353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.466435421 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384735269 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445135192 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.445638625 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.449836053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402745466 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.365848513 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358324944 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366758806 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36684974 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3632849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391488065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.359676237 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.363428405 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707483566 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376192205 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.365078182 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364360145 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.364852044 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.396079453 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.364025778 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366781895 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456163048 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.36725249 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427802043 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.748356964 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746985019 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.367878769 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.365243408 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364567963 seconds)
  done (took 150.515086721 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434658584 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440135766 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479701893 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384727349 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419055406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.484340639 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.387163273 seconds)
  done (took 11.306084825 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373415793 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368148831 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.417315981 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.416083127 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367290598 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520896131 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36818481 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379238252 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366060347 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419885425 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369433183 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367892009 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.374928836 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.362284776 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415475585 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378487252 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.482634145 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368343512 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36952859 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519258242 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366190599 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.375728705 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419746408 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.379699661 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371307618 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373372837 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933334989 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368677431 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366384509 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.369337305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36694258 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.406696686 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368969316 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.367369284 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367566571 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486275179 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368950852 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366798567 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.370636125 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.368127315 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370017939 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370007078 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.370036547 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369304699 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.371499826 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393130592 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.370796915 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372863308 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370917206 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371134869 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420631509 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370892991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368596472 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368969772 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.426419206 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377226994 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372726505 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368218766 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370516415 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369439629 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520769188 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417954023 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.371046611 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418747622 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371706037 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371936004 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372300039 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.373010037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425349095 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.371869033 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42064689 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.368471438 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.527245535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393451498 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373350997 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373998157 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37428472 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373556756 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.3702939 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.378461611 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369674905 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373538902 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.378204502 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369706713 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370346214 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475928303 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481311887 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370632776 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385352761 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381369009 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.371060848 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425369714 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373079217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371848476 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426066175 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487747266 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42585813 seconds)
  done (took 156.796131441 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379047597 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381771653 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374746591 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38999018 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.374953506 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.373634461 seconds)
  done (took 9.555406233 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37629418 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.376044846 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374859516 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.375189721 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.374495823 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374842299 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.37639305 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37555755 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.379791486 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374340169 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374753391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37817458 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375561466 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.374602115 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.375490541 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376681527 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.375522054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373291216 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37512293 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375421308 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480071201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375257279 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376148041 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376258742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.380820331 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37557566 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382904656 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37578051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.376403232 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.38385436 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.395843836 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376914247 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376995901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381802491 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381086967 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.377227234 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381145699 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378919072 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373785057 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.377851228 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.380320161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376674384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376326175 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.379796652 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37877857 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381739486 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383838697 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384893715 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378019682 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379959751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379271918 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.37858207 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377123525 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.378837884 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379285543 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399095293 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.382354697 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.378158564 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.378318166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378948698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381299025 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.379697317 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380640174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382098631 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.377122228 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.379486246 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379393902 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383815878 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378371753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379480862 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381971069 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377214627 seconds)
  done (took 101.653237294 seconds)
done (took 431.093901286 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.383158576 seconds)
  done (took 7.67110567 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.569601258 seconds)
  done (took 7.860632835 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.52202877 seconds)
  done (took 22.815478172 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.423993809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.445418198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.390534805 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.403752685 seconds)
  done (took 26.951923263 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.372457427 seconds)
  done (took 7.659322248 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.371138965 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.371833677 seconds)
  done (took 14.032375097 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.443739033 seconds)
  done (took 7.730437867 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.013212784 seconds)
  done (took 8.307699117 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.372882795 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.40062287 seconds)
  done (took 14.333394773 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.362912773 seconds)
  done (took 7.65121878 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.316075733 seconds)
  done (took 8.604762247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.373425371 seconds)
  done (took 7.663262919 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.378790313 seconds)
  done (took 7.6656327 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.609954849 seconds)
  done (took 9.898754197 seconds)
done (took 160.133187486 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.372379893 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.371055896 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.373438925 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.371981622 seconds)
  done (took 26.775835888 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413222123 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.41381978 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.864424505 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.424980925 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415558261 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413518864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406331438 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.406922162 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424272456 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417353579 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41603774 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415453041 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41542546 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.406701379 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.417598448 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415792534 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.426060943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415935697 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405893396 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418440329 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383498409 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.42567621 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417811371 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.382775054 seconds)
  done (took 35.65292023 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903745008 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.451785309 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.535259612 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433501341 seconds)
  done (took 7.615482321 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432629879 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.435527926 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447812874 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484372267 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.51138649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.443460959 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.411904775 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.404398099 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390469336 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.435914133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510804951 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.452956836 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.519613808 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.383083843 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.567919018 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381749377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382363993 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434694581 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489632926 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511650427 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.383915636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434271135 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.437219639 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452531098 seconds)
  done (took 36.029776284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.382890363 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401678153 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.382463891 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381203938 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390419402 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.382431611 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.383326691 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383732205 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381726248 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.388852066 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.382319493 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.395126633 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.3818871 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.3830538 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38899758 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384487425 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.389197073 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382786645 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.383097999 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390271913 seconds)
  done (took 29.011225643 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.377873689 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.231302333 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.730393243 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.63399224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.378111766 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.383549168 seconds)
  done (took 28.027777609 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.456653716 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.61622167 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384242925 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.761515767 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.860903393 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.408068819 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384648234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.63289917 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971346692 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969519723 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451091608 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.454628249 seconds)
  done (took 20.645021816 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.377809626 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.384730174 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.393985397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400717854 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.439758522 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.404366267 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391004737 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.377060998 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448401093 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.465009621 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.405446931 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.442935002 seconds)
  done (took 38.224282665 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467532635 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430904784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.435288136 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381854254 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124640102 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591799035 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43196703 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.829840444 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.392665163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653920888 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38809382 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476435396 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637407758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397101925 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388032654 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.409596927 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632585895 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903609818 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389714417 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.468480303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414934436 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38427796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.648221109 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.419071723 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592622443 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359249028 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642833128 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159548657 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682362986 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40015653 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392519084 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382418433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656949275 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074499628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505561639 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392071456 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397280347 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.012325144 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.367996141 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.492542784 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393005826 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391894469 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39416138 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383924354 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315673306 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382595288 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847515008 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.39742896 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.095702335 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383832957 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394985468 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478672217 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387112055 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.953642714 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391641467 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398383189 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.380777964 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409437855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973914028 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.984389494 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397762702 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.32578504 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392033517 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.576314263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059687778 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.511034348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.389148276 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388129073 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318652679 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.484631887 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407235673 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532321792 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410935008 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034607113 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125465059 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417677835 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32265819 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977257931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393359959 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.327275074 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613192554 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163646958 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321884616 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.327427253 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320177835 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137608113 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396081346 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.866341416 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415509498 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843218939 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.403189838 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402692397 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409412207 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609400282 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.264235069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385967197 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.395718956 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521387417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408884138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823704336 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328491429 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390325886 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642624163 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.598390766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387734691 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.435320903 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617948825 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401337887 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.409001512 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400281065 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.404000787 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.988047615 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423488846 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.98000019 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410638801 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165906731 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16605152 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390118834 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.495957519 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401442953 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65228422 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.195529553 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279973921 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45651809 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393430468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389330651 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585655851 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245840595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.549187168 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.384321507 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39555722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406391848 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.388517843 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334732139 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.39154315 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402567725 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.174822346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612356059 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388635949 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669964277 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323957568 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53763863 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398358072 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611354417 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.659702981 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.412292402 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649169463 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403192502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39575691 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425620873 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409230152 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487466235 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412735263 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391170385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671481852 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393969457 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.395193819 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.6033305 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176061943 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389703981 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394817564 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402350794 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004998547 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421145446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394732472 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363363887 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405368239 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458584984 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39700875 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.400731413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.310090986 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43384468 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401879501 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.386831622 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638123703 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401700324 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.522019542 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477259018 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.594880219 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.010031813 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42973664 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.32553928 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.104862969 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.085715906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394018811 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.592418819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391329853 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401867734 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405632231 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391464981 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994993263 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419492803 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.525306401 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.406303706 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404870459 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398781936 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391964049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.296269836 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044085525 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408178942 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.413656694 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537776569 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408094465 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327422275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.91076516 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397298885 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393496906 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.170695654 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429218451 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.513263494 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881676385 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654752483 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399391054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407895155 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.701114759 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.436037281 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402322213 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396377208 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409576021 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.411875969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410103609 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.405165881 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.622941944 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.841744097 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960232222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144007827 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991537664 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392362422 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.401260223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.30058953 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837014286 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338278104 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052604059 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593915192 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863718664 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348726049 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600210919 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.636361053 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222216856 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413314084 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62410948 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383569556 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.407073432 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415370609 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60874655 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431422765 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397209174 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350456986 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.678102964 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631424777 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398436654 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499665749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842737621 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410545741 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.182205395 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.416831494 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.811697589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597440842 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950094772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784061399 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41356166 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404985452 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897900325 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401450266 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92459749 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035128632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419973842 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.611442681 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342832597 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.410222126 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.409636715 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394081449 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.816548273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.412242743 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661019857 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409242489 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333504117 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39808402 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970730147 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272108991 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.404037024 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398893504 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189672729 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409686979 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710870598 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.417594185 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.294458877 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428738778 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333644079 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334250395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.094826107 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399655655 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374290722 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938593408 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.421622262 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422773121 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406688116 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273442105 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657607768 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414066169 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006082205 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642670813 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400520241 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423230777 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.50178085 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402621069 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.389556283 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.294597697 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636101346 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39844495 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632418762 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.468130708 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.300672794 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431771881 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620314706 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297774507 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402432903 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663712828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.138251045 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.417551306 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145986346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451881162 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417110653 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420633912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419225354 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421921044 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492741955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413499297 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.413726216 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413638681 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58124303 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409945601 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413025635 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415882926 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497188168 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048467073 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.306025993 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.184018744 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019344142 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197835191 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042207592 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439707153 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403070483 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403628323 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337514922 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550447006 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928462905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677459611 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532375019 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.411700788 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432944946 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41552134 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421431579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621867663 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678863872 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274997418 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405420079 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107382191 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.554383601 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415420496 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.614881152 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95127826 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024955011 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534937886 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404911548 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.86987931 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686445738 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495051818 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406260963 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994258371 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.408388493 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.819985111 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.43020428 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405097333 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560088961 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415318902 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103816396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.443831325 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.565196499 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.180147064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664200497 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66929767 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.892085126 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417238922 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026513005 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.172844729 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679425885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477081679 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418783099 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512308656 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554619983 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.407302827 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295964188 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406815059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249319279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.117880095 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.416609417 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023671311 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694882003 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.404151333 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.410663489 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437414415 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.417449045 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630251256 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158013353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631646959 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417588383 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416569926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.396113956 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023651809 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44659183 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343183762 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.410838747 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662156123 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670793564 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433204376 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861753636 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.119773834 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996735732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.383107885 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430261388 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408131467 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157722491 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031105156 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.345800096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963531597 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074924573 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42091066 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689345521 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414519296 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42004359 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691567116 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413586551 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414133844 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427662562 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.026558115 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247240954 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.41922939 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.582081431 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.352969828 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.649847713 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407909684 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348340864 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411477236 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.59594889 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418581056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541103962 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422444879 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.415667665 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419831465 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.178499033 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692574625 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.416013914 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.403112228 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.402991443 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421792246 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443201867 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668331898 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416135401 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085010036 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.762696021 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668032181 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42709954 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.397679262 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414345729 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411486914 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128466629 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380712215 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41268526 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03828535 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.41561175 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.428955613 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417155006 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.628322518 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62408971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413917932 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43183766 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420349206 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434576009 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.311545366 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179992956 seconds)
  done (took 1677.792714055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45370467 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.451831103 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.424407618 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.444622923 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473669687 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437298383 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.51156349 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458001724 seconds)
  done (took 52.979268312 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.417414903 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.578656499 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.445736371 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.413585495 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.430362565 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417597538 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.910175487 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.445366496 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.430813065 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.422682012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.415652736 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.428984035 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.124113628 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.430631526 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.429143579 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.404265454 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.429766631 seconds)
  done (took 66.90636059 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.418695963 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.609441072 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.432869534 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.419663373 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.815779364 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.443666044 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.704620249 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.504183851 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.416086199 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.598167919 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.093215309 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.44949418 seconds)
  done (took 81.233360709 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422839709 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423280617 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423789793 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422620422 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.422896214 seconds)
  done (took 8.442831577 seconds)
done (took 2110.625010844 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.66137944 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157638269 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098062635 seconds)
  done (took 5.582495474 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.5622002 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.611676267 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.73366094 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.753213656 seconds)
  done (took 7.988794909 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.699273626 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.803438301 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.609580217 seconds)
  done (took 6.438862504 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.909850483 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.432533031 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.434675228 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.415098642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.424032337 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.425025996 seconds)
  done (took 20.593528166 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.421792142 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.4234068 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421733543 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425280865 seconds)
  done (took 7.021479624 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.396803213 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.118135467 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.399988331 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419708654 seconds)
  done (took 18.663304324 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.165964422 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.180358215 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162772559 seconds)
  done (took 7.838456783 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.41682389 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.269825518 seconds)
  done (took 10.015847094 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713815176 seconds)
  done (took 3.042594661 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.553304587 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.74696558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.511423229 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.483998841 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.557200081 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.522145778 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.16652296 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.727933217 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.452293624 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.710322185 seconds)
  done (took 29.76184956 seconds)
done (took 135.710311546 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.394775058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422477566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.626966295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.364533715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.650904563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.627509545 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.835447702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.327043827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.038181746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.865772303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.363427975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.649727661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.572511281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422293147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.572213459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422192685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.654160313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.44938326 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.085554343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.246866631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.836381555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.002448434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.470176915 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.206951356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.660107558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.570759775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.595260965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.42050598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.262011176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.789275118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.576498944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420071151 seconds)
  done (took 195.732685933 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419965618 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420321743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.439628115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420924644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420528119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426258008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421816964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420399756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.44091464 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.455629043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419925286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.418966926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421433226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.442365642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420884915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.420849876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422615229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.426195862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428046875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425703275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424188067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421971875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.431150073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422528444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.425836851 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.421467572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.44038089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420871744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421361157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.440430009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.427036512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445224082 seconds)
  done (took 207.008870768 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422959507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.423655258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428762474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422020057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440091406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428641997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425702039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439307392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.431613157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.425448481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43053426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.421356889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.424231769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422935852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.425088432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.441381775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.442401034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.441638061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42798139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423985666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.423518034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42172945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.435970106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.437789065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43008846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.424963979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429043555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.437731503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.439129156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433939106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429061451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44504416 seconds)
  done (took 207.111975955 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.625993786 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.432448354 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434603407 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.389534037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433212701 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.432129855 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.428320713 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.62310097 seconds)
  done (took 15.135850898 seconds)
done (took 626.317912927 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.816490458 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.532908742 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639307619 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456212671 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.229251471 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.472240965 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.451759109 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.629961779 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.393032454 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641635491 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.783946031 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.470897332 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.9264821 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456556425 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.712922358 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55569337 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.331887339 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.442459813 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.77727803 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.011098944 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.71808391 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.974603038 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.650942283 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.374441623 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.912811799 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.971779824 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.22280437 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.310417547 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.470420499 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.782198561 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.155487833 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.487858206 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.516654631 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.516143357 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.572428375 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.55511583 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.457437334 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.516508028 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.661164496 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.733235425 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.997902234 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.196943516 seconds)
  done (took 96.82710664 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.416837053 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.41697828 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.415861854 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.415100683 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.417834744 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.417256145 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.416847199 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.417103783 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.416154005 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.416841572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.415075522 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.417495859 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.417346552 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.419000527 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.41751874 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.417860991 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.417282444 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.41988161 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.417268703 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.416365973 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417657752 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.416443236 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.417807305 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.4173837 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.419369373 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418871054 seconds)
  done (took 38.189359897 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437646218 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.694125791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.865061007 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.444978215 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.43662014 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441130465 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519160265 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438596481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.440339246 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.440304386 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.610132034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43892869 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.474181849 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.893260731 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443360037 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.438017194 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.43820087 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437390038 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699333671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447744805 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.543569742 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440111795 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.519872178 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.446810051 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.461001704 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438221875 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443188795 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.964199429 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.458479691 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.609355792 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.288257113 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.522484411 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.924418231 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.887718704 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.282511265 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.444570566 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440928295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.615119452 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441193326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440225382 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.520603896 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442876418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873605288 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.071753206 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.464990776 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441089107 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.990253061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.637669512 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.699768183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452025251 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899173475 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446417819 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442155343 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441339498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.701907867 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449492895 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.44005337 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.984245534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.463742068 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.522224785 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.442275789 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441348299 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708616678 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44244808 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.697662258 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.443586144 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.448297662 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.462824915 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.871947338 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.443671839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.093882605 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460521862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440288053 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.611016019 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.697415917 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.023633179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.464946498 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.715501995 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.936160952 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543940396 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448037398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.970008413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.544521371 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446812739 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.444644313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.444937551 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442303823 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493341194 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.523300906 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.022469383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099378451 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.004443216 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.545794315 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.456935079 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443214101 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985428324 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.46354236 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.444648572 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.874275937 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095335482 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467130745 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.452686223 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.101733828 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465530679 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.528024298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452889928 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.88494186 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.445491453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.49609954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443809496 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.45128605 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.466442398 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.526554752 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45259112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445577722 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.064126282 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.643004912 seconds)
  done (took 189.192339164 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.437549886 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.455903532 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.438625141 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.437066689 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.437806315 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44336995 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.437867139 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.438066579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443076246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.437564957 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.438460989 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.441298567 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.441017394 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.464098164 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448581408 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445577995 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.049887183 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.438381162 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.439984625 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.455770538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.248290551 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.445202018 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441728458 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455979324 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.439344924 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.438803996 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.452928159 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.441921796 seconds)
  done (took 155.182246764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446611598 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.035697961 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.464298023 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.583549457 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.468272572 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.445404525 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.581667594 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.508317888 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.469072222 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445690668 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445718279 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763072127 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448962038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99867836 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.653954032 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.60986914 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989175672 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.465338901 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446887591 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.44630413 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.586309689 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.452439281 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.76360987 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.037782223 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.467254927 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037063127 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434620375 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448707181 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.44681999 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.038130237 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.465130931 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.76547977 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.527939083 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.51235867 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.061162474 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.004042073 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.009616871 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.604292144 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.451366085 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446862929 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.446577693 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.432781592 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.040046821 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.467124852 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449767219 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02956379 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.468924213 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449498411 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.455818786 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.446686075 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.512374135 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.534713811 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.802542528 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.077843656 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.552225837 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.461032774 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.589714562 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.844928969 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.456149914 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.988909494 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.432040671 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.071778155 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.474920789 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.432639658 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450499422 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45509479 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.60872582 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.592398563 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.995716095 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.469265203 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.007602062 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.63014878 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.449015435 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.45042111 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.4525585 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.071246893 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032798619 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.633569385 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.591208237 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.656672792 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.440553712 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449299396 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.43447701 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.533497809 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.449996818 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.075405975 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.013659289 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.469844841 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.45271761 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453568427 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453516589 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.637645363 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097316271 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.556211184 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979764799 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.802574026 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791146005 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45981472 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.515216138 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47254525 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.786190633 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.46094315 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.513826349 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912450703 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.792241768 seconds)
  done (took 173.102575609 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.7023948 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.703545905 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547896001 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.589599037 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.090325767 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.036855413 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.779341569 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.606788425 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.571309634 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.725488529 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.710786981 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.546074789 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.62956741 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.533057418 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.204914357 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.542015877 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567576714 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.611477976 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.573875112 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.516079296 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.12431665 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.759692062 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.634454468 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.493040584 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554307819 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.245137399 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.036772255 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.99184233 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.635993132 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.882710241 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.995798181 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.633351723 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.465616579 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.184932031 seconds)
  done (took 69.78440166 seconds)
done (took 723.612768094 seconds)
SAVING RESULT...
DONE!
