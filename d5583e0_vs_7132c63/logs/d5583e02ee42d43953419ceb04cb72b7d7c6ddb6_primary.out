cset: moving following pidspec: 30648
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.387661864 seconds)
loading group "string"... done (took 0.585210193 seconds)
loading group "linalg"... done (took 7.591270881 seconds)
loading group "parallel"... done (took 0.174572419 seconds)
loading group "find"... done (took 1.186439086 seconds)
loading group "tuple"... done (took 2.093147448 seconds)
loading group "dates"... done (took 1.337859952 seconds)
loading group "micro"... done (took 0.248323778 seconds)
loading group "io"... done (took 0.973413954 seconds)
loading group "scalar"... done (took 41.077089435 seconds)
loading group "sparse"... done (took 13.522942616 seconds)
loading group "broadcast"... done (took 1.045388481 seconds)
loading group "union"... done (took 14.288309865 seconds)
loading group "simd"... done (took 4.810219955 seconds)
loading group "random"... done (took 9.735767615 seconds)
loading group "problem"... done (took 2.014209999 seconds)
loading group "array"... done (took 22.840028608 seconds)
loading group "misc"... done (took 2.074803536 seconds)
loading group "sort"... done (took 3.488727636 seconds)
loading group "collection"... done (took 19.768632588 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572503378 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143191051 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149319808 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130788397 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204602106 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157085366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158173791 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098842861 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.972694631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174853579 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153146865 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528180197 seconds)
done (took 5.177665419 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.247224118 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095135223 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104514525 seconds)
  done (took 0.878544478 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077224503 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146461833 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095085318 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078202605 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095008708 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077131971 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098162905 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092880075 seconds)
  done (took 1.367489357 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086705441 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098067341 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081671231 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096591949 seconds)
  done (took 1.044138487 seconds)
done (took 4.306638918 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733936626 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275432002 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20622132 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464812864 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196267923 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216833707 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68611755 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352100377 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254738187 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100710153 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143693894 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391676999 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138086252 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691830455 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090211758 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124350202 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180372128 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449176946 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082816831 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110238032 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117900605 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14311996 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132404585 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091152177 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185737046 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081653572 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193300061 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108512965 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080774092 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274754005 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201499888 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698133131 seconds)
  done (took 10.920633388 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111133237 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133663782 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098348815 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138501359 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13441162 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09987627 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084985199 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097432985 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121069422 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176575065 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130926331 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121369683 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09515691 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081861565 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116210808 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246840335 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12233867 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099272369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100949874 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087430515 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138061067 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113283775 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109466632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093296578 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167406858 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221867107 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112740931 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127032322 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097613873 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112690925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143438747 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143460368 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095523763 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080405649 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174155316 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123972926 seconds)
  done (took 5.145938038 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.08744026 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155427813 seconds)
    (2/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07835453 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190795678 seconds)
    (4/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123326673 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170103992 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.100217082 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142948046 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094486191 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098065355 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258373568 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112329429 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096597343 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162379348 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14070529 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115340838 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080395602 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09968131 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096541909 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.594501691 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158434272 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13603723 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11405474 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087731455 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10063322 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378342466 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105387181 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085141718 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098245743 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066481337 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160572683 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098666085 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.164892994 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12282131 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081008538 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136097065 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206975126 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126483395 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118279735 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096711452 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078935373 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193176424 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087918305 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096671109 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103513176 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13519348 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133425561 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097673518 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080940793 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218588427 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079937132 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11431872 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.940608238 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183030078 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090837127 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098816663 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325621377 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0988912 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102107695 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07746604 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280255071 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18856406 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098361209 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079597172 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097158825 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080659656 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.411558772 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082294629 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.66334473 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084631247 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109641579 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085890965 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096194366 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103925955 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0869609 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115218909 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079481547 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099949271 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078669698 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097184437 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081053798 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108096634 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101205251 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080392772 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164913967 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080051712 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115610243 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127158435 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082934085 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09607189 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130050774 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082868936 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097073391 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134280029 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080735176 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108557059 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099342636 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14236873 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081948201 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.147679055 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081695979 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125702855 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100160179 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114324792 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111379013 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094113313 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081924751 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103016388 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078773442 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09672611 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148519863 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093686622 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081580088 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100026118 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109587526 seconds)
  done (took 22.410612222 seconds)
done (took 40.247726363 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319007174 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10266044 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103571748 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102976752 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101422086 seconds)
  done (took 1.490133997 seconds)
done (took 2.224010778 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.164220182 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115795639 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094812327 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128740683 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078100521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.133763133 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130871222 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094433048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132014495 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093570989 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127402795 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0776499 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093131384 seconds)
  done (took 2.224351389 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094711545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114273439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082872393 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110668029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076792373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111105835 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092908394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116489595 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111355928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08520661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093214718 seconds)
  done (took 1.815338393 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094094442 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11217837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083505466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109580291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077057772 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109846583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092669456 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117074522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109886169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085644379 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093485628 seconds)
  done (took 1.813072091 seconds)
done (took 6.577242807 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09075533 seconds)
  done (took 0.813327733 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.916362189 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.848344611 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113263836 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150117292 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31553631 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192143325 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476134773 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124678965 seconds)
  done (took 11.049138058 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143424496 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082773665 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099998417 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083298809 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099333102 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084889747 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10227529 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101381804 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087279872 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100229742 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084650202 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101691731 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.1028502 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087482216 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10343585 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085003934 seconds)
  done (took 2.340560509 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11768978 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117150759 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105275827 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108240181 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086085744 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103539689 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104905558 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087702517 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102572913 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10483932 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09154729 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.1069625 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104778527 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081998519 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108698021 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109566812 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088442491 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108060014 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107385996 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091306532 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106147186 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097236014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088847594 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108296408 seconds)
  done (took 3.273281703 seconds)
done (took 18.204621677 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159043847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108422243 seconds)
  done (took 0.999187874 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094762559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112075022 seconds)
  done (took 0.944492946 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097719625 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095272096 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121172169 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108622572 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079796932 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096127295 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118488885 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07966459 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097378233 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096798193 seconds)
  done (took 1.731456612 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082268286 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109803191 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100424423 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094863231 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104803882 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094809918 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08814156 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098466931 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107958231 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076733714 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101787336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115030017 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087664781 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117752816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107439149 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100957836 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08705383 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100766511 seconds)
  done (took 2.515698139 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079868794 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096325272 seconds)
  done (took 0.915950365 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08142315 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093479122 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081476244 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096766481 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092973866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076456932 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093621948 seconds)
  done (took 1.355131305 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.432673532 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135031717 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259163815 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08370484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118221049 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300097641 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096362274 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084393373 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10200112 seconds)
  done (took 2.407893146 seconds)
done (took 11.607182511 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092664371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115585183 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114305909 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459950672 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106118276 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096969434 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159036781 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248749482 seconds)
done (took 2.140957435 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146275392 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.588973119 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421024144 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.2289819 seconds)
  done (took 1.984480568 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.399541367 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098038543 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083820878 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082992069 seconds)
  done (took 1.412116441 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079962624 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0998871 seconds)
  done (took 0.927927636 seconds)
done (took 5.222179376 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08035697 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128376477 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080123734 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101302513 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078652742 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100692536 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07755042 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097486457 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080653903 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098734902 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097947383 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081565761 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098520146 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082142283 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095438345 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078630742 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09836338 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079572202 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096004974 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078897829 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096009835 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081486676 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096382543 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079163707 seconds)
  done (took 2.945132273 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099140508 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098515063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104117367 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087790801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104158934 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087022796 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10489108 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099713213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087295091 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103559021 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102828462 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086175058 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101419189 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086411668 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101969365 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104267835 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088599624 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10008687 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084285583 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103691749 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104757396 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082152631 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103596743 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104689845 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086631028 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103594714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084130913 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100526163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104422489 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086286078 seconds)
  done (took 3.648661048 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084698017 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094875154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079797522 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103908836 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079052822 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099481986 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07896662 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097878569 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080002571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097641958 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081221894 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097942013 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079165018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098773586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09825402 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083296913 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113227394 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080557459 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097591108 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080080384 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100626036 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079765783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098612033 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078858863 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097238688 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078830921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097480019 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079430286 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09862902 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079582749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100798221 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082542687 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097862403 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103333514 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083895578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097417292 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083964511 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096687014 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080676145 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096499798 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079354528 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097366365 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079630702 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103702036 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079835373 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.10012338 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08011195 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099575202 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080555546 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101092469 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095942235 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080350706 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098624065 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080476597 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101533124 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078920099 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098202766 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07945778 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098866182 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079443339 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097195578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079599659 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099767433 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080783267 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112956865 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103615098 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08073734 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09960571 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081393742 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099870976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081728005 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112546467 seconds)
  done (took 7.298030321 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083216131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106126167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079840537 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097617745 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076013183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096386891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099058397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079070036 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097104115 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084673387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096131314 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079945304 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09717942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107660812 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079516824 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096619628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085336284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093693544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07859158 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098383009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078080635 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098967854 seconds)
  done (took 2.749948749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206455566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102805966 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142234958 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106717805 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084039058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107745406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103660294 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086933795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105626705 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08530753 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103191234 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10467025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084887466 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102567248 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10287341 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085123454 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105137218 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085360881 seconds)
  done (took 2.669637021 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092204902 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098130084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.210953047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098344295 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098333578 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084311378 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104512367 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107327464 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082551168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099965072 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091889244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10287326 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102454946 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08320625 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103109044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083267856 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104162976 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082554479 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110227649 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105349512 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103677493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090268848 seconds)
  done (took 3.005923467 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095835241 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100622602 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1171682 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084371816 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094540483 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078668436 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10596978 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080751641 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105678134 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09936376 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081493514 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096962292 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086550957 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098736558 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103529086 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08153935 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099862888 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080753219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100728763 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077203091 seconds)
  done (took 2.637076602 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102377491 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099600496 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099028584 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091000574 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099452265 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083042017 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111912843 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102530539 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084417283 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126520382 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1023273 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083239186 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111345295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107589801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101101632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093437229 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112102721 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110775905 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08426996 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102234687 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128237332 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084436396 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111373754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102038613 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083826981 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102070281 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102259337 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089128488 seconds)
  done (took 3.580197276 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081469002 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097860707 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081483138 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096367955 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078771921 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097827077 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08000884 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098620031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082871271 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098580182 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083123377 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10138754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08308447 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101213322 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083438645 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102104683 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082684829 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098933824 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0807792 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098544127 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082913172 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101138438 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083536791 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098982568 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080712949 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101614415 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080002372 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098726723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082381446 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099064028 seconds)
  done (took 3.489095662 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090877033 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10593581 seconds)
  done (took 0.967792203 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078871918 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114300169 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078443021 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102821854 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085603582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10016416 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107878576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086737454 seconds)
  done (took 1.523928517 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096215825 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110187167 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082782183 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111818975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109564911 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097172701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17017209 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099972996 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105454647 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080427771 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11262341 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080858499 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105381672 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081448806 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105419729 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087445606 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097438394 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104958679 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085255009 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097838976 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083700614 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111367292 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101052902 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.07913329 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101239633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091284868 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111603185 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100772508 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085283884 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107793135 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087542509 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093765316 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08123492 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100483611 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09762576 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090855617 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116009508 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084336671 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108202451 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101118951 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093028024 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094618925 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103909025 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08770532 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109742633 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082151485 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100754896 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076729339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096824867 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083983833 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094857992 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098835339 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076597914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106097259 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085418874 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111642324 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080361455 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101065368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102511923 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08629529 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106675937 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083772164 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101883366 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081714267 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109628593 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103388528 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091714391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094711575 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075707084 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097389398 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092267298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122896082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10610032 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082422025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100914175 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080235809 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103003562 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100951633 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08830883 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10738099 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081620382 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106325226 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108140503 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082488243 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103157644 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107968853 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080572736 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101434173 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079981349 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117766409 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080838903 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097694099 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09703732 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093030226 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103702504 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08237361 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098430534 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089831271 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094122611 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100193719 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082929104 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099701604 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092948608 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105694057 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106015037 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091312537 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107240854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082061644 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102778243 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096347043 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082715123 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098829601 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089775383 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093562893 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085275313 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100611123 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082554232 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109697974 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097354108 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082312576 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109007175 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087537411 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097996627 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078616176 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102289423 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099466124 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085746142 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108701925 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080062356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09523482 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077727623 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103703066 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099306606 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08620176 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106016209 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08516827 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094926906 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097315248 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086811755 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109632409 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081814463 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10158744 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105862607 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083939454 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098562138 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08824392 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102728068 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08164324 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106260331 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09990501 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07769539 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103668549 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08500596 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098486379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085795376 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104957522 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102172111 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083523134 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098514784 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088719619 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101447448 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081341246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100174943 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080428529 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110042381 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102798712 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077122366 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097366716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090268991 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097477273 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099178128 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08130368 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102034733 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084110596 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097917063 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081428372 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102462824 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112031178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087010162 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101701148 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087984387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111203041 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100229474 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084732045 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100211585 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0838457 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101877811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090640526 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105085735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106079702 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084362545 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09658115 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088005277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108058534 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099020249 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080215043 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099093152 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086413192 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106595958 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086668059 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101466021 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098854382 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083167999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10449116 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084811741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100615838 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081406239 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105804276 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100489528 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089739137 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102258571 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111078537 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085862756 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096112131 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087181539 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098649696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088397292 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096747283 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079587081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099490885 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101762983 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081369745 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104379617 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076712902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108233218 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090210079 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100724906 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081923375 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100210768 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107981339 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084917211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1053322 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085492101 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107684213 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110979954 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081496915 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10408272 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094001859 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101232684 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076277421 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10688106 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098693371 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081776831 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09924004 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080905938 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103865784 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091550802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107874268 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094636329 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08499091 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098594877 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081756557 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096384315 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086521675 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103462448 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084160147 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107374656 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101472473 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086385715 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104760799 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082564477 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1018491 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10154093 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085237687 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102668869 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084619582 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100303437 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085018061 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100095772 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080582111 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102280093 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101127869 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08253212 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10742853 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08182528 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101057343 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085577285 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102300588 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10134529 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083280033 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100425342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086379227 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101364201 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083265003 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103735395 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077804799 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108404694 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100467599 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090459131 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101015923 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079722374 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107360255 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08513093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105974907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101716673 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083306446 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10211176 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081775896 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103753813 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089152244 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099048432 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112347553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090987654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101668903 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085383133 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101127273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102355476 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08265237 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101622996 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083630128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101138418 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081923214 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106206746 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085311697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101653079 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103511564 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084063365 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100907942 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084366583 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096183513 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082710768 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101397764 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083028032 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112326613 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103472342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083729387 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10077981 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084630991 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10166502 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078973552 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110151482 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110480587 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083622881 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109548963 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100384854 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084859508 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112384207 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077649008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099058965 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081022336 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099515279 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109328174 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084073957 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110655311 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083179947 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100292297 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080259264 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102818217 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090237504 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095562951 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080426361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105449404 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100616045 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082351703 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10135887 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085777023 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102410254 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111607316 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082716187 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102138798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083805828 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098180782 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0824601 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100454911 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085897473 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102621784 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081005985 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099186169 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101389459 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083867254 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102272413 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082861133 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102928232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089690526 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10142448 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10409846 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086755212 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095595234 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085741218 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100716947 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082981398 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100827031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086969342 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105303167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102547063 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09218129 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10193711 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083278954 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102057432 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10007213 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083203633 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100927026 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084185625 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100424398 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084531161 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11122189 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080598863 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104022262 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101260386 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083546834 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109157183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084650796 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104767147 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109868621 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083061698 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102637827 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091115386 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105476617 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104727523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085399672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103187681 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090265928 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100368908 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08961948 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102206448 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083402565 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103815409 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099212931 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083087618 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101329666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082749395 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108065492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084174626 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10131463 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081483924 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100147636 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102385981 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087616326 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110120109 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085938304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105655319 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078020937 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099806384 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103248435 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081337422 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.1028983 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087195805 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109204542 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085466646 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102378224 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100443022 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093785253 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108407188 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086827475 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099758072 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086851261 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103691342 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10425857 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084816485 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101048868 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084576019 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106688258 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085395122 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10194838 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108787829 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086644217 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103088536 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084492893 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102608979 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083617742 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097570022 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083612803 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105236097 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10723186 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085769559 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102377519 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093746282 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100082543 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083465303 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10591623 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101127688 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088542634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097045542 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084540592 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103243295 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084102848 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097912937 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101426963 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081210176 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104892455 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082679582 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097400956 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09424906 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112015602 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105059916 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082809365 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100820437 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078993577 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09737531 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082845171 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104981133 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084943401 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113392599 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101281353 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082237778 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097909774 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083757289 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105487341 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086122615 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100088283 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077906868 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101809832 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105647546 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088907947 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100240684 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082969744 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105844586 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086009813 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101079719 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105768505 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080159449 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105158594 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097270419 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103871871 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084479207 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109519341 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110939238 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08471226 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098260856 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084326594 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10577985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103192638 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084415704 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103370486 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09937939 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106922782 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100929887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082320477 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104970959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084034258 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11112756 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08456791 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103846405 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107126386 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086079832 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111722036 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085891071 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112042739 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106215178 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086541256 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101204456 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08368518 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.1010633 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082435749 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103953438 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103367599 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089096567 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111233011 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082529356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114248217 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112354267 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085927698 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099615212 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083024215 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102193237 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079252801 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107024692 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08221875 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101009808 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100613 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083582287 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103639756 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090157106 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104067692 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085011465 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10286586 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078307261 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105685712 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105083403 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085278801 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099834651 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085460304 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104370578 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087968868 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106996498 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081364823 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105371698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105486164 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085053883 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097721038 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091015895 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102326829 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086335734 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10377897 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083717289 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104076982 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106588129 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089802649 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104579058 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086190763 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11256683 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106152145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082564162 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100338141 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089697689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101569068 seconds)
  done (took 57.694512682 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146687075 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080774853 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098294925 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080055096 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112327126 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099921939 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079443411 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099595895 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081413573 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102527608 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0795294 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099321699 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107538853 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123973041 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093096896 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103622298 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098245992 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081158031 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098286289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080780316 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108578979 seconds)
  done (took 2.874838088 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105120105 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116812144 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114190783 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119039045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089656698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115159281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113656814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11520224 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099228776 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111478205 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118257326 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114858064 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091182334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110833784 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110258784 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093240859 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118265561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109339869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115520752 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096325467 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112812893 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114281077 seconds)
  done (took 3.225496445 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084671514 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102293263 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086086868 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09719798 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083692203 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098118729 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088245099 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101103669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08689173 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102752214 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.101875421 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083641077 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104070097 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079514304 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102899417 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0828501 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150846152 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107056773 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083434764 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10550924 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098194948 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086173148 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099377423 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080119245 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101452378 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088096105 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10405549 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082267094 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103817792 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082336329 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103808874 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100816297 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085766997 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10331523 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082733051 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101755457 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083993824 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10325234 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080232208 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102549519 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084181414 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099218078 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084604884 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105487066 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.101119265 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082012018 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104729181 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084359435 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098815807 seconds)
  done (took 5.474437196 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105104825 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161326457 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08622391 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144535567 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120840147 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11302046 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088807361 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141946051 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102259439 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082947728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123099424 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120462172 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103185179 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089611011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.1071929 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103275088 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085985287 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10208264 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087818368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103742913 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107927014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091097905 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120559866 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118153132 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107439192 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084259224 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103301885 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108359115 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097938972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110208692 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109592196 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090916939 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120365111 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105527469 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083107472 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107329297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121629197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084689667 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106993284 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101751104 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086765464 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108873871 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109166103 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101876014 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105125287 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109091715 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084806894 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100896154 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116907787 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087418879 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112677792 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119537276 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088456474 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104485252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108119131 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100316356 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104493968 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102341781 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088458623 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117798459 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101443025 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088617619 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118697521 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106889426 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092607904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119250985 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109267203 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109106251 seconds)
  done (took 8.125191443 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093417719 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110757331 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120337941 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120617449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091012605 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111104243 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110952354 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091578456 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11222464 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116446389 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111736463 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133274562 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085552685 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114773269 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110903995 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092248885 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111099845 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111621208 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090975033 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110936114 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111246477 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120021543 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091638162 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12052662 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141283458 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105346577 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110650049 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09090341 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119900643 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111016913 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123978494 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091341575 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11173089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120026829 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123369901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09014636 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103647503 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11108244 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090921615 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110586152 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106009837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120567583 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091768738 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106040253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11103399 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091249512 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120350774 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124070691 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114809414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116389986 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092103795 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119924152 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110251707 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111389422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101078241 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145391343 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120660475 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120676084 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111406771 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120077854 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119517242 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108148358 seconds)
  done (took 7.666657698 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107572419 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115061834 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117219296 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100066967 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082649555 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109393148 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082642745 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102187188 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11430677 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09520203 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116674777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108869834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091076585 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116729233 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108242754 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112495064 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08924434 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10873282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113310973 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108604504 seconds)
  done (took 2.93868124 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093930765 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124831421 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084743523 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112440202 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107735755 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09208577 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106682199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108346373 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086492149 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107922623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097164978 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116267248 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105894093 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091475021 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116850725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11372474 seconds)
  done (took 2.50309258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097556052 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11730346 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119962357 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084594141 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104197985 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101503005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084552845 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101470432 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081892937 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120901502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084583965 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108751187 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105082378 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083634465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101367387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087966443 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101537774 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082597999 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105394118 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11989324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095629853 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104237609 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105223365 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087201103 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105297565 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090934049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10588667 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102792413 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0833612 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105260477 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084781399 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113622743 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101855137 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083775918 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103274124 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08283045 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104916835 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104939594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.08959542 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105264135 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083535717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105698703 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084506106 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106209047 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101124643 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085944275 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100900364 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091535898 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103815931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084905706 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105481048 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107050051 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086238041 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116119941 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.10961641 seconds)
  done (took 6.267846645 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098640918 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108322921 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080248169 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103899121 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088249031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108062706 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108736505 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08740478 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107404328 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082918267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106935249 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087587091 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107452122 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108894973 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087406738 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108605925 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08131902 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107389966 seconds)
  done (took 2.611353985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090635274 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105080193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092777295 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105442486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084709861 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108158447 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080791613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105079727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104055738 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085550997 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104668973 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087733814 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103337792 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087368957 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105683897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084903919 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108545504 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103786408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085967728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101091709 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087872495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104568847 seconds)
  done (took 2.972389142 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114288598 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121561487 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091469813 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226939232 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103146334 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131588389 seconds)
  done (took 1.633914344 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110319018 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120786917 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106786444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107445299 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114999706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107940288 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087505571 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108678288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117546 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101517297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108749227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117844256 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118140085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09690955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114609982 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114545096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107834706 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087869039 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106572137 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129342671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087739788 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117751765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107603287 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087219526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108830656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116591519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118621718 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122599267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087072449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117864462 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114974078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087681732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118948774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121513194 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108937996 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097990462 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109043497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128960922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114892473 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116698593 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089634045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115150241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11887082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092340987 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117820905 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10743599 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113098449 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088134409 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107543083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134798109 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114992113 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097353309 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114777468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118267917 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119296896 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135456544 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121681977 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097720014 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115048615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122459292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117163411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11397296 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096159836 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122909024 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115363607 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117993772 seconds)
  done (took 8.149047756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102331227 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126192155 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108332516 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122375843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09808341 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107871406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108171357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088011455 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108354752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107131542 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151902638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088312211 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118214605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117373772 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108002723 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087848705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108119173 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117213376 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087668095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135799141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108081529 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117459472 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118292341 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096683936 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123080951 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115047751 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108483228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087682433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108188812 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108130385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093350146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108484649 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117716388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086179899 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117667486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108589274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108209061 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094399081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10806569 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115501906 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117654597 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10715632 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108822648 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10752452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122575016 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088027871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10770045 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107317232 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088712522 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108179359 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122836303 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102741437 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12212069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117652367 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108331267 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10822465 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087587135 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108514932 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087610938 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115497479 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118057142 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108555018 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136954902 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088315046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108297163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119034612 seconds)
  done (took 8.021047551 seconds)
done (took 155.419807864 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.225857225 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199708931 seconds)
  done (took 1.271910079 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098061328 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136552736 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095577961 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170821423 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106451332 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119500009 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138758881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.0973991 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107044052 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08578375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107793784 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08757068 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172735575 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085660567 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107358811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108539269 seconds)
  done (took 2.679231995 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118405663 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254346794 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125097211 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10512795 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089504998 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109599589 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084094338 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111396263 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089446182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105641845 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088203064 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107304794 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084775201 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106796926 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109838148 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087996554 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106078011 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088720966 seconds)
  done (took 2.827046099 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112673103 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146915024 seconds)
  done (took 1.122185168 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24121137 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161346973 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.2285698 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.46879396 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.2719555 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355353654 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.202855812 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208559548 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162206214 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209307385 seconds)
  done (took 3.364955022 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119008695 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180575673 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317136492 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15712771 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10622758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129265991 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155992654 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132161716 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123483679 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122030685 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10126167 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119079649 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138908919 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094461125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115103792 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118057381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119677343 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114487538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115587854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094650632 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138023845 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106161662 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095071229 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114317976 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118560742 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098785565 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106202671 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085151985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116473292 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114555501 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092776157 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124877527 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119206514 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154744783 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123271982 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156973467 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118539344 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090483685 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115278807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111218042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097497552 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11944186 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125734464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096618037 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106940769 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096559995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106439369 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106022686 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0939618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119401283 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094109612 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114068633 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154325129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119547091 seconds)
  done (took 7.386894461 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784320229 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156767782 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090980299 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875815806 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137350254 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102630559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76898882 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111968086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258424563 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.749420747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133245473 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120256703 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203631379 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259440614 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935874493 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28746445 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.663398055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123332678 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151445467 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152845757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117646911 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136839282 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10916191 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429009886 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116424236 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111952389 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096141069 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118635059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159404725 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124933694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114294871 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177368684 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247550534 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203087619 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115629241 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08958377 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111592651 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168256538 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264766522 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193810673 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17899213 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108961959 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109894725 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099765253 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131961422 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107657385 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162299618 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173913244 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170887226 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115426213 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119186117 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098471807 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120314534 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163380851 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121870573 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310057436 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320236105 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089623244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121810276 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126421914 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259493778 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102016254 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224617436 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140248295 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212206515 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090440308 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790999172 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169238362 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111515023 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094604477 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119927709 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116524891 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098743575 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167119803 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407840781 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123828369 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114363338 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088751156 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227029879 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124634341 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090560447 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161485724 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11679717 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12030936 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101588806 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122333041 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168020496 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249919879 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10055287 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12121478 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114983649 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102538638 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117214975 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211364288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2188062 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183076224 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21243305 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099091564 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185460764 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168456071 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119565647 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173649867 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119399488 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100991671 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121459596 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21488964 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145151002 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123404275 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09375301 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119400751 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148795783 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126827168 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096735848 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192081414 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458359808 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167291931 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109532483 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129052807 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097301296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184172238 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096802709 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260885078 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121481415 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170635364 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11953466 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087742825 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120810786 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163046477 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121817317 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121861165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099292361 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119033029 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233584787 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216086662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121871865 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220285418 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183962742 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117900926 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172170345 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121093096 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168060272 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12008372 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120743854 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094803921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782105584 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124204813 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098540617 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116440769 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186889503 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112128205 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102952383 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125052902 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108381415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772764916 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127778136 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121432998 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102144869 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116838988 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120867295 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096205924 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1152715 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160879458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229620982 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119600236 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118836925 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101608919 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182258166 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094877073 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125315855 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124429539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102740998 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121171981 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114628925 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102567208 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19179633 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164051359 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218812254 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576153314 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112286464 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125635145 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226652227 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090933258 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28950585 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119243918 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223708798 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164210788 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098914406 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320603844 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186426007 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185758564 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105008577 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194091569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087015881 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118818091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163666789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112319231 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09622453 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183518565 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101939106 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122758658 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964225008 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089153011 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249327664 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086615977 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192161151 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095410693 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12033756 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287316834 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089984812 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128589414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163506527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114711205 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123683238 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.844339336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125558449 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123152695 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09491734 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219689956 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164474742 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119426492 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120037306 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096686169 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184755326 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213419492 seconds)
  done (took 44.005644155 seconds)
done (took 63.51175484 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279169129 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217082468 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268895831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170334014 seconds)
  done (took 1.895093888 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170959247 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1503342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121573142 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107126739 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151252531 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084522324 seconds)
  done (took 1.671145892 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360961641 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275226059 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24334246 seconds)
  done (took 1.771711586 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.318441548 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251009471 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470142965 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328370726 seconds)
  done (took 2.356763687 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209577059 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132981236 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111428015 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104251125 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19704784 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247044207 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141824925 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202846417 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09870037 seconds)
  done (took 2.381758446 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197018202 seconds)
done (took 11.162935164 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.203774559 seconds)
    (2/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.242667591 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117765721 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.109252162 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.229728051 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.2343091 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120568631 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.172514074 seconds)
    (9/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120546372 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.174905532 seconds)
    (11/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.171944429 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.151783596 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117603825 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149358619 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102058113 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.113838605 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.213945592 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.194556918 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098101203 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.199640742 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116173009 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095561832 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136679447 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120806961 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194093242 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.18040344 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125615178 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.217031046 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.148381364 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098493893 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132411254 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.149746533 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095541295 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.13738161 seconds)
    (35/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09230929 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116610577 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092271688 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.149162128 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.203756277 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.200614249 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.25358764 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116805406 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091539356 seconds)
    (44/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.193466788 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.15056634 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.247902113 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120174344 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.115220527 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173545546 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.123285378 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077362452 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190312369 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096926703 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108881524 seconds)
    (55/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.086889044 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130406815 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093514367 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108504677 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133580795 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103588847 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.095483192 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.134563054 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108957425 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101246559 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116418181 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.18503328 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067017221 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142470251 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.169612015 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08746485 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.223243498 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126116949 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.190787376 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136535804 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.125503007 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108883707 seconds)
    (77/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067146912 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212245147 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11574344 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095269266 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067548939 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201764559 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 0.211050294 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.086923126 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154469961 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.150257098 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18442021 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174682949 seconds)
    (89/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.233122484 seconds)
    (90/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067051115 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.129634761 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11773258 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111656408 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116521824 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181217248 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087312101 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120501987 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181207456 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171899247 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115040789 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167908279 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089857417 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066218026 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067258735 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.089922742 seconds)
    (106/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177607052 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094765551 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.192228113 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086285296 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.191017583 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199529055 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090713633 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067885003 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096650926 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114707263 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.235677538 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120750187 seconds)
    (118/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.130849034 seconds)
    (119/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.148535896 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195652205 seconds)
    (121/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075640687 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0676479 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.425869287 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094511608 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115396822 seconds)
    (126/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094160091 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13483866 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09524233 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121637745 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115085763 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093358872 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135298392 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066752392 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12151309 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094231632 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142008212 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131241707 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086841637 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192631874 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088504916 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.163264336 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068856799 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178068894 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109921532 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088022873 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118027662 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131106957 seconds)
    (148/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.090480202 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085619049 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178419382 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.147212953 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155052649 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091597624 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17676456 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094488144 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.151552155 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133827009 seconds)
    (158/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082365574 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066652489 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111056009 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075299954 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066211311 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116888166 seconds)
    (164/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.151293786 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08854387 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077908309 seconds)
    (167/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.100214006 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097952752 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112459386 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085883277 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215186637 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109676971 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067526823 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173464623 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087118662 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198920193 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091033329 seconds)
    (178/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077330562 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137589948 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093855963 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156063234 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092203744 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092197072 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138936517 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092859698 seconds)
    (186/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067041819 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120329211 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169489031 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085914404 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.173286063 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085866786 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091198749 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068799435 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215845746 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 0.173974858 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132626197 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084466861 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066727798 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116683348 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189327839 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216589719 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100564385 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138364994 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220901119 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164574383 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094098148 seconds)
    (207/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126139035 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109852383 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086018069 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117212596 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095439135 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110328784 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067523456 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15526244 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085126506 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119011062 seconds)
    (217/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06714369 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118767855 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097085594 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11567182 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.124402465 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090615673 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109953904 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109335142 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224304489 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174995726 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097851599 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.1139458 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068254038 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111263607 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092474721 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118920453 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067746871 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189382504 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130262578 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069433945 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075373033 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092260031 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067093144 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087495339 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162832638 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091625832 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106277365 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11199239 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086386025 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092976288 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085657071 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115648234 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067912066 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131965558 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093581282 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137056604 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093638501 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.15521828 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095430592 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112372991 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.186505882 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068064109 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.091963225 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200550856 seconds)
    (261/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116801406 seconds)
    (262/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069029478 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111396579 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067309399 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111789224 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116246287 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113511937 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086467347 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157754827 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067666854 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113019466 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067988205 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092372653 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067723728 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137847599 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067226794 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19674888 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06861755 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120242151 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.136575652 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.0674754 seconds)
    (282/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067098362 seconds)
    (283/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123672556 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085559684 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144409514 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084785606 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155925652 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126376575 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088172494 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118801744 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111474231 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110398048 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09338617 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068252459 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091889017 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092820392 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067413971 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116286271 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068516882 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088302028 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110052024 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136506022 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092035659 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11103388 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090075824 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111700079 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068206273 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114509401 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067597941 seconds)
  done (took 39.70227045 seconds)
done (took 40.601197553 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100695931 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136403876 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096314127 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13614053 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123831129 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091210558 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119001067 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097991495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123573243 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125894658 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098540265 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093621683 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097056043 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121820126 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096575748 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135642283 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124861473 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093788111 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119545594 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086227168 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119449937 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08677387 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112650002 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070170058 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12263428 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094371055 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117523704 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121397809 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08642579 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110874053 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090009107 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11810342 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086110957 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124571186 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093201501 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119818108 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097023 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120561927 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11199974 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086711008 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118278459 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086365224 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118251258 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094863381 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117138313 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091939277 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119834956 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099572087 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136070616 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113715108 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09625606 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12452462 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095622026 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12037068 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090335898 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122194661 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116840492 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112873462 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120622128 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089312425 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119885594 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095218323 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116612822 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119491424 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095543727 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122082845 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098211246 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11687762 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096586955 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116958763 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086727602 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119441432 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114727457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086904828 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120619482 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098310205 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110673883 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093217393 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118566311 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09177929 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111784159 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089540938 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113612426 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093343637 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114363653 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069606176 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115482297 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093542508 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111020537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096184863 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117369746 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093894228 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112893812 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12251816 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087192197 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116097611 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086577875 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111464649 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088531053 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115448736 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086203758 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114013251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095958583 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113668885 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094117672 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124162117 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087049463 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118596521 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085843994 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110737239 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126044587 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097301376 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111564997 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089788001 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111277816 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093716902 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111246036 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087014885 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111172346 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086678848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117811979 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087081489 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11449864 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093926996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125253488 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086291582 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11461941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113322973 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087629478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117849809 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087235597 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111615687 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089921242 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102366538 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089565599 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111353591 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.094511935 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113498756 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095964332 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113687529 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096701015 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116331635 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09320741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117361287 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085844699 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099537712 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089413405 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1141035 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089460744 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111820456 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089219684 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111220795 seconds)
done (took 16.988589249 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087838236 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186097717 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152011681 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143194232 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107266481 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112183837 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122751751 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119160225 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11365476 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143782818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110783003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132502662 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148827767 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087541976 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112673014 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092011935 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114075441 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104015728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145888991 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134369636 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166296243 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086187957 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147171487 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137182342 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121633425 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114518995 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113028351 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090906347 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116598421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102799751 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132587979 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116023383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087273307 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135047595 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104775587 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121241497 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111854659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094306077 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111898423 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087544412 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141718472 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134449067 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092930774 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118144887 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091311345 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115207579 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088766875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121661738 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123349507 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091545036 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127766938 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15807389 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091203141 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122984714 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110838487 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097806626 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122858429 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089908893 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11348086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090001284 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112233676 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091120558 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127752544 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143204767 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116547276 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098499289 seconds)
  done (took 8.647754679 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104867029 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140189623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130911053 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10585032 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113314888 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087856358 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113711668 seconds)
  done (took 1.761378351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088567985 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134153359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128576279 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13692499 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132543936 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108919836 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123711728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088334501 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131945628 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089271773 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134277481 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153821707 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090191774 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121075587 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138294875 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088024668 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137393202 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088657641 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11712258 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137608022 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091325017 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134909892 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091322667 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114908257 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102881626 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114162513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162402695 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093425244 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115557983 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091877822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11333604 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16946292 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102394962 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125130632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114294022 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103052843 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12949268 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08730955 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130393401 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09376557 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128309804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114901172 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090117902 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112479685 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093530715 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125208009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089429668 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11541361 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091668664 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135348912 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089466665 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127923242 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114017501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092791838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115526751 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095285857 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124604516 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089867344 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135062909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089904964 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132013268 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135096105 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103104111 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131740043 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091412807 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128498948 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128480336 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091559819 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116144816 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092664489 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132177496 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086991687 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116465813 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099044622 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115615894 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137907021 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112526234 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117469594 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098968198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115494666 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089164053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115066058 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138715968 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093388148 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115095938 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093031828 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118242969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086844025 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113967899 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092277753 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113461477 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090810051 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117560073 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089832353 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117557814 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130808627 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089898172 seconds)
  done (took 11.875344016 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090134484 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115697841 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092354131 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114843096 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090484964 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116100239 seconds)
  done (took 1.592103898 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115240875 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118831283 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104560263 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120145625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157097571 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129320928 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105186539 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124746589 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109248572 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127601423 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130271406 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105381822 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137635114 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122036148 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104263235 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121957008 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130169718 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100003175 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128715099 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096978121 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137771311 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122380232 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096799423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132991569 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119222214 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095535801 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127774222 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102458886 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128323982 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124990738 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096143455 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119097732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121594878 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098082536 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131476798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121062147 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095987556 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121050322 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100079135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119577493 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131285763 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097285377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12868199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094211994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123538739 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122507592 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094235094 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126468349 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129630805 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094533619 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120954325 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095361833 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119521089 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119626875 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096105187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124414024 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095058388 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131349449 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122282789 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096030651 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119170181 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093627924 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12464681 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11979984 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105038688 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120149374 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122400017 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096068869 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123433926 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095730973 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120079934 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118545269 seconds)
  done (took 9.294426665 seconds)
done (took 34.122799088 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691328856 seconds)
  done (took 1.657631995 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.727224248 seconds)
  done (took 1.694967462 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.776229019 seconds)
  done (took 17.744583176 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503444252 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584395903 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.882870872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181598555 seconds)
  done (took 3.120942121 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945279343 seconds)
  done (took 1.935451916 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245453563 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232729755 seconds)
  done (took 1.455868319 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773273286 seconds)
  done (took 1.757514684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.362079654 seconds)
  done (took 2.338588918 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332320435 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185252231 seconds)
  done (took 1.502380485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559796921 seconds)
  done (took 1.544923265 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.798801864 seconds)
  done (took 7.789740725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270916343 seconds)
  done (took 1.262573887 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302005405 seconds)
  done (took 1.285471669 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.492283966 seconds)
  done (took 4.478822662 seconds)
done (took 50.543883991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099086532 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127780131 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102504623 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124728701 seconds)
  done (took 1.43355288 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101107801 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121186658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100162323 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121257331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126754123 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0961709 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123512747 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100888154 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120779512 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096845114 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121935066 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120800553 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098967514 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123861029 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093240211 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124684576 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099733158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121761263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124918295 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096621587 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119510671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097673748 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124961237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094054794 seconds)
  done (took 3.66227468 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100208703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120365421 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096543473 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119241678 seconds)
  done (took 1.434479178 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100746684 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14390166 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139846241 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101157541 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144593937 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136366578 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093133917 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118445502 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095134337 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126363249 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09106311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150683011 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137872115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100033687 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128447358 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113415928 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091999471 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139959373 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100113733 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127032022 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093153 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125371009 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090593905 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139595032 seconds)
  done (took 3.821887061 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170582279 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127853904 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139214928 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094455281 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16158892 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141164142 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0879512 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142101087 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087732153 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132225637 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118750434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133983927 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130546185 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088821472 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114550299 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088465956 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130025491 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130535388 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091442837 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128949625 seconds)
  done (took 3.440886384 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098430835 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117997698 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089485793 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117089763 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099816553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121619758 seconds)
  done (took 1.646184764 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091093749 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115299267 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089766289 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115833974 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095276942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115722364 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088642529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115612865 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090431804 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115829077 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089792824 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114376828 seconds)
  done (took 2.239824295 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463673567 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093372554 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121317771 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112160928 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097314416 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115098821 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103571607 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119976944 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142140588 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08997209 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115806836 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091103112 seconds)
  done (took 2.665796985 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239603164 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125719462 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293265911 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197305906 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160846435 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172430043 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154631098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166610638 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226160019 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159716854 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211626708 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223815002 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125897753 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222201623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139087261 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120741032 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230102531 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222301148 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156411201 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234931845 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20285197 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167113953 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206094335 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126135736 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138445606 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169753147 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121337133 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129572115 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213110154 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207074858 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191190957 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164731067 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148025774 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245270649 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251637799 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198582183 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192757781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135932103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171094316 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169248758 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2666668 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112073787 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238581221 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159515225 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131368353 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197066556 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168552163 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176605124 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149813236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139654169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224810952 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215621918 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.218907667 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111933715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167474076 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160671566 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168717521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156430115 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252434959 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225486571 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181286431 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093300565 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148258778 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218166467 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183751161 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168649759 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181902947 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146773158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219569579 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188043461 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166396071 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190483496 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210457199 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138573018 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171509447 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176508468 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173200116 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25933619 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180300275 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121380831 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169022269 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150251268 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105456149 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194682675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125300014 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217541634 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150210834 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134413059 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171196509 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161717233 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161108681 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201566939 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2187619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1217037 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11134535 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156882649 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12845186 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216997753 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140053191 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160464767 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162246699 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104063862 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204095446 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09795953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178671324 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11874498 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18006566 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18406845 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127648895 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160673205 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153319692 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150811998 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179664331 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201688094 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142161583 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133632325 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209884717 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176758179 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150102977 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180420765 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229804694 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11727669 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15061649 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227694344 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246305847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113600599 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2322282 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155590412 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107825836 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134323202 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180402626 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156344731 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161067121 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135112746 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183596011 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240289674 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098887631 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138927583 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190757008 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134070524 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133340595 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162030785 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149523449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111727115 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147321014 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151350834 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18197779 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207088904 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15364773 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166914224 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151774992 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251918616 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114583539 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151330824 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148525239 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120452608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195050846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19914734 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131732223 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203830605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.201223737 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159782596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173012931 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107567535 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177112835 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130556786 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120355003 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194487791 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170461414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164253444 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198495503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16077171 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.210121641 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18354138 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174266098 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175199693 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166845786 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158261461 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139238079 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161404993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166216789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096113754 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143984745 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134522527 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158744724 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14390057 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106766933 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228331046 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171806062 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151738378 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16037719 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150318551 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182685741 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128611428 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180839491 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178874608 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14861898 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199314567 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223761816 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189621732 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142609124 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206920852 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120913621 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097954902 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143652804 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172175007 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134463677 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136029203 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167008504 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182515241 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186552957 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205107695 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169211728 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179139877 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19234043 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09544687 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169482515 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18579663 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204243009 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162682077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138929536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153084496 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178426747 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156756911 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258630625 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168672899 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179694431 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237930928 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151121075 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105565924 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151923727 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185930615 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154651834 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203977555 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120382532 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140937988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161882471 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133776161 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161829283 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184739973 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164049847 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218241456 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150552266 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18728358 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128140179 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166793175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159763623 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166713914 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081946927 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177505906 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232903153 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148841919 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171502709 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193318456 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132116289 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.180684729 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2407688 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196580662 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138696181 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1590597 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160602784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164023987 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175359887 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178660914 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161732986 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192104483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159042383 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135897064 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113907457 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150663869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152926579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134193768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149754537 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177704163 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13888871 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19133117 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163445885 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160440265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173484166 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150228566 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116624994 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150729515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246826841 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177299741 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244540748 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150613041 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179241915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205984099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126606887 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133124409 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105841857 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17921002 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136758586 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19057296 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.150938998 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163528027 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182725383 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221501362 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112629158 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121305334 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158908049 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174454235 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170093544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151480074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159740271 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208729734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.144159888 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132315917 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172867142 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161658435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119761466 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226136733 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08070029 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150981669 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100698111 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133322735 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16532368 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237934605 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136622639 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157374468 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170157532 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169327323 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164519345 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149748548 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151444164 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171618524 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22974304 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187354017 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.103752067 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157559421 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20591183 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196090651 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162377811 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140851106 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205252897 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193682848 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226464488 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142502405 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171239931 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168954335 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158342535 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186511509 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136172757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206381137 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135763974 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225101255 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154042272 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142689703 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176215771 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123233514 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14309825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215388629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17476199 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108426813 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134213172 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169462133 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177583261 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155936872 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128378912 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182232632 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125970048 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192606507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263461193 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135153175 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155216188 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119390723 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135443726 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158240553 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158759529 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140734263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163400779 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208997038 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13586796 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193520431 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230793919 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172338131 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175869197 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144199579 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694853639 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130212583 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196205288 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156044487 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206518359 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152053779 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173517082 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159376845 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168300551 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226050245 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160671783 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23122736 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19243594 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20432081 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105565448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159027429 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1623214 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145505857 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153918977 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169918433 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160254786 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153868925 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179165331 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169977638 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13460492 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139915908 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200224318 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156208276 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187847982 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180842948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139540106 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175332439 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212433284 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106636135 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180691918 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238080113 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142289303 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151914963 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10660242 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155592362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262905377 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124742608 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200897293 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205572697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131770078 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195126953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119929142 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221617909 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15896711 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180803719 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147004481 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16046772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157668256 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137731221 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103582969 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156896564 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167008039 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151103226 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159244274 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164517393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196840951 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09612275 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144803866 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161541132 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218266145 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217203337 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138873797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107170524 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162977613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15168382 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202768948 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179349979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108225183 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136570934 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137590206 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13202733 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13707424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155862314 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162302411 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166593009 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20749221 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137121885 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277848304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140875635 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129040543 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116586919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132226716 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122585669 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146098542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15720914 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153294306 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262912916 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146659701 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106003616 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14834741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12574137 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108851424 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166965945 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165679795 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206264577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118360983 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108751143 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160163061 seconds)
  done (took 81.562559113 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165298061 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131602229 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147151292 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201794892 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177001506 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270985821 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210409816 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253134076 seconds)
  done (took 2.636526383 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093595563 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146257831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157910888 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133992281 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091750999 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120231108 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345943587 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132866578 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116555507 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121747694 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174541472 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093729887 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.520415928 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117455866 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119140427 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083364078 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116046658 seconds)
  done (took 3.759404941 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477403525 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71624044 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.504345712 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098022098 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.184767027 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112667612 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.744973147 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196321329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114548937 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482920514 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775792362 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159079991 seconds)
  done (took 18.65141735 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09914367 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121293559 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10846955 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136543072 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095875905 seconds)
  done (took 1.650960947 seconds)
done (took 129.587612866 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104130284 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404212008 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072354531 seconds)
  done (took 1.596553947 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108161279 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.1375505 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108967759 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136690872 seconds)
  done (took 1.589762265 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098623563 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130301287 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109274008 seconds)
  done (took 1.430942489 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323764284 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190810555 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.143530607 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106618056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130045318 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103717519 seconds)
  done (took 1.43359635 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097210328 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127731349 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097970157 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130603464 seconds)
  done (took 1.54996379 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094914483 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071330221 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101825066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075004671 seconds)
  done (took 1.435262989 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114370594 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132424479 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10456366 seconds)
  done (took 1.448894477 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130760993 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139192476 seconds)
  done (took 1.367855173 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106461804 seconds)
  done (took 1.199782576 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118474064 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170416474 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190465412 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16557266 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.228599303 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165742491 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142522194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115144439 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131760069 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143568654 seconds)
  done (took 2.670701481 seconds)
done (took 17.577038964 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103318997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423733683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414256081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117649009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722898749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381731595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033419759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146862406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166652372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093669991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139462743 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673897737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024879426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373479769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980181333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370332164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705016432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093027557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120309254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094522237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014880216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092843543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122424602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092988989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70200414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426160241 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095775543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369687427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092088589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126898929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410499258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095432271 seconds)
  done (took 16.909256203 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095994435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173851531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098331787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138167566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123877719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094526153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1246314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093579346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180258071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123175617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139948713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092953097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127914411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095088995 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142694772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092867473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126359428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121025856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093138861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122522355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112011967 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12124201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094998211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122490669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093930162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135708178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123407991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093157534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121836275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099785012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128257118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09561603 seconds)
  done (took 4.841001647 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141146155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183749959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128673909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127533661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169723058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123910846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200616481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146858739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155401985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123904725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14080519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093013378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157164943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124244621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115054594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123098948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096731636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122488603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092793142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123870982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140436052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09401174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122822503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094015476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136774494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095932408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121344994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093692889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127417287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100358257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12480222 seconds)
  done (took 5.168813146 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096852669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128443216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109922531 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139203408 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096096245 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126049495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09833941 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125019745 seconds)
  done (took 2.021159332 seconds)
done (took 30.036127211 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103480294 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122808892 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098511722 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1358706 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098046203 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131835312 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091896696 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128450491 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099537722 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1274426 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129658745 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09257619 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124550939 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092704984 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13002397 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094160796 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133291325 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096148397 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1336865 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132930145 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09523336 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129915035 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098675082 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133639081 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104505377 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133185109 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133636328 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099392491 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123600518 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095226955 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12405341 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103862534 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122649522 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103878632 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122539312 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092459023 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121427904 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092477583 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133971533 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099764499 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124774602 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129179616 seconds)
  done (took 5.906559477 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10783311 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141060698 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105782189 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082434275 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117399649 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081329858 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138660278 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08014183 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111092561 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109022941 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075073075 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107184001 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078901694 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10257166 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077613355 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076374462 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109441868 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076334297 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077443591 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107234505 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08047538 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073541378 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108794661 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078930728 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104518437 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081594588 seconds)
  done (took 3.597150012 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099545753 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136040826 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112943233 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185381273 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161846463 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10010767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133548991 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140954796 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108668147 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120561821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096603233 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150692071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111006404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129500686 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092082947 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137991527 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.143908677 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094142296 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12920679 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114057135 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142016263 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13235928 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114211517 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134310884 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092484294 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124035031 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09648521 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135800969 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097438893 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130937904 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126597884 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096220242 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12404866 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10477448 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126372492 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093907046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141693283 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132983033 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101510733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122675037 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095696191 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122796771 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113532707 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168519156 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121858485 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100284218 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129714617 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102586776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12268022 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110327965 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132382462 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121214941 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09603619 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120818419 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093029277 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135584495 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094808265 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124561631 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102156925 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125430084 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104856622 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126116838 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137589004 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093019126 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129877889 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092038407 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123308246 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09147642 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146228171 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094571564 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164315184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124276894 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094290259 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132298894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100514373 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130383086 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093705441 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138401428 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132108536 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096873311 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131700019 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096432776 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12635816 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11083893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125075685 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094314459 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123245564 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128968536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.095766657 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122547324 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107757751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122307547 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096064554 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140537821 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091815703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123686978 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128232863 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098994294 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121433117 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106755899 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128923821 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093729028 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13293138 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093020492 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125412477 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132163426 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.09789081 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121060217 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.097802663 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129392587 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09361883 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123845918 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096447168 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124800528 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103069567 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130401809 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128100502 seconds)
  done (took 14.91429814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229975419 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218574104 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.12636468 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.21151964 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106036294 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.134684831 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212729558 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156929123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092974706 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.12391443 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094273939 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162873587 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156872013 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.168203671 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104470405 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123504041 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111586954 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165896547 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215373284 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207494029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14515658 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132473922 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095366817 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124092868 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095255626 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133081538 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10937588 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133498271 seconds)
  done (took 5.212749914 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108496371 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156515629 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098086597 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14467008 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149008001 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093060149 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12800136 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095215444 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135291216 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13667367 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092918182 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129279824 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099746322 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132601493 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123092826 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102917595 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132670638 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094938036 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126687616 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097414789 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130542099 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132806176 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097551848 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122290656 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103382879 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122227954 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086505472 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143174467 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123144207 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115878569 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121341823 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09954495 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133809589 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093699052 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123300939 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095445051 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125581785 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095238504 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12428084 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121511616 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092691126 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078223009 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122836025 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136667286 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098753084 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110041526 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099559136 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129853857 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09413109 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121429837 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095433238 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125119701 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096778534 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131505629 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098255912 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12482254 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095555675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116629766 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100140762 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126022447 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085424223 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121824642 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097958059 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119448741 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100778294 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128317002 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091650692 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124923408 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.127569906 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099330861 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124698458 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096877791 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121237071 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096602366 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.125769633 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098754079 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126904471 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092333675 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122876324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093519751 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106038051 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094375548 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104600485 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097026093 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121739776 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092876417 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125194353 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100415084 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138009927 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124979873 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.1024935 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124600482 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093746481 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127082859 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083777938 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126591447 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109597458 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141989809 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09365936 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122443823 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137220952 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.096476592 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123060704 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077181376 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.13145357 seconds)
  done (took 13.009157517 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.116797181 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150490412 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095548632 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138482628 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.150692116 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117551635 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132041354 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100751348 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126401958 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111414021 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124052627 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102033394 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127832083 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133047654 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117495724 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131980327 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096076679 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133202191 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102093335 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.15961101 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138254878 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.10907257 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13449545 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094694607 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129369347 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107062548 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150409504 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134382069 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104479015 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.13845669 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104207255 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150891803 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109272491 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128311746 seconds)
  done (took 5.333417158 seconds)
done (took 49.075880483 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.235681935 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422944831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200210723 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118943899 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.238144546 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.208941953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210821073 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.213080993 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.252848975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19955346 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439819674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.830173396 seconds)
done (took 58.703598123 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.250827635 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340569421 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474091174 seconds)
  done (took 3.946495066 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.635490749 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.142711411 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461036557 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200945886 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20158492 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490001366 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.868726313 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.572970793 seconds)
  done (took 28.065112744 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.203245756 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.601863783 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.925606572 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.930072343 seconds)
  done (took 18.791425594 seconds)
done (took 60.821429794 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220333606 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.262366075 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.204931195 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182177192 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.337572369 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.221268104 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.492753926 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.213726 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.219537529 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188576166 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.222610582 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.213925053 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.2280646 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.52630099 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.212842005 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.210770189 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.279958746 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.713939277 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609069023 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216233058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.221718646 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242645355 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.21481743 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202526689 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.232643119 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20255733 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202303564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.221351198 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.763951961 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.206262567 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.222811907 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.701844187 seconds)
  done (took 190.741535771 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20318164 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.138590648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.24714328 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.230559691 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.58490755 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408043554 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317760021 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.673037946 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.227260694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211998046 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.413502708 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.209961055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.483138142 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180662911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211838443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.309995838 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.481611896 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.494561116 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.226542673 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.478430478 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.232190109 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.542774218 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.452637208 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.376311749 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.226459437 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.228521259 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.210224046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223769612 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413604994 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.407308443 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.256191658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.235731755 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840039537 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063805585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.208863846 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.210241523 seconds)
  done (took 149.993484334 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.506327587 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204663984 seconds)
    (2/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206170751 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204303682 seconds)
    (4/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204399034 seconds)
    (5/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206040178 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23833854 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20497566 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790504708 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787230668 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708066034 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.454669648 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209751369 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.614258304 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522243663 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210264612 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300535246 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218547282 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206287634 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221091376 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.246689457 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208729375 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205754043 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788495717 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223528095 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.193222507 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.399707602 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222278518 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240786417 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596186081 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206213332 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240101408 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.538711163 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.256071774 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207163709 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.579336674 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.30741955 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320327079 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208917906 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239422943 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207933572 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487479034 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208782424 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207638582 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209611802 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852528151 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208616318 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790016206 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211454515 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.158560968 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208372261 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207759696 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.628910995 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.927836402 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226321765 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208481133 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210593953 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209035175 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209372649 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.240110987 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.581693422 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304737436 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225325071 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212271657 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240846339 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208247743 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.435667145 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213572791 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.308772631 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286247765 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.326516785 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791847505 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212851664 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306621745 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330267203 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20863482 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209405638 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209194391 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.207961075 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321455118 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209125414 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.626385011 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386363887 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226743583 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.620588196 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312211517 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209953925 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631437094 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214366417 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210086863 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968515597 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308347397 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211587033 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211644211 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209587656 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.630449141 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780547054 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.459546308 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212992436 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.676773664 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.213355624 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.649492916 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772824798 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.881214719 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211109797 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212005307 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323886894 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388965155 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228015996 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210790048 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.625857778 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216125086 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.26906956 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.211925759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.610642693 seconds)
  done (took 366.586942776 seconds)
done (took 709.96029284 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.876357285 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.873639876 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.983602243 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.860154413 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.826827732 seconds)
  done (took 10.560360028 seconds)
done (took 11.701145367 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398339087 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397454735 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27314837 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401393646 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240656737 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418183126 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38069886 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231824988 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313556748 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294316318 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31130913 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264913672 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239285926 seconds)
  done (took 18.303843255 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5336741 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539044483 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275954941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53586038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252140406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532824272 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420818056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427131524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427786717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245066863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226686864 seconds)
  done (took 16.557552363 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536539709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.550214802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278640417 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54220083 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253502325 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532516761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418538365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43100291 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433874675 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246627344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227558235 seconds)
  done (took 16.591641465 seconds)
done (took 52.594500633 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222264883 seconds)
  done (took 2.363248486 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257538962 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.419950325 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237348555 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227981277 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224352792 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225105397 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227477005 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223572076 seconds)
  done (took 11.18464138 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222752419 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221345135 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219222294 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220407976 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219796591 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22292781 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222724206 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222973341 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.222703258 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219560792 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219099615 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219856334 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22286817 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223161073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221715823 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22137124 seconds)
  done (took 20.684789714 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222689664 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220486668 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220871845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221842609 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220254473 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220794809 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222375288 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219247971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222228766 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221850358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223056557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220479577 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222011073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220625346 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221647965 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222210996 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22107286 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221427677 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225926352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221709107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222909644 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221928098 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222141561 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222677079 seconds)
  done (took 30.467674107 seconds)
done (took 65.843331483 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.3934339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.005298582 seconds)
  done (took 9.542203488 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224453621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225467836 seconds)
  done (took 3.596115759 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224539791 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224402001 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226797098 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224317356 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224864487 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224674601 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22533647 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.225084027 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.225255398 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224601571 seconds)
  done (took 13.393159056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22491374 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.22593943 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223726593 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225428816 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226400926 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223929287 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22578888 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226745263 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225652597 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223724466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226692925 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.22391986 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.226408227 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224265344 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226641669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222798058 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224023628 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224362222 seconds)
  done (took 23.196236249 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.226687813 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226620923 seconds)
  done (took 3.599643299 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224787314 seconds)
    (2/7) benchmarking "second"...
    done (took 1.223404677 seconds)
    (3/7) benchmarking "month"...
    done (took 1.224306015 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225113325 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224573514 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224009232 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.224207237 seconds)
  done (took 9.715148765 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228266257 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.403686723 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.48478476 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845255702 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22816508 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231291783 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.069173897 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231651073 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234002142 seconds)
  done (took 14.102541051 seconds)
done (took 78.28916918 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.24825523 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237529044 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.465304427 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.235776166 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.237766438 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.567502701 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.241185782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.351031198 seconds)
done (took 37.733025389 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.232778445 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.033357023 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.033291159 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221170539 seconds)
  done (took 11.435196345 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201350579 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.164638716 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205053642 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.257425605 seconds)
  done (took 17.9776199 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.294834646 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561809804 seconds)
  done (took 5.004671966 seconds)
done (took 41.7999824 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228811844 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226063751 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22933469 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229697635 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.226129666 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229281312 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.22668701 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22810971 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229694732 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.229086516 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227981632 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.229249564 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.229113484 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228019408 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227148185 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226839673 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229949778 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22749151 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225485125 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227535818 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227226526 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230173794 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227086861 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227081872 seconds)
  done (took 30.620743997 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229387166 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226437526 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230383754 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229931564 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227445994 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22974437 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229281115 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227714037 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230682028 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232332389 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22880683 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227611651 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230135763 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228206134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230330844 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228236312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231235842 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227754079 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230433792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228269896 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231449896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228585983 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228311878 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231685551 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228217614 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22894631 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232028535 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230274764 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231822455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230429653 seconds)
  done (took 38.035430668 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.236534821 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239369519 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232452824 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23237557 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.23258214 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231354145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232066511 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232665206 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231557326 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.232958254 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231859868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230816496 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232376736 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233081545 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231633022 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.232550981 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232348292 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231953412 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233189071 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233998867 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232527718 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232941713 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231838563 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234253771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.23396 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232466634 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233234572 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233421298 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232888841 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232704524 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233350244 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.23312834 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233620149 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234106018 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233098693 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23465006 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237861476 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241329539 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233024655 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232307643 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234027434 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233234816 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232814445 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233914392 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234566303 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234784802 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233978743 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234102383 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234633879 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234563509 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234816423 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235222179 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235479871 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233418591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233421086 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234170879 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235438031 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236460629 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236323148 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236050363 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2358155 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234660824 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235470477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23551238 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236192048 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234601199 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.236468786 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236564962 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235797184 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235935399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236344874 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.236490432 seconds)
  done (took 90.008775914 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23577087 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234812746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232978164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233718938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232812573 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235435795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233424346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23625271 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234354991 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236824318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237359003 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235051243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234643034 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237415507 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237598678 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235342648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237651902 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234295183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.237059168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237844499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237571375 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234615373 seconds)
  done (took 28.337711646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238136561 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237385721 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235141161 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238876539 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234766143 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243947209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238370097 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237772451 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238641839 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23494631 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234791359 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23884399 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235601128 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23563782 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235280754 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235419818 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238730513 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236483045 seconds)
  done (took 23.42344944 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236565608 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236075859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.238356134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235867319 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23534231 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238629396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237138455 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238766552 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.239511804 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236457453 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238668289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238996895 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238741635 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23634894 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240135835 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237180705 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239428356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236902555 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239985443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237616813 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238225475 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239313722 seconds)
  done (took 28.392104128 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240524164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240086674 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237669643 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237393096 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237872199 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239127214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.240857911 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236787285 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240178303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240761948 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239374072 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239248959 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237650795 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238305373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.238105339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237848891 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240612248 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240218595 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240856249 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237421539 seconds)
  done (took 25.939768857 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241806595 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242274506 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242555029 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24225211 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242418357 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243182565 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242991901 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243513981 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243606551 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243331782 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242777792 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242519478 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242149737 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244738445 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242780291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242768625 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243249104 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242796874 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243461029 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243228419 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244197702 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244421875 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244170831 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242985405 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243765497 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242286148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244565571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242824223 seconds)
  done (took 35.968023002 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24435281 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242981755 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240436133 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.241194816 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241847982 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240584709 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240454969 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241027232 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244250855 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241567246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244336198 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.243445889 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243488368 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242237816 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244596415 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243665461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245053647 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241818842 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241630563 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241473 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24496039 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245171094 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244065173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241764726 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241418843 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244460954 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240922373 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242644542 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245078812 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24223927 seconds)
  done (took 38.445987925 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263244722 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262644345 seconds)
  done (took 3.687964619 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.243910612 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244874913 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.245183034 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242051519 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242268429 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245043472 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246257633 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242752334 seconds)
  done (took 11.114543259 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245474157 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246265673 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245842213 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.245950294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246979843 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246270898 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253295276 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266785584 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.247364833 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247799908 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254827333 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255126126 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249682901 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24672815 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246953658 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249452217 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248589668 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247310258 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.24842442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.24936014 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24720357 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24936497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24992857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.245439149 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.249229321 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258595616 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.270291098 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.248116293 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24884227 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25141776 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.248068894 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246178662 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24862449 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248509774 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250048068 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24817555 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257073128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267846415 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254184544 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268481976 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249571149 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.247615952 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251199268 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.250303582 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250977359 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.249581706 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250541685 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.249437205 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249447635 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252943297 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255192146 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248653487 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246977625 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251592259 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25077179 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255837986 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.269117921 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252968923 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258667849 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259651433 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.28218755 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27486127 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25227487 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250181838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260386705 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274174482 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256308551 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267430139 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248279238 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.250821769 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256102411 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281897453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.276353106 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251231272 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250830599 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250269178 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251320826 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251431024 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257924674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273618362 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251009579 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250797745 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262796487 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274500001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.251069026 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251566277 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250987573 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251757969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253084249 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261625288 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271246776 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.251920755 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251168174 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251983809 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253773558 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253236676 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249019763 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252454553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249195752 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253017504 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252726917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255913386 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259443197 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252007338 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252441952 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258028777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272403137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252493161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259694204 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.253632088 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252244254 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253471329 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257256345 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249600251 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256009318 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.261744384 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253469862 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.254471941 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25287384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.255141904 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262581983 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278804621 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.253110322 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.254668651 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.258240807 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265089737 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254283585 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254663808 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25422 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250830928 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250961056 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254869521 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.255219883 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254732949 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25350354 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254241364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252109964 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253852174 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.253825693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255480906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256434465 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25429413 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.255390073 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257197695 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254667708 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256201826 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260867371 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273404801 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256490913 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.256027788 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.252684053 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256183686 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255735307 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.255803277 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.253991021 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255927251 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255130621 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256258516 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256451971 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25592753 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255796326 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257084462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259387192 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255945596 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259401457 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255592841 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.25349804 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255783233 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257284352 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254123647 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.258023715 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255797343 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259521457 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265118868 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.256296858 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256629303 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.260399911 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256308859 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257025138 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257032525 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258396948 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.265835697 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257687727 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263146537 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27722183 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257046983 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.258275296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2575992 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257267362 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259117469 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26137036 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265448045 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269821956 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282874541 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259200003 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263382884 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.258454623 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.261061391 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.26192768 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259228417 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.258369733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258322849 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258076555 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2590911 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260154442 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257865026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256715554 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259546761 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.259842225 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.259694413 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258861175 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259401861 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260177279 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.257046041 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259928473 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260515688 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.259187269 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257291806 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259831886 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.259582171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.26158738 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26070132 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266216282 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.257550497 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260563445 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261905683 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260187803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.259087124 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260525366 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262390752 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259550927 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267528692 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.279602918 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.261728213 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266083684 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.279364304 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260097416 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.263167614 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261526028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257993058 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264674653 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270041609 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.261533093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260914293 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.2608625 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260433963 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262095774 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266619217 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278775694 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.260742271 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.261233333 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262402353 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261006544 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262083434 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.262025913 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.261805962 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263221253 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263578286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.262578581 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263012938 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263962388 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261983839 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.262151319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266477369 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270637341 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266943491 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262871785 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.264707858 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264390509 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.267518942 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263187036 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263409226 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.264354104 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275785924 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288391471 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270392409 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283315282 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.264781181 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268020691 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284166517 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265376174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264166256 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264510039 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263756505 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264023376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.261817709 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264128199 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264452505 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26508019 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266178611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.268114025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.263142823 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263265941 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.264017066 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264185126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.263770186 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262953413 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266003721 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267328362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264725773 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.264537067 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.263719799 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270774894 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285185384 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2656392 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264059192 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264844746 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264533291 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266532028 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.265971265 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267446961 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272729261 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26986985 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273722554 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266942929 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274427347 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265031053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270033145 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273385788 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.264214163 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264050878 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26561576 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265921257 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272620426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.285774861 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266259892 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269704743 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267024103 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266335118 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267194872 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265954767 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267741886 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266625017 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274486787 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.287075359 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27001564 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26929089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265770825 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267835144 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268769072 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265356016 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270737688 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.267223832 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26908965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266399296 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.26773393 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269760917 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267279449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.268810847 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267636039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26880592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27503243 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288707676 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273450071 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.268519654 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273838787 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288872297 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274375867 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289781002 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269074517 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266998521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.269367423 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267771058 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26825417 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268553778 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.269383813 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269990232 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271673982 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.269112602 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269197067 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26968828 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269996041 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268156481 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279434192 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292892668 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272049929 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273782697 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267243354 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271026645 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273073968 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.270070029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269157821 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.273458152 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279287588 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276715021 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269976218 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.271036549 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269351203 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271637894 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.270423563 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269714744 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270521837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.271692652 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271269618 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270216069 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275123808 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270683299 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271787857 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271002674 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272616464 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281098206 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291102478 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271716601 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270948225 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272152602 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271661422 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271215637 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272052384 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270819403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271917914 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273558166 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278265722 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278160658 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273714854 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271069421 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.27370309 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272812051 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273053675 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271689686 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.273195061 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273902178 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.273228647 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271898841 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272852662 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272070475 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.273238618 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27397783 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274558391 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274720646 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.277987049 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272221387 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272435606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.273986744 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273448439 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272307778 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.273928118 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279835233 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297212525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283533094 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281112297 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276726325 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273705846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276587087 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280538946 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.273262207 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272659814 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274784434 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.275693668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274210041 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276938405 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274165747 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280344848 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292553351 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.274529519 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282276768 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.294700906 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275152178 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.275023361 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278311408 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.275095821 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273331717 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.27546309 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273794087 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282509155 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295079013 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276397867 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276380525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273389575 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277009787 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279488585 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276523289 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27714144 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272782109 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275736867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277377337 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276219602 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274193201 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.276314079 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274996061 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.280643682 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.284121753 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.273738024 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277774623 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277208356 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276624615 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277340688 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277962677 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274485632 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274851328 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276367724 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277305908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278054393 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279454415 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276881928 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278215718 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278741547 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277102244 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27981186 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28726321 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.285179208 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274742952 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.277139348 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277521785 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280362204 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277640788 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278017402 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278230493 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.279299599 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278450049 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27847129 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278113614 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281348532 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293012326 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298671241 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277649207 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.279064295 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281189438 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.278939198 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276916302 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279590276 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280881604 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.282037425 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285602253 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278884577 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285100028 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297371955 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.280856203 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.283606676 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283243207 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.287292351 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281789381 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279136914 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281015647 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284779379 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295445374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278853963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289448968 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308290823 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300975745 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.281316512 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281502212 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279891777 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280476039 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.282247169 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280477258 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280430731 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281512348 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.282128169 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281971186 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286268127 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281434919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281196286 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.281678806 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280571778 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27973517 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278451678 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281210585 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.281176204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.281791916 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.281818167 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.281773472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.281158098 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29489195 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30706004 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282268432 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281955133 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.279887795 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285859286 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.286060877 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292729122 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289817587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282610342 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283030176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283620034 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281450481 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.280411479 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282558058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283598336 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282080574 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281334537 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294444376 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308367002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287563762 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283990883 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283190578 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283930754 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283143366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283040975 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282957099 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284065037 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285150006 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287540633 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.283505707 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284458509 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.287533986 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291441294 seconds)
  done (took 756.767943766 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282245324 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280759647 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282794735 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282254736 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280778226 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282359358 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283084167 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282068091 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282555041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28270016 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282815512 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282533373 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281853687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282209116 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282982341 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28242944 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282581488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283166068 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283246326 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283572503 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28369673 seconds)
  done (took 28.130652077 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285189895 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282817781 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282563789 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286314887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282563182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.286019971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28411167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285593222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286085255 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282526777 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286516449 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286063201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283636067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283848745 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283817281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286179232 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286946883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283804178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286971479 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284508023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287404628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2835776 seconds)
  done (took 29.467193004 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286500421 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.286500714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285873064 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283558446 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287216626 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.284418626 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287277659 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.28622253 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.287637328 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.288060787 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.286985899 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287424777 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293983543 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.293043676 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288792923 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.287865586 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.432501833 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.288165291 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288011645 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287524733 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285152417 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.292514207 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.307473458 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.286496521 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28666562 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.290342399 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288562257 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289328283 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.290177661 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289820789 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290807874 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.289074244 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287848702 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288455196 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287085996 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289996606 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292334938 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288305402 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.285969552 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.289537374 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299716977 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309162912 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289122452 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295202195 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.310267632 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.289265043 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292778426 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296542857 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286739338 seconds)
  done (took 64.56464309 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290023526 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.290657188 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287396751 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289345977 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290346469 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.290274104 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289210339 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290497472 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289571707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287525855 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290779348 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288867917 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288322522 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.29098557 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.290812851 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287735536 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287960693 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287726452 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287803472 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289000653 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287919741 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.29174536 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290313827 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.288983052 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292577562 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287628123 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287909508 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.292076719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289153319 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290054879 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.292718574 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292556877 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291787927 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289542971 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291002289 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.29309469 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293250254 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289766037 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292960058 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291115323 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.293250293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294513836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.294272055 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292224117 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29092103 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290953338 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28982945 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289257557 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291310842 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292932346 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293229437 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290197201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293582566 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28996488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292594424 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293253519 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290687697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.29201125 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294410715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290927033 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290918621 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293541235 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290058373 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293481733 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292764261 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290783726 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291396321 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293644703 seconds)
  done (took 88.98431593 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293217288 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293897054 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294417038 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293945332 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293890894 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29262994 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294532496 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292598633 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294137678 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.294340006 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295015848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294848984 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294805549 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294184659 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294607125 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295947378 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294826 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294807814 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295620117 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296243116 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296713971 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295467977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293914435 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295300155 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295545504 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294627047 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295753452 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295563494 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294783856 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295456566 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294926404 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295765868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296100863 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29540915 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297050418 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29595871 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296225934 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296450596 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296643387 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296279635 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297214614 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295316106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295102241 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296857957 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297624796 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297153962 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.2970385 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.298054278 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296477366 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296732423 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297460262 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297778737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29783231 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295838736 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296659736 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296680264 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295911371 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296874066 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297229316 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296429275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297983699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298020301 seconds)
  done (took 81.542404513 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297796926 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298585629 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.295209435 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294846732 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297725898 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294775348 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296707591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298616288 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298729999 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297571686 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297987166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294830078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295799943 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296591369 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296533746 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295606073 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296722201 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295930324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297524003 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296733955 seconds)
  done (took 27.145896286 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.296622506 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298285229 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296475579 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297018289 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298562493 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295669236 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299708732 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300704174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296974577 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300573956 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300026998 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300056277 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297410974 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297127065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299591925 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297020676 seconds)
  done (took 21.985421921 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297445921 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300860481 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.30075338 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299505808 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.299263316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.297518159 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.301255448 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297777574 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298236349 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299925217 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.30065931 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300186908 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.300887597 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.301962016 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297302995 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299920557 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.298939405 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298982431 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.302163996 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300320311 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299311417 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29851844 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.302425997 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.301192601 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.299465179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299411741 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29853909 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.299847402 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299456283 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.302243672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.298640106 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.299855805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.299872026 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.298498541 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.302462921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.299367535 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.302094679 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.302447603 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301963316 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303970221 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.303010683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.300530349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.303417146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.302065256 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.300089014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302830216 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299895777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.301303803 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302189149 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300738429 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.303360302 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.303250636 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302084358 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30450664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305060283 seconds)
  done (took 72.75281898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30426028 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304374591 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.301368434 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304399599 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30329726 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301437528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303619297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.301142217 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301554781 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304617643 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302958844 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305012766 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301619909 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304435073 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303196274 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303857416 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301538172 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301700022 seconds)
  done (took 24.670902369 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302100094 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302009589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.304023087 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302760356 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.303054707 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305431383 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302051598 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.305017387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304985135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302944641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303391054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304275637 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304807875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.305163772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304161786 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303223145 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.306348352 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306791767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302896835 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303686237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305841454 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30760544 seconds)
  done (took 29.909790685 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.304297652 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.304233994 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.306066906 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.32199273 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.324779673 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.328461907 seconds)
  done (took 9.108198251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31425952 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307124414 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304991668 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308012332 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30539829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30558689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304467968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30338947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307926393 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304718005 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306263746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308367283 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307343945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306299615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307569944 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307052876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304882956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303693033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306145976 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307716067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305726062 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307910009 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305091397 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305942959 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306182449 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304758274 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307552161 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305977354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30654189 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308603728 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308940299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305371229 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307832728 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306180627 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309963845 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308525792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305087313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308758125 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309861641 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306307545 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308404172 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308848286 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308436144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30599777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309493313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306835746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306855026 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306648982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306970648 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309447549 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309838089 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306819758 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310082859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310179284 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308904037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31040588 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30732263 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307041973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310719333 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309227531 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307072727 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310830155 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307077733 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307777264 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309792155 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30833552 seconds)
  done (took 87.535800674 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308757709 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308605742 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307952258 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308213132 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308099017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308622448 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307682013 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308557311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309662861 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308299187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311630012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308957355 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307257732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310074238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308203628 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309246731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309132992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308977626 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308041809 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3124968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310782148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310137165 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310610291 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309982859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309730753 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31144285 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309592138 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310935715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309023132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310236677 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309961798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309036475 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308911348 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309740756 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309589521 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310237392 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309890403 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310540258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310502129 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313123229 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30963695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312424969 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310864044 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309691133 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312102963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310163441 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310895785 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312311349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311433107 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311507188 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312404635 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313061434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312593837 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310261715 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312211737 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311218906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311945639 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311465163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311225005 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313826973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312054856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312215481 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316016423 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311154601 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311786648 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312265571 seconds)
  done (took 87.714197381 seconds)
done (took 1765.404569199 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.365545529 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.412945892 seconds)
  done (took 14.003485758 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478343375 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.431038296 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312255457 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.340098124 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314887969 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.337243724 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309675759 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313721663 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312000923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312770137 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312701451 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501798654 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.313629324 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.313404789 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.312656944 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.409261553 seconds)
  done (took 42.862323041 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343106345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319931905 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.438931323 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337542429 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344152316 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.518605594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375643842 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319237363 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.50108078 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.361742085 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.983007277 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343296112 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317767975 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.502449758 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.337794287 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517042419 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.580839906 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.989379886 seconds)
  done (took 30.659823563 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804210461 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.335347168 seconds)
  done (took 9.368479694 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.311174296 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.350904179 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.324471433 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.326755289 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.376760242 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.372524471 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.328782413 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.317267427 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.373454625 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.323277453 seconds)
  done (took 64.642268477 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.339076121 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319100095 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320052418 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316691044 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.311076209 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.328295228 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317810023 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.316540919 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.298426953 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.454161742 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32518237 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.327989827 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33861031 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320052907 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317460689 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.356254111 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486883261 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319109064 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316267203 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324321742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320102138 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41910546 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362842302 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318485299 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453033429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.303226314 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321452717 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325757559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.466702742 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319577982 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.319425872 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31929779 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322303031 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.945022062 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.814897637 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.330603258 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.362287889 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328667291 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318183166 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.476655539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322240286 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326430346 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.32657689 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.807285201 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468466795 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443523321 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.609596248 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339549349 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321875396 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386581393 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322622479 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.321680366 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35236479 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.101783152 seconds)
  done (took 111.583362049 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.369412645 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706833395 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483100888 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332419091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.984049149 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.008088187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.332373242 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.626346716 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.349726383 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313500063 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.653316483 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844070952 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.335083382 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.342109029 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.318870548 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.331613508 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316638465 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.109878055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.334228111 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317941903 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826529537 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316256915 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316954593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.475228663 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355841141 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793438189 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.889692246 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.804902761 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338985695 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315831552 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803708077 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332912722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.339015723 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320246507 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.588849225 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.699782073 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69388649 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.338527531 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352344679 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320378396 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.350111859 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78919145 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700334505 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.336550679 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316581769 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809043027 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334964043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.324800077 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.319451684 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528296713 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.200081929 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319053114 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.872038162 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317374486 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.697834311 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320411567 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.390378586 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823820008 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348377623 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.428644239 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3616969 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318858724 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317306919 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320935754 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.318888052 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68969571 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.573297429 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325796251 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688838745 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817252137 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.342795276 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86898777 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.237985909 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.333639012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.414068191 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329674902 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.890641293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834800262 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.368409084 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318160204 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674548966 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.337518322 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.652652656 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33678244 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339545593 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84782668 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.334700999 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.346838019 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318888113 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.350344665 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.95329485 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322329167 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.619168556 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.351047231 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320963211 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.32047899 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.333971071 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320920328 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340320326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.321852859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870335907 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.342495195 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.309730075 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345290158 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321449255 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320329178 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.321813565 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319804656 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546084762 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.797605832 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.347051422 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32049497 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.32030801 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.341529003 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.493037695 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.322430002 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.652300709 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342710384 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321620837 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32012875 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.033612006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375621192 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321314941 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.32297774 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.252340742 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536684047 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.341120839 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.322505292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32246803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339143954 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.722690182 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349706723 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.369854612 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325927221 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051402445 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.370049475 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.332229562 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.852700493 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329388039 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323369867 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331330403 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323534994 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61685181 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.601258914 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.485372658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32289609 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.339921591 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.021324665 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.389339362 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471935236 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342698384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385396426 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522861545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690645193 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325335993 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.975564982 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325559898 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548749797 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324922444 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648665144 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834294369 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341992979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325286468 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.048580022 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.037221713 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.99817573 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.327060378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.660700498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.32809066 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.808229415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324607445 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32614007 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.773865333 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326822158 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331033711 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.325312744 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.325988057 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.478696271 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499623785 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.656013546 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330232101 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.798943494 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.376667637 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324800446 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.349406331 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.3248129 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.677576055 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.420772914 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.325091037 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35415861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.328678099 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.334303165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82521943 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.296506639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.330818837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480669262 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979855012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.343372391 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326050281 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.970476041 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.655739272 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.860057734 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372854847 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.65862568 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.354084117 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367278903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940133774 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388887003 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824392931 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347505562 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.327078258 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941605216 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.346115593 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.676596512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.326698588 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328660603 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903191416 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.346959032 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.334125042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.660372893 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34712688 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601624677 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.327754521 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.371802273 seconds)
  done (took 1110.469598657 seconds)
done (took 1384.818076084 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.328221694 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335719101 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.313326709 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330481365 seconds)
  done (took 26.55357194 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335831835 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331343673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.332701228 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.330963331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334410211 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331899389 seconds)
  done (took 9.242581728 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.409940277 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.332363213 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330609199 seconds)
  done (took 19.315576454 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.55140089 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.713175646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.717372489 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.741545727 seconds)
  done (took 10.969770666 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335199876 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334288762 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.333974563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334759468 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337801896 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.339358027 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.3354543 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.334997864 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339033474 seconds)
  done (took 13.269071583 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.613450729 seconds)
done (took 86.211415161 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 5.65655741 seconds)
    (2/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.54084161 seconds)
    (3/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.373981357 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338716257 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.358856811 seconds)
    (6/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.32909998 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378284422 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.197202037 seconds)
    (9/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.468718933 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.372491129 seconds)
    (11/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.999041158 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.109794405 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.124638777 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.99663112 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.551483547 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.617648481 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.715573664 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.57866242 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.370319638 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.345620781 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.393482882 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355178875 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.751911706 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.371605397 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.308871741 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.132678932 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.348011253 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.312289514 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.312913897 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.336188617 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.375126657 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.311152094 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.476006617 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.374067843 seconds)
    (35/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412302498 seconds)
    (36/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355217274 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.394124393 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.678844299 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.216116959 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.309964475 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.050187708 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.460745063 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.861476558 seconds)
    (44/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.199131701 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.326759507 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.468883508 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.348438656 seconds)
    (48/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.020848002 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.316894906 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.43914659 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.572709108 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.949479722 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428685835 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.013023368 seconds)
    (55/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.729192853 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.796000692 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.469793428 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.817891087 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592621553 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456234672 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.324367321 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.519571696 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.128314917 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.439609967 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.414270832 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.312378757 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.312717732 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363495671 seconds)
    (69/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360638029 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388678046 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.32161786 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.750216297 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.3124297 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.989637962 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.761366469 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.331883091 seconds)
    (77/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.931583459 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.33317913 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.376998445 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358893384 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.313166943 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.31463791 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 4.469124971 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.596014351 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.199169803 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.314019703 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.319454294 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.312930546 seconds)
    (89/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.448674599 seconds)
    (90/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.451998426 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.79630003 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.35318499 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.340557981 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.856272463 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.314204905 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.475745471 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.76832355 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.169165405 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.345169554 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.379485545 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.177013893 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.172208063 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.37218008 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.316234188 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.314122927 seconds)
    (106/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.601524641 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.539878534 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.313988713 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.388387931 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.342313746 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.31680628 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.55832097 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.33953019 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.34573921 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.356230569 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.375713211 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.356387459 seconds)
    (118/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.329368292 seconds)
    (119/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.756098026 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.335313453 seconds)
    (121/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.885973254 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.34836461 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.858589926 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.37662385 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.157629577 seconds)
    (126/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.345599734 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.619084614 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.370448769 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.332912663 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.160144623 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.595075462 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.526827351 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.315346861 seconds)
    (134/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.465704857 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.464240772 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.83827094 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.992713194 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.758761649 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.334473837 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.501016117 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.407415451 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.326795847 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.652759255 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.183940077 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.443998167 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.364269647 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.406775363 seconds)
    (148/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.524841747 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.18258728 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.338613576 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.740614241 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.338053879 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.331648414 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.444043153 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.360462247 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.157883384 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.353074495 seconds)
    (158/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.957421027 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.317973913 seconds)
    (160/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.3393968 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.89027371 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.449816966 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.19262143 seconds)
    (164/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325567487 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.443395713 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.319247029 seconds)
    (167/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.750625967 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.348983228 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443052895 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.7048788 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.355606217 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.761949719 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.546794962 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.623616271 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.351572585 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.047483699 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.334728201 seconds)
    (178/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.745193178 seconds)
    (179/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339564772 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370340878 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.389397095 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368029542 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.786751794 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.937563514 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366867138 seconds)
    (186/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.319924891 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.399219385 seconds)
    (188/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.127777692 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.25752047 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.430769177 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.267079911 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.320774294 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.342165985 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.344292498 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 5.373846226 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.564335126 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.39794672 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.741226647 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.386107066 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.34026488 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.339368978 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.094782202 seconds)
    (203/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.363660831 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 6.347238803 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.339907112 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.367431578 seconds)
    (207/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.783067232 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961761059 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.222960624 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.557567311 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.977513306 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.358211954 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.324929157 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.263489864 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.602320982 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.368193554 seconds)
    (217/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.62306499 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.440212185 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.447330331 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.365340964 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.161440627 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.646335027 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.575717548 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.401177315 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.340925152 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.793408523 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.402677892 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.336325155 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.327437538 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.362294284 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372378801 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.367727435 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.281966217 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.342796484 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.049793803 seconds)
    (236/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.32156235 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.746679189 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.842910627 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.339250799 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.364633898 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.363549731 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.066771175 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.967029024 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.344089044 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.905204295 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.328166875 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.572418393 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.446524213 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.324908047 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.796014326 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.389423557 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.428661268 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.429290714 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.063209388 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752622946 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429052642 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.446819626 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.351591294 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.87724064 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.344176254 seconds)
    (261/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.361399789 seconds)
    (262/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.329369561 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.450684696 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.62884121 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.093621315 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.215308316 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.429114327 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.711157756 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.476273777 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.673237492 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.350610242 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.990035743 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.90532824 seconds)
    (274/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.750397364 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.942488668 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.326229893 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.364460929 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.326003073 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.463717697 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.986499588 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.333124169 seconds)
    (282/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.0464916 seconds)
    (283/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.090023247 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.449839807 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.414574556 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459907299 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.340587865 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.953639851 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.455066925 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.071796087 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.346502241 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.139354567 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.448236021 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.344222879 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.408528689 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.054581236 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.046481801 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.438693199 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.934716857 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.362483523 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.519525678 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.364740847 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.369584135 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.285140123 seconds)
    (305/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.411945971 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.346321862 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.303361616 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.366333746 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.33974109 seconds)
  done (took 1048.318991671 seconds)
done (took 1049.566846465 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.380954046 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374045596 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.359021687 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.379289364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.469785942 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.381896205 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368909052 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.361616606 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405651101 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.408427307 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.35819482 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.380042356 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.359566205 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.359402508 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.358755499 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373696282 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.487579128 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.360430307 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.376653083 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.370566788 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.374970545 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359008035 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.410179448 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.382380019 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.36504435 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.363172433 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.362293274 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.379098565 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472251298 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.362978661 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.362483978 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.371796234 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.487415335 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358497333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.356324872 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.379429921 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.3713458 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.368668388 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.364926828 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.392537349 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.93538491 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38040129 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.361956588 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.362850349 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361778019 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367257786 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.362023968 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.36932141 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374647965 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375068141 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.921032402 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.395788897 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.363704051 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.363535426 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374327749 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361103764 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.366618745 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377517387 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.381359058 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377677277 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.472669058 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.368944593 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.365304984 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.378451549 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369196252 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.955381658 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.378089582 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367517626 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.928956485 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.388723445 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.95469995 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.391434397 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.365166439 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377823179 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394844204 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.481582871 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.358824777 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.364069096 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.371096331 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362964584 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374498008 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375678151 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.368875984 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36555489 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37673836 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.387266805 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.375236115 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.366170567 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.374063424 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.384443104 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.371103008 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.376167676 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.368857789 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.360922209 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.374706914 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370202955 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368403551 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.367752017 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.370240393 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377121105 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.924792493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400294224 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363116418 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.362313837 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.365974078 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378397763 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.924625153 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.386552429 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.388072234 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.413141455 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.36873941 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.472536417 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368683866 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381663161 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.374506058 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369258365 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.363071519 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.472658256 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.920220587 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.400790897 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367898047 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.364794334 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381752929 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.368968876 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.364773882 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.486481667 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.368455714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379964153 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.48733532 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.377551686 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397635708 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365016713 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371056435 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.388843752 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381887604 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398667235 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.3709667 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382626002 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.38409312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.362991986 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379500542 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.380385558 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370811639 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374715754 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.362591463 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.395825415 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380477259 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380533574 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.38990765 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491189396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366722697 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.477444618 seconds)
done (took 231.876423696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.426662636 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365396177 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458798246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.364067947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468068292 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469694522 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.362922021 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362065626 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.363926979 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.746322163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.363648276 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.362919375 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.360187891 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363136557 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448190903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.364061574 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.36340061 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707629261 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367000748 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437296622 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.36170505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.362341527 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.365650592 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749377604 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.357859685 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.361682683 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.435772197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366604578 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714184319 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.361113851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.364740071 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.714058709 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454878917 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.383866967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376961992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.373989571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470938262 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.386070435 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.448426939 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.444814962 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.460453995 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.405249738 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.358868903 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.360445069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.368128292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.367662704 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364558811 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.393276036 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.360538931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365707744 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707777534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.375776353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.375077154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364697088 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365048531 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.387748535 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.365567259 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366501109 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.45722026 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.368119388 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430710946 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.751379314 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746775353 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.367756509 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.365739292 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.366702635 seconds)
  done (took 150.623757657 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433457683 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.439395682 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.486043297 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.388176937 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417366275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.49012456 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.38761504 seconds)
  done (took 11.318922532 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373981032 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368859861 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41946698 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431301643 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.3697998 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516339029 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36872325 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38106243 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366803186 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.421997973 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369513346 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370442469 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376662173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.370416833 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.417146268 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.380617251 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48415046 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.370621376 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.370766203 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.525254328 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367380229 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.378406272 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421812378 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.381098945 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371405691 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376078458 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941018458 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370130159 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368792446 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.371275882 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367945136 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.408806366 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371495612 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.362561092 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368211364 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.488235148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.371106399 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368926605 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.372418711 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.364007383 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37103364 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.371813976 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.372753489 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369607162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.371374472 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392431511 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371624156 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372242882 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.372419125 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372421655 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.422995717 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372452668 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.370296652 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.369519019 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.428559039 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379892325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372392629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36875595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.373594202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370703208 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52860397 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419921034 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.373296606 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42099485 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373017767 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.373441575 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373154847 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.37304664 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427751714 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373066411 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.433768353 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.370514394 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.527235574 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395922628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374503081 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376325051 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37571745 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374915345 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.373552087 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.378489197 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.373133854 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.375283035 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.379896301 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371092405 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371908422 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.476684376 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481773878 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373077846 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388179703 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.380766967 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.371920391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427515537 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376545308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371833096 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433518411 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489905123 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.428068064 seconds)
  done (took 156.981241623 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380224283 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.382007783 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.376062971 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.390884411 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.375311614 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376021731 seconds)
  done (took 9.562984021 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37716455 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.377523632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37589778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.375428535 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.375788367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.376065415 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.376731774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377718621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.380509096 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375419886 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375977371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.377318531 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.377460948 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376060456 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376866413 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.375482988 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.376637528 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374457074 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.377630468 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377868678 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.483766601 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.376245613 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376136214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.377693976 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382018917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37872347 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386643117 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376230801 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.377888444 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385186099 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397836274 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377637816 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381649019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.384092209 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381808223 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.378993636 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38179472 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380246932 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375114179 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.378264362 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381097955 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378616044 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37904875 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381180201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.379824793 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.384404808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383441366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385804876 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.380252188 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.380217441 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381389548 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380836786 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.379789594 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.382099977 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381590583 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401786341 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.38617305 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380554892 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379880882 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.38170822 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.383023009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.380318664 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381159648 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.384862688 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.378637921 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.381964995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.381538263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384379003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38118988 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380075873 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381676022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378245565 seconds)
  done (took 101.766285141 seconds)
done (took 431.528572587 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.522699638 seconds)
  done (took 7.811691373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.78263521 seconds)
  done (took 8.075087359 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.667728615 seconds)
  done (took 23.96443586 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.467447134 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.380692343 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.387789726 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.377575727 seconds)
  done (took 26.901630298 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.55948453 seconds)
  done (took 7.848380205 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377079022 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375372385 seconds)
  done (took 14.042859783 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.630917549 seconds)
  done (took 7.918163389 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.376608751 seconds)
  done (took 7.673025636 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.389582968 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.401172109 seconds)
  done (took 14.094443133 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.353936794 seconds)
  done (took 7.642011544 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.518611323 seconds)
  done (took 8.807639231 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.380297066 seconds)
  done (took 7.67052638 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.37357087 seconds)
  done (took 7.66273193 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.077252031 seconds)
  done (took 10.366366923 seconds)
done (took 161.767882497 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.851738628 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375111047 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.373381112 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.373669268 seconds)
  done (took 27.264097099 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.415689363 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.416366688 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.416536671 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.426058833 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.423764026 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416245529 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409381806 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408877493 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.426366709 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420788494 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419181096 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.418354282 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.415054275 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407603781 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.418481531 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418901062 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.427476289 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.417914895 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407634497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.420265373 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384234208 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.426497484 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.419838657 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383406581 seconds)
  done (took 35.254899207 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903727285 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453270324 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.536145432 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43473112 seconds)
  done (took 7.618264137 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435118924 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437558586 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450839572 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.486796561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.530584011 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446679923 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.409640156 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406986851 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392226445 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43660852 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512787183 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.452454798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.574820974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.385419365 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579527811 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.384800579 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384687984 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.435992081 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488621572 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.503425022 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.386303371 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434925712 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442012436 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.455799467 seconds)
  done (took 36.145072376 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38559008 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.40374194 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.384704404 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.383356832 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393182949 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.385556443 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.384608106 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.386021739 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.385769177 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.390660699 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.385525195 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397788691 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.384030265 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.385494736 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39225484 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.38717275 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.391542039 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385204724 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.385096438 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.392314223 seconds)
  done (took 29.06292314 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.377765407 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.334079706 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.729937871 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.635211498 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.379645318 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.385256578 seconds)
  done (took 29.13437354 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.464853956 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.62438693 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.387433652 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786796041 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.881189845 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.406609269 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388367052 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.649335846 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.017525514 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01714161 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.454916528 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.45979791 seconds)
  done (took 20.832204727 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.384868206 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.380219771 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.390829727 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397711844 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.446160246 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.408706533 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39330828 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.380539589 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.454051152 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.472034399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410448405 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.448056918 seconds)
  done (took 38.261355099 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47633976 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431937095 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.471760291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230709336 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105121165 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594507027 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295034976 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.835833677 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388957163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656637296 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394166315 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48073227 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638625208 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392600602 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385745375 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.462626311 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63030189 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928697724 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386168073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62103873 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409695737 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386342448 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.802486942 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416202877 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59464848 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359583808 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.644204444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.161339242 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698710495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396431536 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394531725 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383727347 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658260403 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079510053 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50043389 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394218909 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.097045391 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.932702693 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.376844401 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.702772002 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393285788 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386709077 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394815894 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384512092 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319265487 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384051273 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857096025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394982862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.096239564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384936195 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396396557 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479749379 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389543447 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.955937052 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414462163 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392452912 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.384898133 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391486074 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9533601 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100613554 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397157537 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.328029333 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.780208514 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635660292 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070556665 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.508095203 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.3909467 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390044228 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320230205 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.69045818 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402368635 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53277907 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411249521 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03731054 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145246466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422833542 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319279931 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986181964 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392903726 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.328675874 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614758641 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163947502 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323590449 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.333455182 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323253014 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176109986 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397362146 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.911563728 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397974887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833164877 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.403140057 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405873774 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411610041 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610976712 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.266638131 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389126631 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.401089756 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517959002 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408719054 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.824974664 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324935614 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.391344728 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644178054 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599955418 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399949065 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.477629759 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626514946 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407890124 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.416134252 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405668258 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.404779188 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.016951783 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419259424 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101103664 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407136365 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16506767 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239153248 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401996568 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.497776154 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40423629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655282086 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229703839 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273060354 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457904005 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394814912 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390429663 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.732237683 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24183871 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.272925656 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.388256474 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393690188 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4079025 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.390997897 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336631309 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.400183177 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399484108 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.169481007 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613842268 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407081559 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673540632 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326939627 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538008567 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401890117 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614755892 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.703257543 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.411111103 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652593375 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390909365 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409535157 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40740828 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41095147 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48901893 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414565843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.390666317 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654673151 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.396073267 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394564559 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.74395893 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174547699 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39295291 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.397889556 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238117833 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032137689 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389978878 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397013426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28451706 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.406947805 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459632201 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400214953 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403816115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.424774996 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252327652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400079217 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393697539 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619004178 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404682926 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.674634136 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473728785 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.603361077 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033646476 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427340885 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.328203973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.104880305 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.087427855 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39318174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.590729817 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393280542 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403661219 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404762846 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.925342855 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03388656 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416831283 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.6744706 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.401063698 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405725426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.399835075 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395013658 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.403151218 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154427927 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398185874 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.412757178 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538803485 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410112246 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330284116 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912229908 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401127054 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396659452 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.172695194 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43024234 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.670996957 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883710986 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657640068 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.096729397 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413985491 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.852112262 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.431246831 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.395570162 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411365361 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40088268 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.404058182 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426869462 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407232272 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.687180813 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.836453444 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961987097 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170096209 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01388694 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422131788 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.405439712 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.299571846 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845966738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337076532 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.053965043 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605915168 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86527094 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343375533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613770642 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.715757214 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260647817 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409163528 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626094494 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399326952 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.400496817 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41029092 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610241383 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432908529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407570891 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331842089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.677455195 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641426934 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398552834 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478392588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844133611 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405286705 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.178155828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.397075669 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.843586456 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610971118 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035634946 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787576577 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397560336 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429642395 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884551326 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405008101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925770756 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071233416 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421537212 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.621489825 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343279263 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41111403 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.410406733 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.395262867 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.901650955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.397301102 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.653933015 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41056075 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334984846 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409152251 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001509804 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.277133545 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407205867 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400924086 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22943143 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403130262 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723112816 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403360784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.397866003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422292298 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335823477 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335939575 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.095514044 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411442957 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376683674 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962700938 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.786829044 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.412848281 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42925556 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254476981 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657255843 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.415749611 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042087733 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647412052 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.217718619 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428056421 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.501415904 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401486262 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.383478952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.283815036 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639011307 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247883988 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627661707 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.527547026 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.304365256 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401232845 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622326616 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.285019202 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404485266 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669640039 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.13453221 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.418925958 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188334941 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449060164 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419241455 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41504398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.802943156 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41402098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474010978 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41494102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.414596955 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414505482 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588611577 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40388627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407265148 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419721671 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498220596 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.156407544 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.400925975 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177626331 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049599064 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209751164 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06792326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437745894 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404617145 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406547022 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339843955 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552746269 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931355386 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678095682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535068172 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.983203304 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430616001 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413422661 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419884877 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626176347 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680925767 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276479516 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415709475 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.072156391 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.565151283 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417355061 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.617555804 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966114442 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03106046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527209618 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409148213 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.853068167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681140887 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499032596 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406229606 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002130838 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.430646925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.874416274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.434512082 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421880127 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555894647 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416782383 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109770429 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438312285 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.567465432 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.180294058 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793175003 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665294885 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.943849484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41968743 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054388315 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199301805 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671077948 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479363921 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419055945 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510557116 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553879456 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.408282362 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305775011 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408877223 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258965451 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.120194986 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418626673 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053242373 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691407362 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.406109736 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.407794431 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432726917 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.418446086 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632230309 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198352278 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633668935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418607112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417409295 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.980888324 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056499651 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440862566 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343338039 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.414522323 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672062384 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667680341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434169098 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.863641075 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.121356625 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017105756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.387506686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430914733 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425275152 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182850069 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054646952 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.435205617 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970996311 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06941717 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411364835 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707095003 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415668182 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410117062 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691277848 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.414024629 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409413992 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444867123 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056944618 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28356568 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.412154269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759993313 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.34967403 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.637490143 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068228868 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349158373 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414613819 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.602472182 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414618071 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543027257 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424926482 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.409713941 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416396711 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.171508316 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69714569 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.418633258 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.401426476 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.39809862 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414667662 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426291557 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659817961 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418041509 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.08831212 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.764869437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667422558 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427039127 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.394236374 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.417455398 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413198066 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13063424 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383738974 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.973809949 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038595995 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.428782131 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.427885551 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417064356 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.631857651 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626211491 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426776161 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42729024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419420928 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431667834 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.314692235 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180691298 seconds)
  done (took 1627.672247409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.469660772 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433802815 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.426357479 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.456310608 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438071111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506223235 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.519469667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.551169324 seconds)
  done (took 53.126302953 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.416875715 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.57589739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.447180637 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.417222227 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.425522095 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.430984875 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.926110401 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.434811398 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.42566698 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.427422802 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.431405275 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.41662063 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.129958622 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.42474691 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.41856023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.409156472 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.425799454 seconds)
  done (took 66.919225868 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.415287232 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.935541322 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.483964395 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.416575182 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.003788546 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.436948179 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.908942882 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.44577754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438095857 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.434615105 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.075033612 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.425902773 seconds)
  done (took 81.749583141 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.42507545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424808738 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42512789 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424367805 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.424329436 seconds)
  done (took 8.451243523 seconds)
done (took 2062.784759372 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.762081714 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.199346081 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.129591461 seconds)
  done (took 5.657072657 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.563352345 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.612755801 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.788762554 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.755166597 seconds)
  done (took 8.046938159 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.69836754 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.782735771 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.598669592 seconds)
  done (took 6.405859426 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.002859176 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.416773579 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.562707994 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.415013555 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.425150434 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.422650569 seconds)
  done (took 20.590451261 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.421272753 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.424920348 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.419599507 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.424530445 seconds)
  done (took 7.018382046 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.398201082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.133199199 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.400857092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.420297799 seconds)
  done (took 18.67954697 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.166403108 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.180381609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.164333184 seconds)
  done (took 7.839574082 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.431328829 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.268964982 seconds)
  done (took 10.0271908 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.724949057 seconds)
  done (took 3.052618753 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.552021461 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.749538655 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.559233156 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.495117361 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.587422379 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.764293957 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.270790796 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.800243793 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.473306201 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.878296134 seconds)
  done (took 30.459517389 seconds)
done (took 131.851555512 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.636307827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440367919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.628875533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.609024666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644493291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.629241729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.690874538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.572437723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.114364537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.10380467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.607608493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.647904448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.650354055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.442371307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.647776611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442199926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.648338529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.683354756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.292857441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435171105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.70018997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.249402804 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.436924842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.43477032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.658717874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.582318695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.825206885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442284882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435467807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.846997504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.582072872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421039236 seconds)
  done (took 198.513491996 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425880266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420349346 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.419662255 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.431971403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420381167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427707384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420915791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.44039137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430763866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434091223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.431161304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.428035125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421141766 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438871212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.442201166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454095065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419639183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420722724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.421201623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43783499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.421569934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443875707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421914207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.43585365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426944598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436971353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42232712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421147755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424474405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42096939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.422820539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.442399643 seconds)
  done (took 207.059838451 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.435060489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422413942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421533494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422621339 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421772675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.421646514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.422061455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.441789556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.440422047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457710316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421689812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422954259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.42465473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.423179714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423457445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425936049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.432097049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.422963746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422875235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442567028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422940252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445344529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.425015485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.454370136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435785493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42505312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424499107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431020508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426252804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.428696927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.422985149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424020494 seconds)
  done (took 207.068706622 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.621807828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.431926373 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432460785 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367606064 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.432672085 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433006605 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.428867395 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.632954072 seconds)
  done (took 15.115999956 seconds)
done (took 629.088690826 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.839400443 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.542710425 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639511181 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454383367 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.279510253 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.473832946 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.453288406 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.6364316 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.374507033 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.643761041 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.798855579 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.469783509 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.951315096 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.450948838 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.715908929 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557491876 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.410750081 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.530413032 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.788537171 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.048563337 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.725758014 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.987390063 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.65457889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.378927886 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.975559357 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.987497459 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.23275381 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.388053128 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.472504171 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.791441009 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.244940417 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.541063631 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.522974606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.518323221 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573398479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.556638086 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.471919017 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517168124 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662238379 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.743328822 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031512747 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.191060006 seconds)
  done (took 97.566223969 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.416622381 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.419711366 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.418910915 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.419912903 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.420487598 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.41872342 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.419107579 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.418470367 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.419801315 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.419050582 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.419268382 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.421905995 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419318216 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.420723799 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.419025228 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.41829346 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.420838334 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.421926745 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.418892085 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.418706926 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.420037687 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.419843584 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.42176928 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.419488484 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.420496381 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.419546354 seconds)
  done (took 38.249584742 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439011156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.705501551 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.875395847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.4463631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.439788706 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.44418932 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.526827107 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442149221 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.442994182 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.441841833 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.621286274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443086617 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478031121 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.908513896 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.442881171 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442457634 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.449052221 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43971561 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.713372432 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.44936611 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551482083 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.442235299 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.527668519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.450392614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465953348 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441976498 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.446110529 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.969306967 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.463162755 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.621340433 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.357528711 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.533256287 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.922417709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.910703788 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.359889395 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.450641814 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442587549 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.624015116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.443646883 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.442387405 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.52715425 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442115493 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.892233143 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.085739409 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462894336 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.443445919 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.990904138 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.645315585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718141079 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453186219 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916792225 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446339664 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445910635 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.445184103 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.719723946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450646338 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.443452795 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.997470238 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467450655 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.530233918 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445243083 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.443514136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.719769906 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.443610712 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.710648531 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444727973 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.452077074 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.465773244 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.88981472 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446710503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.110377252 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464939089 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.446030021 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.62249854 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712150003 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029794928 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.468630255 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.723418483 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.938092488 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.549262356 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448779859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.975532844 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.554034868 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448460471 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448237528 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448985228 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445218358 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.502996515 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.529670302 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.036329493 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.120123132 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.01953607 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.553872365 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459236249 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.44734614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.001245822 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467090537 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.446229255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.888104645 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110664166 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467692201 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.45440594 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.114923231 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469468798 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.533782112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452373334 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.89885806 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.448899132 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.503418581 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447896359 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454616173 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.470352508 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.535124712 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.450008134 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449349988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.083567166 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.654361079 seconds)
  done (took 190.096499303 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.451047995 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.440576724 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.442186718 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.440138334 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.440201616 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446105212 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.441756648 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.43987612 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.446060972 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.439061714 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.441670403 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.44321784 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.44184748 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.464457652 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.452565668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44945766 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.051050142 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.443430325 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.442630941 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.441007651 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.267255263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.443102055 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.442323728 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.442828801 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.44213888 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.443468183 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.459441256 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.444531496 seconds)
  done (took 155.234300945 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.448741068 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078596995 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.469943718 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.59604997 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472649405 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.447405746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.594950877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.514790603 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471418571 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.44887182 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.448230695 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.786484556 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.450713656 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.026563941 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.668655681 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.627903002 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.033139347 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.470386438 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448547019 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.449498477 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.597387777 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455268531 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.78775183 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.081743143 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.472009214 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.080516618 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434998309 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450879281 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.450404317 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.082383282 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.468917507 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.789261782 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.538138038 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517345227 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.103127757 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.047309417 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047011084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.623587163 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45859018 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448780098 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.44851457 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.435713256 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083899521 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.472701737 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.451664431 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.073447571 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472947175 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.454141588 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.459141617 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451070878 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51763636 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.538571818 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812959517 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.091717688 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.558012382 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464708187 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.60588979 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.859684249 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453423536 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.028190426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435033229 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089717694 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.474972986 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437130155 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452334487 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.457307407 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624563176 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.61156698 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.038168761 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47317726 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.031308217 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.645421083 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.456924994 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452667779 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.455000009 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0907814 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.051451134 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.645584818 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.610702075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.683208137 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444708385 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.454511106 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.437541211 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.539912419 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453633498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092250605 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.051276247 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.473213336 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.45392858 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.454945848 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455597905 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.656904716 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.1203052 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.560048478 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.021631294 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.814626802 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.797344739 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457714036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519525147 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.472746871 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.798742987 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457925788 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518857812 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.92087968 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.799891288 seconds)
  done (took 174.424560829 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.728343392 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.787603295 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551068546 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.595542399 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.095494789 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.056711877 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.767894097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.61148251 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.575766287 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.738386288 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.70820296 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544751214 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.664607023 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54051744 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.234145254 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.550187359 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.576310642 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607495529 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.580030578 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.545227367 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.128293917 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.779928486 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.650800166 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.498170898 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555342419 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.286887741 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.062976106 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.051005114 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638629433 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.919797081 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.033551497 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677698372 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.518420242 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.187270907 seconds)
  done (took 70.408699499 seconds)
done (took 727.317233343 seconds)
SAVING RESULT...
DONE!
