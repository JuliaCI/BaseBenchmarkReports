cset: moving following pidspec: 19591
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.368950405 seconds)
loading group "string"... done (took 0.605071061 seconds)
loading group "linalg"... done (took 7.503183126 seconds)
loading group "parallel"... done (took 0.175390385 seconds)
loading group "find"... done (took 1.196914751 seconds)
loading group "tuple"... done (took 1.836409731 seconds)
loading group "dates"... done (took 1.250461522 seconds)
loading group "micro"... done (took 0.232808668 seconds)
loading group "io"... done (took 1.054145328 seconds)
loading group "scalar"... done (took 42.062905371 seconds)
loading group "sparse"... done (took 13.400892088 seconds)
loading group "broadcast"... done (took 1.018556806 seconds)
loading group "union"... done (took 14.154128375 seconds)
loading group "simd"... done (took 4.726196508 seconds)
loading group "random"... done (took 9.539726705 seconds)
loading group "problem"... done (took 2.003738706 seconds)
loading group "array"... done (took 22.655323043 seconds)
loading group "misc"... done (took 2.059280549 seconds)
loading group "sort"... done (took 3.445166904 seconds)
loading group "collection"... done (took 19.472157911 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.566390408 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147052255 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121406489 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144539877 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193197987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134656982 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146420329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087370355 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.997044371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166913612 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143192172 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524289183 seconds)
done (took 5.212765745 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198927714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089375805 seconds)
    (2/2) benchmarking "String"...
    done (took 0.100269554 seconds)
  done (took 0.978903909 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06774949 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130229024 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0829339 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068935785 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067850428 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082924496 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068073263 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06728101 seconds)
  done (took 1.364188446 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075465982 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070173612 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.089074418 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070954834 seconds)
  done (took 1.099826819 seconds)
done (took 4.507248003 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.949693815 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.25658627 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194463689 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.492419732 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136174239 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194795218 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667769758 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315492687 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218631768 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103444049 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108510308 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397665607 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109452147 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668728629 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077613232 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.111558139 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162979816 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417749072 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084633461 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08472197 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106068887 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144064881 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104979221 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079082148 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172561576 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071863335 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.156882752 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09736261 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070342251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252307482 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192156948 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679720149 seconds)
  done (took 10.71571847 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101228219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12279313 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070458922 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144354195 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123337156 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072451809 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073278852 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086847882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095459763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.165863126 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119682975 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12632024 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068764361 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071629298 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105203938 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2340323 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094870388 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104059082 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073008194 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076445228 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1281362 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100595759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083435456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096609347 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154082034 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197156241 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102065324 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115054236 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070618589 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102354444 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13182649 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135455628 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067510956 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086143286 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162788524 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097317654 seconds)
  done (took 4.765587667 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119816432 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.179285096 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094088707 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159084877 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089347016 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133517767 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068091886 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099975336 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261102789 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103350953 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114136426 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.499368743 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115225966 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111283031 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087477689 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087752056 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071858862 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.08640684 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.621255196 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15018353 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123969243 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08751238 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091551443 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073756253 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361864207 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070456748 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067675852 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087562852 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061411222 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149443685 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069331464 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.285380816 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111913225 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07040454 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121964796 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1856215 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098140751 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128367792 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084980737 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067618271 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067304661 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174420674 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09312573 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067865081 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109827046 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121439247 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10878749 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086376652 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070372874 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185952507 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0679746 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103367921 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.955019631 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168885312 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079451099 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067714767 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299782254 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104465464 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068975635 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065678259 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298001613 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.165327003 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068690134 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086788908 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067578662 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086559666 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372139261 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072652055 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066429325 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088276272 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078852306 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.008410238 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072653498 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085361232 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075482365 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089801438 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08843035 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068154172 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087820709 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067750576 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083011226 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072458228 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104457781 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215960111 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070212326 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068694519 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084629846 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087201633 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11638054 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072002124 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084435191 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117681525 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07243906 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069512528 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123570304 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068159433 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106857069 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087249884 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1159448 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084987285 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.152819311 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069409319 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115427089 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074144204 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118283048 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10456602 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069956038 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159309738 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066278262 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083984496 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06875137 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083159451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070734387 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069484391 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103004331 seconds)
  done (took 21.981579504 seconds)
done (took 39.373865585 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315947402 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098148083 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09812063 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079121551 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098221171 seconds)
  done (took 1.554746125 seconds)
done (took 2.385157287 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.154140919 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104428335 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083700676 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100080192 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083669633 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104818125 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1200138 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083671958 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122298531 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065929709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.118446222 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064882656 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083101188 seconds)
  done (took 2.156999611 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084545847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086182658 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089823823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0822501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08237552 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083180754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081186804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109563999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082590429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09126151 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065414815 seconds)
  done (took 1.768617422 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083432095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084948186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088889871 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082324095 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081906229 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082203404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081224697 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104937125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081541766 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09173509 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066477838 seconds)
  done (took 1.764890785 seconds)
done (took 6.517037507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08110028 seconds)
  done (took 0.91008835 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.764786213 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.968205215 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.087806106 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139127013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.226122064 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.164670463 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.463187452 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114876811 seconds)
  done (took 10.969753364 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.116324242 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091273995 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074493656 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092092293 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072429046 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089208311 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071829242 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071621168 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090149479 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073557392 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090498131 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069775362 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091211718 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07191846 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090750547 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075921785 seconds)
  done (took 2.228783749 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106640168 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10665285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095508516 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078453152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094523755 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075205743 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096883674 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077391427 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092943289 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075687138 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095632005 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076038798 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093476516 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068833927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095993875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079800146 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09206089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078275797 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.096256383 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078708704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096123135 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067630949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09312936 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076671377 seconds)
  done (took 3.038643451 seconds)
done (took 17.978604758 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137585582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079152289 seconds)
  done (took 1.052458468 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085318253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101849395 seconds)
  done (took 1.029122092 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087187713 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084565565 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092444618 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100125156 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085842267 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070170218 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.108564843 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069989241 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084939147 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070263941 seconds)
  done (took 1.695851802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071923306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097866214 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074458246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.101797068 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076528235 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083527424 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07641966 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087888644 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081761219 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083044054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074799442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.104193111 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073442266 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105484084 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093366542 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071446658 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091540441 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069824149 seconds)
  done (took 2.362729847 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069593687 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068832695 seconds)
  done (took 0.982197427 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070764083 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064594671 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087310143 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069204613 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082563128 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064929841 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082881187 seconds)
  done (took 1.366447367 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422476942 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110732359 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272116753 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074615194 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10988149 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300622042 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069020886 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072321876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091550177 seconds)
  done (took 2.407406943 seconds)
done (took 11.734009416 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082352905 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087419688 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115581279 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454245923 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110711182 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068246222 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150239301 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220555468 seconds)
done (took 2.130441566 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130402101 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640556042 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420903361 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219863651 seconds)
  done (took 2.130519974 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.393957609 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093160339 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078942901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070069017 seconds)
  done (took 1.488197233 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069177051 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072054501 seconds)
  done (took 0.992612454 seconds)
done (took 5.586945951 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070117195 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068056861 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08300194 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068744117 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065622232 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084159147 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069111474 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067055878 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102233545 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.086049646 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067060042 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068308467 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087880424 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068435526 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065855269 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085115511 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066186365 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067123018 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084148722 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066222966 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081895436 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069049699 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065634812 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083474998 seconds)
  done (took 2.697796208 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090111885 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085946107 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074821974 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091855633 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07443268 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.094297183 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074962575 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067628159 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09181181 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070968754 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090610293 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072562079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087928414 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073763366 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088880788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074023711 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090881978 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070350364 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070424905 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091566783 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072650112 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087351259 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072600327 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092751542 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072657525 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091158812 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071030817 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.087213639 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075541563 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090014252 seconds)
  done (took 3.292827075 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074332361 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065748962 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084349681 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074446293 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065800226 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086803511 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066656778 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083505537 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067622406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066761379 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.086700214 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065865883 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065449428 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086216069 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0667977 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087369475 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084863304 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066003116 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084832258 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066887673 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08691019 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066497427 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066191668 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084825387 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066550073 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065122567 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085145733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065644082 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.084134797 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06777118 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069281198 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087836712 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067280551 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073476076 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0878453 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066637931 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069496828 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084731875 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067124964 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.0833972 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0665929 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065548691 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084199997 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074090895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065855421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086131316 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066116771 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084547195 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068076145 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069454987 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084433081 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066777596 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084971 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068556317 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069378293 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083230008 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067020671 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064145785 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086071317 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066414631 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083480793 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066291952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06801389 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084499052 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081748388 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072661163 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084620978 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067408848 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084955713 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069272444 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069422754 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098841469 seconds)
  done (took 6.251239147 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.125556573 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095466938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086704931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068146527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082527912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067742465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070072139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084756422 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068559817 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090942204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066549909 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08454748 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069487788 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081767998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084443037 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068386904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089692486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065028044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065831454 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088169526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066415673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087589279 seconds)
  done (took 2.617078597 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196317335 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091279887 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114324509 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096289505 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088825671 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077518965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08977747 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07387098 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072303445 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089624737 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070971074 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091315132 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069483223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089628583 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071188386 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089801893 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072626587 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088881335 seconds)
  done (took 2.492898146 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082261857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067930427 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.11063786 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068531728 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088463107 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0709338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09410079 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07792172 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089232682 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069047983 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095107275 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180978902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088405645 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069260115 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070600053 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086873488 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071128563 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086818272 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0773838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093333292 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07442038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096017057 seconds)
  done (took 2.769672636 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085532646 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069471143 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107135899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089384581 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06608935 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066159001 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094720455 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069390315 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093079004 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070271666 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085465153 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070131721 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073748427 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087717887 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074360969 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087118689 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071243986 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086767059 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072121805 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065252134 seconds)
  done (took 2.446423652 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091028424 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087582005 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071107527 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097494678 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070814776 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087879199 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080106979 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088383258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071362776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112831264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070543765 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088288282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079207772 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094172899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070407636 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097196769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077950589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098393076 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087917734 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071549414 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113445762 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07064087 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097720888 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070892164 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088350616 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070740686 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087411436 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07730859 seconds)
  done (took 3.236882385 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070392479 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069602401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084444442 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066930274 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0656836 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084304746 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066693708 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065701816 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08736013 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066265247 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085926181 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070247433 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069153148 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086290465 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068558878 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067742834 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08712217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066988089 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066197235 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085098098 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068377725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08558949 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069543521 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0661591 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084895819 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068097399 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066106947 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084748625 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067920018 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066318256 seconds)
  done (took 3.073554412 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07921552 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094422097 seconds)
  done (took 1.039537197 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066898015 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082469534 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085964561 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072746815 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092404373 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069819763 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096108818 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074007825 seconds)
  done (took 1.503561582 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086271118 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079887829 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090082887 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098673791 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082025094 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085629743 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162877423 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090208532 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076337233 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085891808 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083334802 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068315755 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094452156 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069198257 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094558505 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076279313 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083695717 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076871848 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071681218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086990614 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070601898 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099823281 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071459753 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084856629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071537465 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077459121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100645276 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070185821 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091710083 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076388761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093567084 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063482239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068113614 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08905366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067495223 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097914636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084553832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090936473 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079138778 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088980762 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081194597 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082890173 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074614043 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075031384 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098980056 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069693421 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089110962 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064896779 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083923948 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072947189 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063657899 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087872737 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064490998 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093501754 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073859801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079792234 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08757108 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070614124 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090670692 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073000865 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093563443 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071873327 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071448525 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0873761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076053547 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092167479 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079170359 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080647721 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063809049 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067154031 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09764363 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093168277 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094038941 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069459438 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088649283 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068005669 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071915344 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090299973 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074249903 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094973517 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06973578 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093834896 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07669781 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08732098 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073097505 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077461836 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086871595 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071331666 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085681133 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086565094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085598119 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066843156 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066709739 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099116504 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071414643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087512073 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066172594 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094650576 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064734652 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070135648 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089576722 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0699645 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098753737 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075699947 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093669731 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07892126 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.096069931 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069646886 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071726739 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084962656 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070600576 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086642482 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077353652 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0620732 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091246233 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070248021 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088426463 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078439684 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085420046 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070180827 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077029123 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094209701 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066913237 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083842789 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072909049 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068868017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093006943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077088591 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087118998 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064433362 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082487737 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073766903 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068736867 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091333106 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074520732 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092468964 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063984812 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085349316 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075574685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097895231 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070703661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068994946 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094910449 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070622438 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087161293 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076989364 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071290801 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088759581 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075352128 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089579231 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064757397 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091038918 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072627307 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066735312 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092504639 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073329761 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090059437 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070414896 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067476341 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094922648 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070076115 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087112191 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069335793 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085588269 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081410474 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070929385 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083393088 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066202187 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096366745 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067768313 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069012432 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088319988 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070936918 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089723504 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068216716 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069059498 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090705678 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080972936 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093068183 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069613123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093846362 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080539509 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087995525 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07209735 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086007029 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071920767 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069869548 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097791863 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074797605 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093202474 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07152724 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083813405 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076302967 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075808344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087739782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066871808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086323405 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073499184 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0929522 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073820545 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069957313 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087049492 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069594595 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092892139 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073467136 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067886635 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08823557 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074132204 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087299609 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077011659 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089808531 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080111314 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09115059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065679866 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073063226 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086628837 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074859378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08414035 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067672084 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06817679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.090671922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067916903 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09129593 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063491033 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075224051 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096622016 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069702485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088118439 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070215408 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093324767 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071572151 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072461561 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092089574 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07564255 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099738786 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068640078 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090094391 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081088997 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068268702 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082842339 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075346043 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085830816 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069403118 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068249605 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086024278 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072260735 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09671167 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076549466 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082033917 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071647899 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067815083 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088208211 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065285702 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09207891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072645324 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069496712 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095960674 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069722449 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088846005 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074052568 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087592258 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071504881 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069482353 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09105625 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06992831 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090969816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069614868 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090074965 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070285375 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067407003 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089981734 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070255156 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068364376 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095060315 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068832339 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089582149 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072041302 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089677416 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071313426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070055672 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088086636 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073425152 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089230541 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070105103 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071444859 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084121295 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077068311 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087783958 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078009719 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069468726 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085924915 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074891404 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091805093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074106158 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08842057 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071401313 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070257082 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088738539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071875542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095300433 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067107486 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09940758 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077980843 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087511066 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073381898 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068823226 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09067113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068575348 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069524768 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091185047 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068986715 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088727124 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074682377 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090537661 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070933704 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070970408 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089740444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069607126 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089222812 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064834134 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068002676 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088654504 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068832026 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098569602 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069591789 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08606856 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069289915 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069791132 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087860533 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0666802 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096141972 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07893037 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088815303 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077406894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067370948 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090799732 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079218767 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085969987 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068297407 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085946862 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068523853 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076443443 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090101373 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079040949 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08760533 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069250081 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066174326 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089703415 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068941343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082762059 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068001188 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072659875 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087280107 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069068584 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088721339 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073480571 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06901027 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100333065 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067937466 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08915073 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070140566 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085161238 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069736207 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068703536 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091800197 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07197204 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065949107 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086297526 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068647266 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089232534 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071264548 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069586121 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091057627 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076877537 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089343215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071673462 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091168041 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065592997 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072088819 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088785639 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069222843 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087469259 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073679014 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07284994 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090623405 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077418603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088248355 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069851963 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088874163 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068336718 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06789421 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08888312 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069994437 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087276657 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072337635 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077731225 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086585135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071978144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088735753 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070619092 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094714696 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070969129 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072570347 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096829277 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069558074 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090812991 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078285126 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091977634 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073970217 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069925573 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091657949 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075223279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088947185 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075779816 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088794532 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071520236 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070929359 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087588164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070651068 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088618196 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069667188 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076285195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091470233 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068063077 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087970559 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068770397 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069672026 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093288364 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07800921 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092234387 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072231834 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08299758 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068113175 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070550867 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086692915 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072046502 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071205162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095824798 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071956282 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088718187 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068758798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098373945 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076554877 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092103082 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068604801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073364201 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090627135 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072929083 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089154719 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070446917 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069957833 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093879832 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071434337 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088174291 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077909145 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071785406 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091461087 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070401501 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08962419 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070662756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064229191 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089757502 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071153513 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094105541 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072176434 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088445294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08002875 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066380717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089391452 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072586421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089219442 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073392031 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082458069 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071311041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070840607 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09015912 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065020537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087881191 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068244642 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071895185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088505813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065444877 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099412946 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079816855 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092204514 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06985291 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068851287 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084175646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065732564 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068996621 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090995992 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070492261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100158188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068207646 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08768993 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066247567 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069049147 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092298857 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073187447 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085897434 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065827906 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06707972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093492775 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075209035 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087550279 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070039153 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072676586 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092046122 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066932474 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093152833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066956479 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072695017 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103489065 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070110523 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090373324 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075724769 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098789628 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07048415 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084019239 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071173645 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071525209 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08954516 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069691232 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090224979 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084664098 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092184147 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069164348 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068094566 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092520017 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067966503 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097579464 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070162789 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089593916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075198508 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071125245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098613296 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071684935 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099257776 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072664117 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092640859 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068915419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089370642 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068949352 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067314171 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090564472 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071007946 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093970908 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07854799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087587935 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081844437 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097107312 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071392304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066157157 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088621265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069197913 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064915691 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091859349 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067461116 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088193077 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068850912 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068024613 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090786127 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075438397 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089660054 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071277237 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069547093 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083818691 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071249842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09159585 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071233937 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065957727 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090120381 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069946375 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092010086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073184429 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067094027 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092240884 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07018284 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089952779 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065343369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074759789 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090018358 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072198759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088178727 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070786338 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070808798 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093949347 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073913366 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091222788 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072225335 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099008142 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072032829 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086071767 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067910714 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074664799 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087150379 seconds)
  done (took 48.358464764 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111204507 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086340318 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064605862 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084419946 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078274762 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086612103 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065487988 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06516494 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086356113 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067972589 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085614142 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06487858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094640669 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09005801 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098593573 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088665665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066264074 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065764548 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085112501 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066397015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094926908 seconds)
  done (took 2.607683809 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089124179 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105247155 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08081673 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103595518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094983203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080311514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099278061 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080493734 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104291911 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096163878 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085388895 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09993775 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07567039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096362479 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076847171 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098564933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103379924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076241124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101825377 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079340996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098614757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08049477 seconds)
  done (took 2.916362992 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070994429 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06834518 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089612511 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064989818 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068215936 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084403004 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072579803 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086772739 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072020724 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06678097 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088766862 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067075585 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097605862 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068032456 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069067419 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086990811 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135593319 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072299754 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088846912 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071106438 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064202289 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092242947 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064630484 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084548242 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068283027 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071756666 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09029982 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067590807 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088847301 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069079268 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068449357 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086298316 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072145991 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068789152 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087240089 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067454752 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087655995 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069654684 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064071698 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086723575 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069319363 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08413701 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070847407 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070499271 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086633714 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067869648 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070810789 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089152594 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06371232 seconds)
  done (took 4.697818565 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090770022 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.146300519 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092694383 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127207473 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085205809 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098772937 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072991597 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12865274 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087052624 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069214002 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108053146 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083553145 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089938104 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073820423 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095475185 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06887159 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091051475 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068970681 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093982737 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069512657 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093657234 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075877028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105272579 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082087467 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094170177 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067459004 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090095416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073435069 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102831148 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094139249 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075312941 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.095225514 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086323485 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095366524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069238889 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090502826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084927712 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.090659096 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071866323 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087317343 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071906413 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094227223 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075977692 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107251775 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069696938 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093796634 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068902101 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08623783 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082916357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09208262 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077821611 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105980404 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092182059 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071332451 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073857347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10468288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088885711 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067826111 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071830098 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103545725 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.086142923 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074420657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104138624 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070752078 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097227116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083440652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095840811 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072956833 seconds)
  done (took 6.994451714 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080261451 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095564997 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085592978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105595976 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096271785 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077226723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096697145 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076747699 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096403188 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081472323 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096903561 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119769254 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07101911 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099676411 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076044222 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097578943 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075169629 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095782274 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094682212 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077449947 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095577319 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085590392 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095696583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104945562 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106001695 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091727382 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075697571 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096611563 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104404892 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076905577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108936232 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074424209 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096976358 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104252217 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088505606 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09698044 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068167624 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096385538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07418392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096604919 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070453358 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105541843 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095114511 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070761951 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096134617 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076534337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105470462 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.109110543 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080722067 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100915011 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075828169 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106256643 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095659524 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07674235 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105461144 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130363725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084899401 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105734328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095515379 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085708359 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105566739 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.113097921 seconds)
  done (took 6.645500495 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092766563 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099639931 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100164085 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065767455 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066735142 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094888249 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067355857 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087013467 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079987716 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098405537 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080937693 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094111733 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076529283 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101933628 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093779935 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077284581 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093746805 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073623637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09916429 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073314361 seconds)
  done (took 2.635096311 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078850363 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106918244 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070806106 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09538036 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073874191 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075667429 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093272475 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071761339 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091036199 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072062357 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101472107 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079406442 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091019861 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075536787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101712974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075297045 seconds)
  done (took 2.275939527 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084502578 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101899563 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084950956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091335493 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068619332 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086514838 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070405858 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065003806 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087672633 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083825567 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091941021 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07157381 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090467525 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068249433 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065771009 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094156675 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065298551 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088286032 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069190569 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104960317 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080444289 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089469895 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070619625 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092686925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07037672 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094693115 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071073634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066696804 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088926938 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069460465 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090154034 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076426866 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08745892 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068908464 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086216474 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068805622 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069250833 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090601308 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072065648 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089300475 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068430588 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068547815 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090491886 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070791434 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086587898 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070592472 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085775359 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076619165 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067707507 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09100577 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067997396 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09219452 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070394131 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.101937533 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072387901 seconds)
  done (took 5.335923114 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084740194 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071340909 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086456848 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066928347 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092690184 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071795501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071868213 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093671766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071060508 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087954524 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0702854 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091671806 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072355049 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07260818 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09303873 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072703899 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085309304 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072027321 seconds)
  done (took 2.360188635 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076539924 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069547531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09784292 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069923832 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089691141 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07229407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065879088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089129597 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067986655 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08936173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070180448 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071383472 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089371537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071132117 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088624086 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06949894 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070436827 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089093787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068662523 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08575897 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072542422 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066928536 seconds)
  done (took 2.635804603 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07536037 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095259718 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170065611 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.113263323 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084231003 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10429896 seconds)
  done (took 1.577355729 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093625912 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104479854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070418896 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110779008 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077824641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091866912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071596982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091120203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081193742 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106216087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071126917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102743081 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102491881 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082848723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09940279 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077890375 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093357216 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071345059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091600371 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111002889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072596372 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102432159 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071781454 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09223825 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071621479 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100801599 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101124171 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087083559 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092967424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08071299 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098570937 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071068848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102947262 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106218046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073209652 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10205122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071341191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11298167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097436638 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080084308 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094200764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078760876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101656413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077199442 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103017508 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091623005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078338982 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091015009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071509933 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118747534 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097953875 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079886232 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09962941 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080860522 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103256551 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119238873 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104584267 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079876955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100066467 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105665685 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081254861 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099162835 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080235049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10682231 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098660073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080065457 seconds)
  done (took 6.952292939 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086447592 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109710046 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071739337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105508516 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101010507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07123603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091908579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07261218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091738164 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071939949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134819571 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07152251 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101874058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100645323 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070609497 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091615865 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071792475 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101334375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071526687 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119602175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092752562 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080968338 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101380336 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101338816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085643187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099853173 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071386549 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093380039 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070955813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092930986 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097935839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072044048 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102223482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071662047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101264507 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071728563 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092425033 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077210957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091976997 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077807454 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102934935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11191798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071514373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093830855 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105269255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072264168 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091344303 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070585535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091610825 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072315295 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106917974 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085229306 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107144122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101479502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071093637 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093429106 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07089601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093544962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071649262 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099364097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101126375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07296254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119689186 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070968795 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092966415 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100737133 seconds)
  done (took 6.841488009 seconds)
done (took 135.102799113 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210141229 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.193346447 seconds)
  done (took 1.339274055 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071613531 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098568035 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102703489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129830977 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091405263 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102605305 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121949092 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083155877 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068602233 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092223956 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069630182 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091760935 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134476839 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069662659 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09131809 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071261272 seconds)
  done (took 2.433637767 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106727218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203232675 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115581418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066637575 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104629869 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081788577 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08887691 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081123309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095939196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06866003 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101841036 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07982898 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066529724 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100358016 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095664666 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082962275 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067514479 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103674069 seconds)
  done (took 2.658383473 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110289384 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151706853 seconds)
  done (took 1.205418475 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.207559939 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.129705517 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.219681042 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.447842871 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.239123394 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284903481 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.186339994 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183654752 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.168783899 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.182534267 seconds)
  done (took 3.190053752 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103298736 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177448371 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.326223324 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.144320131 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091818557 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121718693 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145327094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114856295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086639566 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105904082 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107301492 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081124188 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122894312 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078917395 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099715504 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081241214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126680104 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07599823 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101399051 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078308555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124165926 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06924621 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.100683898 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077344698 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10437287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080640677 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090290642 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069028026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099726443 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078303798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103416268 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118613217 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084178202 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.138699955 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10728731 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.14056638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079424244 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097277746 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07723817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097892433 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081305344 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102988902 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10897643 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081807806 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068207568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102284886 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06775514 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089403009 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08383534 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102046666 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08302399 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103978531 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.137355664 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102335703 seconds)
  done (took 6.568197064 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.768940286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138184431 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075646557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.840073052 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119139686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085767236 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.754967022 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096848212 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240341898 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769178074 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116865297 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079211897 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21249507 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221581886 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.914145346 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293403552 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.653395393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109124108 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113253407 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138392649 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167076706 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16291055 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15418102 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413649788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100788648 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074170572 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141271017 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102964011 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146032881 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106871625 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078075044 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161662434 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23252577 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.189609414 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077709662 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095317147 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07329881 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.154655906 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250368995 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198344721 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164364746 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070678495 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072156727 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168741083 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13725526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071239251 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.147648725 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.159942994 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175077337 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077578137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100561806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149656062 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148076578 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.149960373 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10569691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295669035 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276774759 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094574455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125663656 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087218449 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244781658 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086115055 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209934035 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145670461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195547562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073180869 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762596149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155089582 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073155978 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101213027 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124381104 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077379796 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167223775 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.130133277 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388724806 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148049193 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098625023 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072142327 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213360682 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085270918 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094936853 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148410169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077660521 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127134629 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173417779 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.155366967 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.154952848 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212995538 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171389631 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14696161 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078201365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130429571 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099457634 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20063254 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204560963 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.149571002 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.197854656 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147831611 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.150141796 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154264756 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10206194 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.156441692 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126321286 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107518173 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148790023 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201034869 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.109072638 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109329319 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098359744 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146759018 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131863878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090269443 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.166971487 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.15829516 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.440931281 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152837725 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092120365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090908056 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147793163 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168355046 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080918831 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24791953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130062037 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154292242 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127288129 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071426446 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126425254 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.148861187 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10510267 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127914187 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148276234 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079966485 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243104087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.179841043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103815136 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204889817 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.168317715 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100202219 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156411437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125804245 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153603876 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080877919 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169161807 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079154478 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75473229 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.151512535 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129048431 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075169111 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171871709 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094164867 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086751348 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108143742 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069929306 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775759629 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08695487 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105735054 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106516807 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07969995 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127079393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14276123 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09845295 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146765488 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213575761 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.082027135 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125452163 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108847669 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14724644 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077197123 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110659393 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107741691 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087468076 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128878752 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096993597 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086600804 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152819913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.147360854 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.203092035 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583344438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07372478 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108594464 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188647222 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094892159 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.250733204 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16617875 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.186180547 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169436315 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084745611 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30706115 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150966794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170920049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088967628 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.181537886 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071244126 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142968172 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150674035 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09641535 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0781006 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169323995 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.154609119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151772092 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955580145 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07375277 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211943488 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092554817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157768861 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077969319 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103395373 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270994116 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072518607 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153635973 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171610221 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078030417 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108523653 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.832322563 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107739472 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145259306 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078761551 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205008212 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149308851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142901489 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166550818 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081108559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146232716 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194324769 seconds)
  done (took 42.130180498 seconds)
done (took 60.460756586 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289064679 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197908864 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26302878 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152692432 seconds)
  done (took 1.947159516 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152550999 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109500991 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12436798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090471421 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.109538968 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091220287 seconds)
  done (took 1.646357738 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.442173932 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284672024 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244862947 seconds)
  done (took 1.940203737 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.310536599 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238917586 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.467814664 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.312474338 seconds)
  done (took 2.408363107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201107511 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120826335 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094043199 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088543753 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.171930513 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.273199023 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.135750457 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200078958 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080368145 seconds)
  done (took 2.382249998 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20931149 seconds)
done (took 11.497592798 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.233726816 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.136044504 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.215444691 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.345931435 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.187253981 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174343279 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145077257 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137786678 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098740989 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.167848342 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118237534 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.186663348 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085939946 seconds)
    (14/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.152297711 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104591399 seconds)
    (16/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078953872 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078134232 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.29827509 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.202489209 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141548652 seconds)
    (21/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.099917221 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.258840891 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133527697 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.261112452 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.105485835 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098527321 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098663996 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.231363235 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083837209 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200580895 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076810902 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136630129 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.146709159 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.232413486 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112001184 seconds)
    (36/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.275231482 seconds)
    (37/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082960596 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07259443 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099828387 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.273067367 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189689918 seconds)
    (42/309) benchmarking ("sort", Float64, false)...
    done (took 0.130875828 seconds)
    (43/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.172200309 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076935558 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120261488 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.255563067 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081318793 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07999815 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091692215 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076706555 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125088584 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075701346 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120550266 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079670282 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145997224 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085634228 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.245706712 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122701931 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099663243 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077766906 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095692394 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.176995736 seconds)
    (63/309) benchmarking ("sort", Int8, false)...
    done (took 0.171231593 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.262615358 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071050193 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127379729 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.257070791 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095657241 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098531609 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064146025 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067942956 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.271634416 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.268975493 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.207300406 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068799352 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144469686 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.105440956 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119299447 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070002028 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173709698 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.29172864 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112736142 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.186557876 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104572205 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054553953 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075130454 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098327348 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.1200146 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100006317 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102101905 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094161722 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083982739 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.068863252 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094042328 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080308476 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.099105779 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075598953 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054093416 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092199996 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075002595 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06511608 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094979418 seconds)
    (103/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081083508 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.129441186 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080768537 seconds)
    (106/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.180252323 seconds)
    (107/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054856232 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.116365925 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069984587 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091938193 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067096455 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070258131 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116680994 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07645267 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135313056 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070809538 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083612672 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166215857 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.259550845 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.266470563 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116513413 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.258626614 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100782224 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07757879 seconds)
    (125/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.127931988 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078822355 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.244808022 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198308614 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057382343 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.170123446 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.073775027 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076225098 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174322352 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.17252224 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094564158 seconds)
    (136/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135162889 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092094435 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10020949 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.119089113 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069676812 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07942929 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077235149 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090769069 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 0.356685966 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102053705 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099309778 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.101090893 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102358415 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.0791668 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056219553 seconds)
    (151/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06412206 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09857293 seconds)
    (153/309) benchmarking ("sort", Float32, false)...
    done (took 0.133477388 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098272265 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0761963 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115778118 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054844843 seconds)
    (158/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075331591 seconds)
    (159/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.087740626 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.221630587 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078770881 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077647737 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.245753241 seconds)
    (164/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072825685 seconds)
    (165/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097141393 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068999473 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.250906808 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076144642 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05449802 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119395685 seconds)
    (171/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117909369 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071140057 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.262927303 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098615329 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11500239 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078296531 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054774348 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109235138 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069587854 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093510655 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055409944 seconds)
    (182/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099944574 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.102953424 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069306131 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053949755 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.087182613 seconds)
    (187/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056373873 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054900768 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.246008534 seconds)
    (190/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133472705 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055512527 seconds)
    (192/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081521979 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093413791 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.164862433 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055146633 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076419572 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113612764 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112593466 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09911121 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055841192 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068300335 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.077994189 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077900466 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.247338559 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053600636 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052685743 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152956654 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.117617315 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082768943 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052984912 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100484038 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068261724 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106471637 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069111493 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160543649 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070264137 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094683479 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089264765 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079075738 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101069565 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070556246 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078366441 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140422423 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07697707 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099843637 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070789367 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054622909 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.077787755 seconds)
    (229/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062945227 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.242554349 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068148345 seconds)
    (232/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100075218 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073547848 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053483401 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101614033 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054992899 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05523358 seconds)
    (238/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.077723516 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055615286 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074039404 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.142574951 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054478928 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073786352 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095030889 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09055026 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054081851 seconds)
    (247/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.09285373 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055303879 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069865292 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080109128 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137606517 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.169881191 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199712351 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054909307 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.077964287 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056092691 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17462497 seconds)
    (258/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05652918 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069714876 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078366597 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055872508 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069311205 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206836372 seconds)
    (264/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.113335704 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.101799724 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068059659 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092472443 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069055347 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053443724 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142282599 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07961665 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100757118 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08146957 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133128546 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076647925 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077570193 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071600881 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063898574 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092059701 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055872633 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161293959 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057008565 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055653698 seconds)
    (284/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215174651 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093394779 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069534545 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053382276 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108292812 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077278064 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09221492 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070440314 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17005205 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069496255 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067342226 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093269388 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066986709 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05269404 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100686461 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07767465 seconds)
    (300/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052891971 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206461491 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098636463 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068719237 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.121402859 seconds)
    (305/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056331858 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055057708 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099736361 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05527313 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071972549 seconds)
  done (took 36.403395253 seconds)
done (took 37.374628593 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086428734 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120932571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079326167 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120364068 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085687208 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106254966 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076704761 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106838159 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084715127 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108665601 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084108921 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056418044 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103311276 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077690105 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102842679 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097452708 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106932713 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075983823 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.10127104 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069030303 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076884008 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093629043 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071040004 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057665476 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105081271 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076296755 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099808682 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079640045 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090639185 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071293063 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072115731 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.10066184 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068872423 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080701875 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100318039 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077627583 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103674949 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080438926 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070337809 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093065795 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077312312 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092231259 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07688807 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075788169 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.100221414 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073823988 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0993066 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08525277 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120834582 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071512071 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077548046 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105585416 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080690827 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100610558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07298099 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100957099 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074722653 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097244093 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103227697 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070766872 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101861714 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078073185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073131775 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.10283514 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077530138 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104108725 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080616432 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09795212 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079191599 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072973931 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092734723 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078199715 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095046052 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069950522 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080131325 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104103992 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068459588 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07375558 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100297773 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076355335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092000888 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072182297 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070384882 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099141446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071777504 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05691555 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096605306 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075656517 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067408141 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.103921149 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075293036 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099752871 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07224934 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079802237 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094023394 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074873928 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092223107 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070000156 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070795184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09742308 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06994286 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070556531 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102398346 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071660764 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098182754 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084517271 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068461099 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099489565 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068604423 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091227782 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087571318 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078615573 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093383773 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071946957 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091148783 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076758356 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068583842 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092910559 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06936866 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067807291 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099337688 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068791631 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069780087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.100597083 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082906115 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095177348 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073649915 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070021596 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093670654 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074810938 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092096511 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069781302 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070887865 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08950834 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07201679 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068656979 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100494619 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070711557 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100350613 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071802769 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078137994 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097995891 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075466007 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073575934 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092271489 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061716943 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07027898 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095726069 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071103437 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092085337 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071128659 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068293187 seconds)
done (took 13.847519561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070982173 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179708826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.133374252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10109254 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116780867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068547062 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.107103321 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.135385236 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071980201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.135056949 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092711558 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114511754 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146547731 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069582751 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069201892 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097981003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071434099 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11821842 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108278607 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11571212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149403511 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068351667 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128902098 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094569275 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118521823 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124164431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07029997 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0956389 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074751749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131327167 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090747982 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071975699 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094242983 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106010924 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125335578 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114103602 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069763608 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113079327 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069439325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067982695 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.123046616 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1306025 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085921862 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110950108 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072501591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.097076142 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06988656 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115277442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096227938 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110637347 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.117107969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141940641 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072754944 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.111843949 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069309313 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116224448 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089078919 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095338402 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070955103 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071593395 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094353015 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072947669 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117963724 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.098198433 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098044892 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08664331 seconds)
  done (took 7.659486497 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089333858 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120316247 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089451236 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112984795 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070152808 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069351162 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094817406 seconds)
  done (took 1.680179676 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072202174 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092318398 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119323974 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0936487 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114630678 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090969448 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10449245 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070020804 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113127005 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07232812 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115890059 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111287077 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095401908 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079220719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.12053532 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071079894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094292046 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095576249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073015539 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119583453 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073306339 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.116044646 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072792331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068885743 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111395335 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070379426 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146142841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074746936 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096694548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074466097 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067488388 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14905775 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109525731 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081788279 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094444809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087328817 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109079126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070095694 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087279921 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101023986 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085141148 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09537622 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072966932 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067538452 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100017051 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081881512 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.09545833 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071492177 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073168061 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116374779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071916025 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108784772 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071155374 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074027605 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097188592 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075754773 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103889406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072720501 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091320058 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097426753 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088145371 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112669253 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085002338 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112446572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072717185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108930447 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086071015 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072040983 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09773412 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073940835 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111664733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069636472 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072204951 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107137477 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07230215 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119632907 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094960169 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097046121 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080759845 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069974073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09626763 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070543252 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119548158 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074267682 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07039083 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099958203 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073227504 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092936709 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070454838 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073951218 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093986029 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073101868 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073009563 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095201448 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073915125 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113795435 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072089883 seconds)
  done (took 9.779837646 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072968987 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071325101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097853404 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072382788 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070684319 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097225822 seconds)
  done (took 1.524767023 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104581531 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097783645 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086389086 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100717825 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112792007 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111343306 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087002883 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113282151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089286777 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109399843 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086842067 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111913559 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092235924 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.10306904 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085750546 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10275983 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087355338 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106153437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083611347 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102772498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093518523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.103260558 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078815525 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111932691 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075072931 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100925678 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082010577 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108161433 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084260648 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111867221 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077420103 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074059074 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101057355 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112055643 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088259034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099528764 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078020168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074250016 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106608162 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074480065 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11240623 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077310541 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108048272 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076040265 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113078736 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075099908 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100803951 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08189234 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111513629 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075249966 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100747106 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077476831 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09787355 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076592767 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075430848 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113709193 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075045432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112268695 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076736704 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102010878 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074606478 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099631576 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087771801 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100160026 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086354926 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100866761 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076935251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102024117 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078875935 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100579347 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07746818 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074020078 seconds)
  done (took 7.751897221 seconds)
done (took 29.419137485 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.672542889 seconds)
  done (took 1.708652117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815016606 seconds)
  done (took 1.852080143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.457804845 seconds)
  done (took 17.500956975 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.666751622 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.846588727 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.836685885 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164969496 seconds)
  done (took 3.553096043 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.920588111 seconds)
  done (took 1.978495134 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.252839377 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258890711 seconds)
  done (took 1.55558094 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766077598 seconds)
  done (took 1.813087089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.329511322 seconds)
  done (took 2.372380178 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350113343 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191512503 seconds)
  done (took 1.594143513 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540861421 seconds)
  done (took 1.592589157 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.850366595 seconds)
  done (took 7.9085672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237677565 seconds)
  done (took 1.302450037 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.27844021 seconds)
  done (took 1.33286318 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.428186388 seconds)
  done (took 4.48291295 seconds)
done (took 51.589053972 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083457818 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08402754 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111029894 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081347973 seconds)
  done (took 1.409914961 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082269368 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076003017 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10729796 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075329253 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107345808 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076922864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103832908 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082772606 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100303739 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080052968 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076041197 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101721545 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080138094 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103381992 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075087597 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077659143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105690613 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075616833 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104464854 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076922482 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098321232 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079174227 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078361669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102161525 seconds)
  done (took 3.189335678 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082583155 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075576635 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103587263 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075347042 seconds)
  done (took 1.39918473 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082396113 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.121318297 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09627706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.105585917 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099408855 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117104292 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072825865 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072112756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101833357 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080878073 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09584075 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104804855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119208152 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080211763 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109046594 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069947017 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072498586 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118867618 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07956039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106718828 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074420086 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104882233 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072705608 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119688974 seconds)
  done (took 3.342638344 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082818994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130939636 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084997446 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11692588 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098298267 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067800491 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106708133 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095838291 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157808058 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067267036 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100453974 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069445901 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101235626 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069763616 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079741667 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140378359 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.142166824 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073156778 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126917891 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070523722 seconds)
  done (took 3.045916862 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07868446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072725095 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094042006 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07198543 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07849009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10187155 seconds)
  done (took 1.566471762 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0728478 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070303325 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095586713 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071425364 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075121035 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096188008 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069237362 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068984958 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096431432 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070102661 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094457319 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070910117 seconds)
  done (took 2.018026574 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.469166563 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072194329 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096868951 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070671367 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074712038 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094881091 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084811317 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071087193 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121408256 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069525121 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096546983 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073703151 seconds)
  done (took 2.464551908 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279196446 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081629709 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.343613876 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175270057 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145913529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163667653 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108094122 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146902874 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209277421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145667832 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240176069 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206305799 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141119827 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175895649 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120543063 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.139356825 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195859993 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233392777 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136036537 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236901608 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193682358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162779133 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214716638 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10732654 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140491712 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151521202 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101883887 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083561339 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243381413 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196018539 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185249867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14292408 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125811653 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245186321 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232302613 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17956115 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168814538 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116653131 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161912541 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173874259 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276629632 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116591962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205320176 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13930565 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110947759 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182468655 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155645154 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.154439157 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143970064 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119216072 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184481074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250476977 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173838491 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118904728 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143298526 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147053486 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.149759886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10740813 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286242589 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203853959 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191732702 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07576266 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126734871 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198471771 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166431015 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148197163 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187708246 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099742712 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205222247 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198287361 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151749401 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210617668 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.167567654 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121010968 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155284765 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180400426 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16295139 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242806877 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159882931 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102498226 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159762093 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133367473 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087990268 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174325415 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080645538 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246865273 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131062965 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.147393023 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14406477 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117192742 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144452477 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230961148 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213993652 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109454835 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.096100792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134948056 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158240487 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187279833 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11941022 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142427017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156335659 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083300584 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201633482 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079048503 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15989751 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108187741 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160024447 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171175071 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07875047 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185828519 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109807805 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.135211993 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172371522 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231197737 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120049786 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087830937 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240588567 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163491195 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141005193 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185403579 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228025755 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133745787 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106396337 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19021718 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257433947 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12113949 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209051483 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136961664 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116055683 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092803457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187305923 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148343272 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155087552 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087938196 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160517709 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239064638 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103181839 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102448104 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173857088 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113498577 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111799464 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147159144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106887024 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12767556 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13336609 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139122392 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178052608 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16174468 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140842792 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162006763 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132417844 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232699917 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120123683 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10974941 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136729419 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099695305 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173640804 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227378795 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085161133 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237985912 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163682319 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137891157 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156771355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088042933 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205586333 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085163595 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07452788 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208900487 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146399087 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145106189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195613278 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137989497 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164040032 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160492765 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1976168 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171607825 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170938172 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139244183 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090873418 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147202811 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188999013 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078300728 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1269749 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086551205 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135937223 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128191221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113151662 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18425491 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164406004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131027659 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147857771 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12864797 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19236895 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106199466 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170099229 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154553643 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099924851 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.2243677 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227489394 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172544137 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133466056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185273842 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100623624 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078388418 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121370665 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166438087 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113727033 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08998669 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151590511 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216382354 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166198907 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174298556 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145429179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158036376 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22647365 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075500813 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150171112 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191268669 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160104725 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165664179 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122467192 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105450084 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210998043 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111303496 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288919623 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151663921 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161318523 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193993116 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.141519193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111427639 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110863797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204190094 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137023136 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193161193 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133423361 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121799342 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142623222 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084782504 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139234538 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191656277 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15414439 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176150138 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152114631 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170097046 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108075024 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1505513 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160321717 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156600584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067095138 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155110645 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235017014 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128320474 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154167203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224634929 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083078805 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.159196832 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25133303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211578483 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091167238 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141880589 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157718003 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165620186 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153831889 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207762187 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144511407 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172262128 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144207279 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090331815 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120476445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130710522 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115301173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129335592 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146280899 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150683634 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126971991 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169183791 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146159102 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14402121 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154772973 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129688818 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096268291 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130636572 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248601237 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157956913 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245822127 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13297373 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191695568 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239819085 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105504389 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084768349 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110483407 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179807288 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087829786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198109568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101407358 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138754397 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162666436 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209013415 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100940445 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098974715 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144422047 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174017688 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145032517 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129994359 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114458231 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235315366 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137987508 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083344679 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159221504 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137942868 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136005499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251342827 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065206677 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130229627 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079242652 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112366014 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167447657 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228287852 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087499657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.163536322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158432567 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159285373 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166963685 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132735734 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129376178 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145591068 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190244861 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166462929 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.123385164 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148171186 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168971159 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228820106 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140147308 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100231955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241324394 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228972831 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23720243 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094085685 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149807086 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150560727 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147223856 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212196409 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088055105 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239343401 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1147597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17605827 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138037266 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126005417 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165740956 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129660291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093964129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218596417 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155454028 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11374189 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102805276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148956134 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157917828 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137305268 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106043139 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180951184 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075841895 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204795167 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212292372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113588562 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14035588 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128318807 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086967633 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139879573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138119942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118052375 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125775312 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24980493 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.124641886 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218550752 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183296096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151065101 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201482762 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10885321 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670483704 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11062484 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197176346 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153550906 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280541842 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105864885 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155910967 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147224779 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159348908 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209446696 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13983694 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183552789 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199864866 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157880775 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083724056 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137201627 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146125644 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122638037 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142446863 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150348348 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151233739 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133911478 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.158388697 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167033547 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113626765 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102179763 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229191809 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154357973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181981547 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208096097 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089912374 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155953227 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210923309 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083146311 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186831481 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200019103 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144136191 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132685699 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113177163 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140645771 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21657111 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105214887 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204131111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189349008 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145527704 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148670825 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.158394206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170904103 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140927527 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163348683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129555328 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14875326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15234388 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11671732 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08173551 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141584169 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148599483 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.133562213 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136670927 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.127583166 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225928744 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074930996 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128292551 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134990877 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18673745 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255031869 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121797949 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087108224 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154639421 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149740164 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152421091 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162527394 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115107185 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113192515 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08897876 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.145143721 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147129019 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151253244 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10978279 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146052966 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241833559 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114876322 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229620106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129858326 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145480662 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073782718 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112725144 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129239739 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104239939 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139722116 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130807395 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244664932 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102591662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123618245 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126490709 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077569524 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114700372 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169811352 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148078896 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158336566 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131163811 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067733219 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142655964 seconds)
  done (took 75.183006427 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141994977 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11118631 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.127365079 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.182270628 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156510035 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248228956 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.190443377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233151147 seconds)
  done (took 2.532121951 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074501353 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125702775 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107393904 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.122234484 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096699272 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072269027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.316256657 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115384888 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070682856 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122462065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.125673911 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.099254399 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.499013565 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07096136 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100629862 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090892728 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071935468 seconds)
  done (took 3.414657516 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.455021071 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.671199303 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457778619 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.103911569 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.025145367 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115230237 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.522468384 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170822281 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097383769 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44132953 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729071097 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162590243 seconds)
  done (took 18.092514223 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078968553 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072281235 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114679035 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08687246 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102733873 seconds)
  done (took 1.594486248 seconds)
done (took 120.297870342 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084494208 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388974515 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055767005 seconds)
  done (took 1.621001761 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088866426 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088668925 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117729111 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087889277 seconds)
  done (took 1.532644697 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079883274 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079371084 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117623458 seconds)
  done (took 1.423647218 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.302182985 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171818229 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09308846 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088213403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08137608 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109251621 seconds)
  done (took 1.425062091 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078341604 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078221708 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105662355 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080553813 seconds)
  done (took 1.482397096 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081571089 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055651986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056888559 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086797302 seconds)
  done (took 1.425736063 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096063443 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.111033818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086357985 seconds)
  done (took 1.436721196 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114585721 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118041628 seconds)
  done (took 1.379245336 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087637641 seconds)
  done (took 1.228641996 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097594187 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146984443 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.166381433 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143354247 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.177206028 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.146423705 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118276137 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093315881 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109527884 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121509498 seconds)
  done (took 2.466377951 seconds)
done (took 17.205435 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082761846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398825175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365402741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122904886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674311997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386745624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988801922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124032971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1132366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099362858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088468378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680160516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978968031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321803522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995093308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320881576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681939596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072461284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097260024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073382864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969871274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099558574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071146775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098463965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65326017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375722797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100209915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321362018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09870949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075165184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357391845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100155641 seconds)
  done (took 16.124204161 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0750677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148534018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078269697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086963008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103510525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072956057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103060329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073899537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153763979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071458139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116992084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071626754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101831991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073171574 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090609768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100422393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072861794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099010178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072773948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070804741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118402907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07177235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098946642 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072276926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071628544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112239524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072639893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098759002 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07304219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073044521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103115519 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072628536 seconds)
  done (took 4.024105705 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159432401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07819391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134618764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.14513062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074870162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175246542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096914561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158062092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071634477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117234866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07096474 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133811785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072702373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120043733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072332659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099054545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073196838 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071003926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100243439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091855944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099080879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072006211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072297108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101283083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085686256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099368832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074766623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071416287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10171614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075077742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100347709 seconds)
  done (took 4.345764514 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077215617 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078913868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114441007 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087198639 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099754254 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076274258 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075054167 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101479128 seconds)
  done (took 1.861094739 seconds)
done (took 27.490502476 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083350222 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073286399 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105289752 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084261029 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103673607 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082694151 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06982492 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106585742 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078854705 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076120696 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.108583275 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070780166 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102765598 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072046473 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077336856 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10001996 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083384774 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103322485 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083024536 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110878676 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074768463 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078893934 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106066262 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084356208 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111497291 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083480206 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.111928615 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078783857 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072853043 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101808434 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080245559 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.117114942 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073169194 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081889213 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101943822 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072497278 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099266352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071724583 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082348228 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10732932 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073160445 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10710531 seconds)
  done (took 4.894111153 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094990516 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096572355 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118975488 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065900535 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100953102 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065274117 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120920003 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064503814 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064673181 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121563736 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058348721 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060488895 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090031779 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057799826 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06130773 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058385126 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091776684 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060329319 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060572692 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089438712 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064706308 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056308582 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090036879 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062928683 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058824932 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064762177 seconds)
  done (took 3.159306083 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080216782 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085547657 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120364434 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132408251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138773395 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078488898 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111273721 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090300701 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117385015 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070326749 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074588341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.129479608 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089177366 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.116879012 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070813971 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114836691 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086109459 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100583682 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079461362 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091587733 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117429296 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081770292 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121178581 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084512529 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069916019 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102380513 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075053888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.114102186 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076554799 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108550437 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076398077 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074274249 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10246308 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082764407 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.10307444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073812529 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090421629 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110730162 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080010917 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.100635536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075635747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072189069 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120793418 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114935454 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09990881 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078421173 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.107249352 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081509207 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070266634 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119378944 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07942639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099792376 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07504009 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06929381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099767906 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084745937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100214061 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075649784 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079472385 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102603393 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083145328 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102006295 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088181904 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069767679 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107688825 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070371067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.10018789 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07073097 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093133113 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101726232 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111503736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101348968 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071780185 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108417938 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079265069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076811766 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10062729 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086108002 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108666627 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075707443 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079570588 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103740151 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0741965 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117452795 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074533321 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071656188 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101355137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077791548 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101129672 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074440847 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085079653 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100948655 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074420696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116776164 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071917475 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072567198 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107031972 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075378772 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09816441 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084928767 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103002167 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073633958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080418446 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100061525 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074334965 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079609402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104670874 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068808282 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104619498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078697565 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071069865 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101244441 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074114232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100507392 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081977527 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076496065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.105518522 seconds)
  done (took 11.850611961 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.204363022 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.19449136 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074344701 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.187334077 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080835718 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114636023 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.189667755 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103068033 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101860045 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071709084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.101113926 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11186142 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134042832 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.148553135 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084934185 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070896407 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119505036 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14140303 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189840261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154159077 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121904113 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079084803 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.103386775 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072670265 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072516627 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.11160838 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088432888 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112654525 seconds)
  done (took 4.51038042 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086215202 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131036129 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077979051 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119386543 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098478691 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09831905 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078055439 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073232796 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113083771 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084527557 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099688609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07867157 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078433013 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.110042991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071735354 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110439467 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081197214 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101773833 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076630032 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076186627 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.107281945 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085349392 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104270576 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071977215 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078492076 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101151317 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069330622 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.120185612 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070930426 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.122950796 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069728209 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106633883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08284181 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071210702 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100721258 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07342295 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073175454 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.103915138 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073726378 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098820521 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071050783 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061218536 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098865391 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086092192 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105875021 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063938996 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077172074 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106048239 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076826634 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06806136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103950821 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074392773 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103814344 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079884812 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076299658 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105891475 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075057653 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098078002 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079848612 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07401075 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095243242 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072006325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076545486 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.101204158 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078360582 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.104231704 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071066908 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072187064 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104122499 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078036186 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073111826 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103329296 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069832442 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101073831 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077192487 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075674031 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.104121791 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070370154 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070450988 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100757362 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058856444 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070619496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087152926 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073601641 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096878247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07206394 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073762487 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109157049 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085516303 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102237095 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078265085 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071612083 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10002968 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075531598 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094218001 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076044477 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08572655 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.118132026 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070951106 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098553736 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085371199 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.106030718 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071687291 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059641342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106815614 seconds)
  done (took 10.323014098 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098612596 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122546562 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074930596 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085592805 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126982233 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096102672 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108287808 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078002672 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072785582 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119098603 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071723355 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109081615 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075793773 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078810001 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126272926 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079785444 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102859754 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081962383 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077768561 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138343675 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084840998 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11558564 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080604543 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101475056 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076223431 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082540315 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129250816 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081110627 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111301377 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086198145 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109990138 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099574191 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085190831 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105417515 seconds)
  done (took 4.455802327 seconds)
done (took 40.337895117 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.260992745 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.455524475 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.227868441 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.204387705 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.265364444 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.255403015 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.239225123 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.226256935 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.897229995 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.225446273 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.476253301 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.923133892 seconds)
done (took 60.82827406 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.245428412 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.37094608 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501369031 seconds)
  done (took 4.042256581 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.585424698 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.428601683 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518262847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.230719414 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.229809981 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.674892245 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.926703951 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.102877967 seconds)
  done (took 28.281894196 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.240964289 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.614798337 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.727583464 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.730954929 seconds)
  done (took 18.485069628 seconds)
done (took 60.809453947 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.246132468 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.257943796 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.247319391 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.215004764 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.340944001 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.251450585 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.530715029 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.472086877 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.236657834 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.217233043 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.248318001 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.233877017 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.244339848 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.611925342 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.231188525 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.242416752 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.310895633 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.733312051 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625686324 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.236395447 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.251196659 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.304026021 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231958321 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.232153799 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.272166304 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.23246273 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.231783882 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.24737571 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.611699595 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.235759641 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.332325904 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.742402778 seconds)
  done (took 192.82928176 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.231301075 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.36212175 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.471532467 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.276388873 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.767204059 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432776847 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.374525478 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.840626547 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.252475327 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.24532299 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.485812271 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.235183328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.557260086 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.218827056 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240445703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.245082554 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.427789088 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.573517048 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253065894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.507401565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.247248929 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.534151024 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.439374054 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.455042232 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.26929734 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.286736021 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.237991746 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.24412125 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.422689859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.364676236 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248948577 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.275674226 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833461726 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.091128605 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.24073298 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233344755 seconds)
  done (took 151.595264743 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.519955635 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233100974 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232505396 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.233089318 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.264443476 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.233174843 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77030428 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.23308161 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.736055201 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783184223 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.568467876 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.295062959 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465486073 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.234598975 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.233684505 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32600829 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.244730426 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.234406849 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.247664554 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260632506 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233792638 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234370422 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784171975 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.248229762 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.254770673 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239833956 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.233583505 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265299817 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.627748018 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233693832 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26525816 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552627247 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.281693732 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234658071 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.538591922 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.629783421 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342359899 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236721098 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265996665 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.233118165 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.235719491 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.50242026 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235422776 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.236208386 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238753894 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823008667 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.23567143 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.773059102 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235845173 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.143127295 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.235278809 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235271968 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.669659358 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.713527624 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.235536136 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.235032806 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.237328812 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.235078567 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235783099 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.266223461 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.682501823 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.335124739 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237071667 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.238487736 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266902748 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.236441118 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.407077496 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.23620114 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.235912842 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.289486071 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.354898326 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.801927915 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792945161 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.239980054 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328978862 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354102661 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.23589542 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.23597942 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.236234332 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236991744 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343641871 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.236490352 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.641623531 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242538321 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.237977765 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.295988663 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.331792646 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.236705377 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555785282 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.237135595 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.236944301 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937779512 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330229381 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.237325773 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.236021876 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23670299 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642122783 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791610947 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.445101483 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.240719728 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.658649745 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.239885901 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.656538022 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.786618925 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.851295916 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.240689101 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344732169 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241390428 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.238745613 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.237636559 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267540447 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238059164 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.295859936 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.237456694 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.634431827 seconds)
  done (took 349.748661454 seconds)
done (took 696.865191993 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.922638918 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.869850495 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007899537 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.885956736 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.868706735 seconds)
  done (took 10.730468351 seconds)
done (took 11.908323465 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428289869 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.429382598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299328078 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429646736 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268242044 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448765399 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409973493 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.26016324 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.344616605 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.318143398 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342511839 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29015512 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.266920607 seconds)
  done (took 18.713440129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.561198148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559382156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306072877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.599705587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280063519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.600557011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441387324 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.464485233 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437902173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254924944 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251809241 seconds)
  done (took 16.93606213 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568746829 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.577657381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307539188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568318107 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.281891031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.563223678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.454644996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.464096999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449743255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255202786 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251872475 seconds)
  done (took 16.921041309 seconds)
done (took 53.749674873 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.248019502 seconds)
  done (took 2.42593348 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.280894529 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.447476482 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.264098888 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.252086883 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.249631409 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.250029659 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.252438 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.248744762 seconds)
  done (took 11.42496696 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.24664876 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.244545318 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.24733846 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.247651797 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.245389852 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.244596953 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.245575761 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.246147149 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.245379279 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.248499977 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.246988732 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.244621841 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.248610459 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.245532462 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246659352 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.248077734 seconds)
  done (took 21.121676676 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.248052111 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.245653137 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.244989701 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.246498037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.24652077 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.245674394 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.24628847 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.246263985 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.246476495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.246465464 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.246361227 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.245836252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.246493977 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245317434 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.246738407 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.247215639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.245630657 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24692663 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.250164985 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.245811712 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.246801303 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.246581443 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.247204802 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.246180873 seconds)
  done (took 31.098425048 seconds)
done (took 67.251773166 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.377162631 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.930166166 seconds)
  done (took 9.487554004 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.249023478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248923439 seconds)
  done (took 3.679633413 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.249582989 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.249155966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.248814757 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.249558654 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.249369173 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.248855183 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.249097179 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.248093309 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24882902 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.249059849 seconds)
  done (took 13.671124512 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.249330107 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.249521399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.247018903 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.250541572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.251271762 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.247318016 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.24921133 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249611797 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.251081769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.248130341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.249686991 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.247851275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.250291892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.248028345 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.250480793 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.247580323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.248327808 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.248555495 seconds)
  done (took 23.66506608 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.251064818 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.250810317 seconds)
  done (took 3.684097735 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.248459476 seconds)
    (2/7) benchmarking "second"...
    done (took 1.248339343 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24800183 seconds)
    (4/7) benchmarking "year"...
    done (took 1.248905747 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247600619 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.248005327 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.247879154 seconds)
  done (took 9.919672175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.251455157 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.431940853 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.515996161 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.842892016 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.25281601 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.254837622 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.092137205 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.255535804 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.256559681 seconds)
  done (took 14.336640631 seconds)
done (took 79.626570428 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.269891088 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.245217765 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.194547904 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.260253132 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.260638166 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.585544585 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.257658448 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.365537718 seconds)
done (took 37.624662554 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.256701188 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.934129282 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.981830795 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.26264214 seconds)
  done (took 11.362176246 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.231278427 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.199502232 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.23732678 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.308533096 seconds)
  done (took 18.15934507 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.884327542 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581246414 seconds)
  done (took 4.649341248 seconds)
done (took 41.612359968 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252296763 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.253379982 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.249456973 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.252576341 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.249398909 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.249055009 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.252359828 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.251965209 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252281462 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.251576074 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.249737826 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.253251395 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252029381 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.252304431 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250076073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249693627 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.250090065 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252268649 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.250054863 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250409375 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250277972 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253163313 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.250658689 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.250059822 seconds)
  done (took 31.213523815 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.25300078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.251314332 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.253538177 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.252957937 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.251575511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.25384363 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.253648648 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.250531708 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.253195239 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.253344756 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251359887 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.25149691 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.254231817 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.251474966 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253519928 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.251632285 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.253544572 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251717635 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253963005 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.251285891 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.254544621 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250869561 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.251363665 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25467058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.252068617 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251097003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.254104066 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.252695291 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253881759 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252443822 seconds)
  done (took 38.764431936 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.259879512 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.261567331 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.255877879 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.254839626 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.254623959 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.253758093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.254696932 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.255406326 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.254340203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.2548659 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.254510313 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.254598657 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.254723566 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.254945018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.254425022 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.256186473 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.255033998 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.255762175 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.255112973 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.255975574 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.255173937 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.255662341 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.254944869 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.255285082 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.255852037 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.256902762 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.25558853 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.256258576 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.25623544 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.25645181 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.255865107 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.255788877 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.255688047 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.255622126 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.256204216 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.256163359 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.260636882 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263823642 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.255898432 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.256065281 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.255910847 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2565524 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.255904662 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.256068084 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.257194381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255841865 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.256887835 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.255903949 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.256287718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.257996729 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.256651904 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.25599568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.256844688 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.257252728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.256704437 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.258208543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.257671662 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.256866025 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.257200533 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.256878699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.256512211 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.257146738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.257402878 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.2580337 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.257029734 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.257842206 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.257549759 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.258051307 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.257617483 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.257929848 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.258689631 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.258238376 seconds)
  done (took 91.657647754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.257624834 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255162393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.254006855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254708876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255329238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257974205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255495988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257564375 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255520237 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257795213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258343725 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257313631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255331405 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258346434 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258831131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.256016417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2587289 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256306924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.259374778 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259762335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259305035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257428598 seconds)
  done (took 28.846153916 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259620779 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258689319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.256859677 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259566391 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257668202 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25960174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.25903266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259904299 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259617026 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257385377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256945101 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259344307 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256899981 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256735869 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256485031 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257540864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25918492 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257097896 seconds)
  done (took 23.83964505 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.257629857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257236076 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259892119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257536891 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.256144281 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259952831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257156023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26000949 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.259448087 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.258197364 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.260539617 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259273141 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.260362231 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258242275 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260695067 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258008168 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.260717981 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257642394 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260473998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257927632 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257569577 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260109373 seconds)
  done (took 28.886719543 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261271252 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260570434 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258393607 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257917461 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258358015 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.260867069 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.261633876 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.259201643 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.261363226 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.260553416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258850857 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262175748 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.259122987 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259887694 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.259378705 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258429628 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262043134 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260286597 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261068597 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258797143 seconds)
  done (took 26.392199282 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262929263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263386047 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264051088 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263839394 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263742677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263153767 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262899248 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262140702 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263304434 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263134837 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263653147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264024606 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263548034 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263679502 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263206641 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263196048 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264122862 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264186668 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264666734 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263973499 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263606275 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263796965 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263410398 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264316841 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262930997 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264714957 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26441232 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264060418 seconds)
  done (took 36.575466621 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263521713 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262393911 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.260997578 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.261451985 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.261059635 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.260278517 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.261316585 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.261185606 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263928741 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.261408881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.263596145 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.263719025 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264297725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.263976999 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263284891 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.264166729 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263203592 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.261317132 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262005849 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261500237 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.264447028 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264610947 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.263548378 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261128379 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261829637 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.264620942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262083031 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.262194073 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264179908 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.262187263 seconds)
  done (took 39.075432885 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283351268 seconds)
    (2/2) benchmarking "in"...
    done (took 1.283816164 seconds)
  done (took 3.763480645 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.261811261 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264661055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.263387311 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.262780848 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.263027058 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26553689 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265751799 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261494494 seconds)
  done (took 11.305149484 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266144061 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.266068098 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.265750364 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.264981691 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.266008156 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.266281582 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272887033 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.282139728 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.267866696 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.267245641 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.27384956 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.274148861 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.269440737 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267473737 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.267128705 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267860661 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.266086876 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.265959887 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266474056 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.267435913 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266871167 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268660204 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269483384 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.263931062 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26849472 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.278361636 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272490483 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.266023955 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268104564 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.270982539 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.266868939 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.263428098 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.267156301 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.266825177 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.267685141 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.26673393 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277514786 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285359451 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.274181764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267645346 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267850772 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.264898983 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.268748894 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.269045055 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269723221 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.26717269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.267708249 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.265154744 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.267137813 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270565672 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.272680977 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268345139 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.264963349 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272297433 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.268803106 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276203229 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.285430973 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.271375849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.277619158 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.279115388 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280319023 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277358473 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271350439 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26716779 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279526056 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.292635671 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275254611 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283690545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.266352361 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.268925383 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.275541873 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28269586 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278066733 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.267986407 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269189077 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.269783567 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271160302 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268616365 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27686845 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.290220543 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26895473 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270008856 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279843863 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292066016 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270459183 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.269307999 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.270247897 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.270387507 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.272162614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28111616 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.287817172 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.270472645 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270087843 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.271500912 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.271787235 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.271093579 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.2696411 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271463891 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.268064504 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.270798007 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270376937 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274494479 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.280802404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270229415 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27018081 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277599221 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270841833 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271269118 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.278056999 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271467261 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270224124 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273665488 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.27755357 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268210275 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275525259 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.279272517 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270935696 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273165402 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.269923659 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.271388022 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280848795 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.296983182 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.271520493 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.27109806 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277354876 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.282503201 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271886294 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274825523 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271671645 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269780094 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.268485164 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.272963157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.2703165 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.27355866 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271654989 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273497955 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.270052983 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.27215044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.272314892 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274317147 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.274083705 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.273524579 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.272977775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274319211 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.272622991 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275305172 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279581875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272512228 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273670529 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2735257 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.269616567 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273132695 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.27395898 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.272576221 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.27410333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27295332 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273043734 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.272696016 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273899893 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273502109 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273392157 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275486615 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278175707 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.272565617 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.277180656 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.274167637 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.269691719 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.273495338 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.274027578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.273837857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.273791774 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.273755299 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.277981898 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.280795794 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273576778 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274046609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.277399071 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273135321 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273468833 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274595404 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.277957645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282776999 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.274096166 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281301118 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.273481695 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275039427 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.275157508 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.275498021 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.275206919 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274400243 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279171139 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.281976005 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28733598 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283839147 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.276093075 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.278152156 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.275785633 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278617543 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.279303177 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.275434209 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.274757562 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275468063 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275124944 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274209791 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.276783041 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.274360665 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276044938 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.275079663 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.276415472 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.275582781 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275528911 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.277092317 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277327645 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273353965 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276239774 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276173089 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.276379164 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.272865626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.27488213 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27657821 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276198705 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.27578151 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.283351277 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.273991845 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278760589 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277680882 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.277572703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.275676968 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.276243037 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279319955 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.276983975 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284307547 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.295332781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.277567795 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283344875 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.293961299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.276532917 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27950929 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.276620053 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274864361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.280250678 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284439829 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.276341302 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.276504294 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.277014726 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276920794 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27786497 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285553724 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274373362 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.278018798 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277041963 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.279814975 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.274645667 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280196109 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.277989257 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.278615954 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280396188 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277477445 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278478873 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279283327 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278264736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.277677716 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.278635626 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281817323 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.286428629 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.285276119 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.278531775 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.280768636 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.281338017 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.281751039 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.279664814 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.278973867 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.279030036 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29104369 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287417568 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286137114 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281102538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.278915466 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285850171 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.280694635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284435442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279078313 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279620645 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279553868 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279972367 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.275935022 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280639379 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279080843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281285196 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.280688284 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.283051593 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.278745837 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.27993202 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.279083887 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.280210815 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280036775 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.280597476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.279729793 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.283220982 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282310823 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.279588345 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.280083219 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287107042 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2984914 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.281677026 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.280097095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280302869 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.279475671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.281460316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.279705217 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.285097684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.287705114 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.28421543 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.289885912 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.281920832 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.289309278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27933688 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.284833703 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.287948484 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.278970763 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281298254 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.280596966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.279761547 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288147059 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298850728 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.28297607 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.285289937 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281627823 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.282054283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.281012933 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.281629784 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28195246 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.281218522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290445772 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.300327523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.286597692 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28387015 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.278513223 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280720383 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.280991281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.281577431 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285944594 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.281721906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.281990424 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.282443392 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.282147422 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.281515377 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.282635056 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282258007 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.279844691 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281876254 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28936039 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300996058 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28627347 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.28247724 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.290272723 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281957318 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290531254 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.299793113 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.284264303 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.282541506 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282595775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.28486951 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.284425296 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.283889969 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.282548604 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.284730833 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.286603601 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.282326866 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.285738347 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.283605548 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.282082743 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.284161002 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293310194 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306509135 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.285754568 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287017115 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.281180127 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.28622275 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.287473003 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283566194 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.283845059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.287442694 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295355829 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291600019 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.28479889 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.283499825 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285418195 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284356524 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.283718613 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.284244434 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.283713996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.285430131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.285409298 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.284475601 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288421631 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.285241753 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.285803415 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286508652 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.286487368 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.295146678 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28515439 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.286571871 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28484473 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.285019133 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.286028071 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.285753874 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.285176601 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286728456 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285086737 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.288053499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293121923 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.292941207 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.288930504 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.285308652 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.285270933 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.286478019 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.286319599 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285579751 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.285771137 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28688245 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.287034368 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.285791777 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.288256518 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.285449309 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.286573331 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.287747785 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285717043 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290532369 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.293594641 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286373959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.283628612 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.286015146 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286648395 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.285061942 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.287538867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.293700787 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290260697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.298111749 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.295906896 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.290157672 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.287356355 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289722883 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.294433923 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.286439795 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286865143 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.287355281 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.288590896 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.288535363 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.290996501 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286685392 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.294133417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289800028 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.288057292 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294928507 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.306085256 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286432705 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.289449082 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.291912301 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.287829472 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284045956 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.287753757 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.287486696 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294197526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30827469 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288410811 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289968604 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286653254 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.290465702 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29240539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288682105 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.290227619 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28608591 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.289460644 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28811216 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289144479 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.285206773 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.290096513 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.288934674 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.292784617 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.29649103 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285662315 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29268472 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.290957998 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.290497062 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289132507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289815089 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288040854 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.287114083 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.290027179 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289512764 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.290487581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.292026136 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.289436645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.291171623 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.29092996 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290457942 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294339066 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300238908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.298028232 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287493635 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.289484612 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.291776072 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.293513003 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289679106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290066614 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290516737 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.291900397 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.289725846 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290706068 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290878526 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293612547 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306057013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307436894 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289419152 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.291084643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293939802 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289503552 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287936879 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.291287841 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293099872 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.294897836 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298077587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.29104571 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298493722 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308657166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.292107056 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294424077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.294313129 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298797568 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.294129749 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290355852 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291294501 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296213726 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307848828 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29112015 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302423812 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321686747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310504505 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293326464 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291959117 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291786948 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291339255 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.293510923 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291576935 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.293023806 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291753419 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292143752 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.293922708 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2984964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.29353711 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292214762 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.29215586 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.292355851 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.294212706 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289262618 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292068421 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292313896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293000841 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292926842 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292815257 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.293395558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306469461 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.302812972 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.293248328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292616558 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290679986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.297031733 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.295745687 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304510163 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.300651378 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293593484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292747684 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295630435 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293274593 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291234047 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.295468526 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294780392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293184631 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290375129 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306648341 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30232584 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.299484239 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.294642159 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294165437 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.293561316 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295572163 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293258117 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29363867 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296440558 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295527275 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297549264 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294093128 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294081487 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297661355 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.301307288 seconds)
  done (took 765.563636747 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292888994 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291378204 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291734934 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291392653 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292427853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292000971 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293054906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292468381 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291494444 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292517142 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292133189 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292731841 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291347717 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292658378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292172448 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292734529 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292816374 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29262241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291555861 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292663717 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292194604 seconds)
  done (took 28.362807268 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295203018 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292089385 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292402078 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295863616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291697662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29504211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292921719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296984567 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295033585 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292844487 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294731352 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295674462 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.29213885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292958098 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293106974 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295556446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296484976 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293652178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295231386 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294146631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296820444 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294206011 seconds)
  done (took 29.701833857 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.29488241 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297367548 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297532714 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.293342211 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297158148 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.29413744 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.296934203 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29692099 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.29655456 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.298599897 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296964497 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.29970996 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303658347 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.302207877 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.299049016 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.297449213 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.440936821 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297160146 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298091503 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29728051 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.295587547 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302467382 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.294747805 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.294841957 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297398788 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297472098 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297362622 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.296535693 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.29719612 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.299326818 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302478069 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.297486189 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298495695 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300258598 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.297241814 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299209219 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301663419 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298355223 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.296299909 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.297211683 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309325391 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.318594841 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298800373 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305062377 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299968196 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.298249303 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302347654 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306483014 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295172045 seconds)
  done (took 65.020153156 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298415704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297318045 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295963783 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298204388 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.299037164 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298779976 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299082423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298041909 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297323266 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296655859 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.299256554 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.297354858 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29762544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299145541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.299102809 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296539246 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296758121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29674809 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.296499508 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297127858 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.29699245 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299063481 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299648484 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297831741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299128721 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297821355 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29734225 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299097122 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298417555 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297210724 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299789496 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299587808 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300224164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296694638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297481151 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.300001613 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300658191 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.298393886 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300442762 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.297295684 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300492583 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30009419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.30047505 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.301263815 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298588675 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.297977325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298016515 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297841852 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298168998 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300980114 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30044281 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299135677 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301862096 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.297886235 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300841377 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302321796 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.297818908 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297835579 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.301149218 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299533468 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298585803 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300910708 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.299457323 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300655856 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.301491193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298584134 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299795148 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301483484 seconds)
  done (took 89.55330571 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301264446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301195242 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301376115 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301792288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301148998 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301550324 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301970247 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.301725646 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302781229 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302486118 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302273259 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301968192 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30207019 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302438785 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302295572 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303111531 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30270937 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301896572 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302306935 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302687122 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301888453 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302692948 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302061193 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303104936 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303207157 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302480776 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302691695 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303437794 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303011955 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303021488 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303309106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303478242 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304449585 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303079149 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.303760057 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303657573 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303355594 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304971693 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303884615 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303012736 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304630686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30434494 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.305055885 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304366485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303672371 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304915827 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30387994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304650903 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303965654 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304545829 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304012957 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30387 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304122916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303437593 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304381609 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.304669396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304065435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303959494 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303214586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304644758 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304746894 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.304749712 seconds)
  done (took 82.034158234 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303895423 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30541042 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30175383 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301282011 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304408349 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.302433902 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305068435 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.305469144 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304588818 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30560445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30486265 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303232643 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302949101 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305582369 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302338483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302174528 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302336584 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302345067 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305139746 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.302491914 seconds)
  done (took 27.30904028 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303116329 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306401282 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303411516 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302842648 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305380568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302938807 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305676335 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305394851 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303854133 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306034419 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305830946 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306525188 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304148141 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303789043 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306116268 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303700442 seconds)
  done (took 22.111298891 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303751613 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305176757 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305839504 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307350728 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304192612 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.304099012 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305668233 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304466109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304820099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30698059 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.306549707 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307978935 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307308852 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307037238 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304375399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307084109 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.305653438 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305416061 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307889193 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307298314 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306185273 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304728278 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307601393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306820052 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305860443 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306646935 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305039268 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305630037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305442621 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307485078 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304231604 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305672415 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305127457 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305032472 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307425952 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305593578 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.307335808 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308540791 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307576976 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308081631 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307547392 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306261445 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308276146 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308701049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306521708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30864317 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.305604971 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306930531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305876169 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.305799798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.308238758 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.30795304 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308714965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310075038 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309575794 seconds)
  done (took 73.097691892 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309146714 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308716408 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305818086 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.308898589 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309506821 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.306576652 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309055255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306488595 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306611153 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.309512057 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307259705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309925307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306430517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30903873 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308117497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30892122 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306760351 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30709969 seconds)
  done (took 24.783016871 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.307465994 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307770624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311542216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.307024894 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30696193 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311092287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307524275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.310248896 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310503144 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30798021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308094382 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.309629719 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309863812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.310399041 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30807464 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307854658 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.310857928 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310503976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307855556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307328511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310200675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311145656 seconds)
  done (took 30.040178717 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.311038149 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.310546617 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.327442385 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.351122677 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.34090838 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.311262339 seconds)
  done (took 9.192962658 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309426585 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311506422 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308642784 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311219037 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310907245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308535218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307973922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309449099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310565837 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309092974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307574177 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310092 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311234245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308152856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310804321 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311847614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307715912 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307866916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309016875 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310867654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307574618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310386435 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312881664 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308709018 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30765723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307469022 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310597615 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308307961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308022738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310921016 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311680347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308700788 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311267285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308844996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311640447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311015565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308282155 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311040922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31141088 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30887091 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311515429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311347792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31116355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309104837 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311192513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309584548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30928775 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307647016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30815399 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311197147 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311006451 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307584341 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312644387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310884298 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30954264 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310056381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307725367 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306289666 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311031604 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306691761 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307954895 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310190499 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306948286 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30758339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309455004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306606875 seconds)
  done (took 87.673936221 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307521766 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310140655 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304023103 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305779614 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304055883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302913179 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303839357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303649774 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304189919 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305935615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307804399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30360731 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304129264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303596941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303716491 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304452121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304337507 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303203065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303992092 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30737829 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303588978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303664026 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30332407 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304241326 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304508842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306026072 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303344429 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304004505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302949774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30389581 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304041723 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303364556 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303533811 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302592033 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303579425 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303546026 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303418619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303410077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302783668 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307932797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30268963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305300354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302885617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304140325 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303386427 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303058226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304383726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303897956 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30347522 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303233022 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303761234 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303858621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303339675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303741659 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303831443 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303254788 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304396956 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303043283 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302963853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30580027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303090227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304064158 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306414062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304348868 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302871083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304265415 seconds)
  done (took 87.317778558 seconds)
done (took 1783.267359362 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.339320296 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.299844082 seconds)
  done (took 13.873772135 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.469706725 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421745639 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.306506284 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.359803863 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305863327 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303643863 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.311800053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306343185 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.305642579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305647185 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304624835 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.495910154 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.36132127 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305868644 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306639002 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400315357 seconds)
  done (took 42.809368328 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333558889 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31217781 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424797741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32818782 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332899198 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495077968 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367802263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312725861 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.48447119 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350489049 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.929625972 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337329546 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310118888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.460697573 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33156705 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496539412 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.560294903 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.937652938 seconds)
  done (took 30.34268402 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.757796506 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.333387047 seconds)
  done (took 9.328412344 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.304573435 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.338639911 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.322796657 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.334560009 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.328263905 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.333691374 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.384999246 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.363619881 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.313654478 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.358053009 seconds)
  done (took 64.624386951 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329411179 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310979524 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309347341 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306704139 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298730723 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.300621433 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306708269 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.299558314 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.875143911 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435114284 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32804067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31266113 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.306331597 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310328592 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30561991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345900105 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.439248478 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304761902 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304604209 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313073103 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.307617651 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.390672111 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352032801 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307691846 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.433945414 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.899756827 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.314707367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315473377 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.417871449 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306653073 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308002641 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307787692 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311285324 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.87362177 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.820198793 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319050562 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334655931 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319704799 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305178014 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.43485153 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309434256 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314101158 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.313142299 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.786150497 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46936174 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424972231 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.592029982 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313896093 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310433815 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372989579 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.313430387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311392032 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339396787 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.076222234 seconds)
  done (took 109.909206999 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.348499444 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.789428837 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473489286 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32482586 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.103884584 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99734365 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305271106 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.588331338 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356897212 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303551863 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.636460246 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810635679 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310459065 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.3121399 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.968053974 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39697744 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30365192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.083312048 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.306686264 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.308719026 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720927815 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321439366 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306353416 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.463739045 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343725058 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.772556207 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.745482973 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.605543101 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312783495 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.305210655 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769025228 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312890323 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.340804452 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307049209 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.578896144 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67080369 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650929774 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.309852874 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335091683 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308175226 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.335362619 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770773653 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656238277 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308223561 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304762205 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777493881 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.307551927 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.306553395 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.312654962 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506278692 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.267302235 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306548245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.751941622 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.307427397 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.656505151 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.358353659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386143175 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802062667 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307727586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.276158584 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335725031 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305927941 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307844994 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306225713 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307719003 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657998042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419202258 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305810895 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658108851 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.768759483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30906078 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83352166 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.24006172 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317488049 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.379986981 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311766426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.893629281 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805474053 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.33922518 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306956523 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64753244 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.309178772 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.62972196 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323509384 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324850611 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72982711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.32932516 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.357635502 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.306110788 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319912908 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.939849071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310295255 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.58975902 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.361115408 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307095718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307481523 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328256715 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311660537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309344378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.309695409 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832275362 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.311627466 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.619118313 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328311697 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309723826 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310463251 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309047754 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30659694 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526839615 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.802468588 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.310915897 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308700324 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.307587052 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.317630399 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.455775839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310289917 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.622205799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310011248 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307884052 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.31496766 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.040412031 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342668863 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308908427 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.314129553 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.16053775 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519589353 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32693331 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.308742946 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310012651 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325942491 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.705728667 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312656297 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.347268155 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309217548 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013141859 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316885209 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.32676271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.942995006 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.319703328 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30893986 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332422708 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30911572 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616257889 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588025501 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.351806607 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309362903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.310142401 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002269236 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351089976 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459008038 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327184201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.339382713 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508499334 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744799117 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30977047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.890112223 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.310760166 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525038833 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311738366 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634264004 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801887532 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312652365 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311250979 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010314775 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.987247636 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.946891488 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311188005 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.643146514 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.31091244 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.763041468 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.311581693 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311395231 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.761425388 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314624358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319204967 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.312379171 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309887732 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.46879065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485915995 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.970496728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315597263 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777642768 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32789934 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311291333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313902901 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.310594376 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663561349 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.406031203 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312421756 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.353504968 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.311721299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312908539 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.793548272 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.264715933 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.313534617 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466002389 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947112445 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.314402723 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312782956 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.990343938 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.596324722 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826833592 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314751247 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626577903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.322030385 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.352308027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.043821571 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336494453 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79172381 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315697336 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.312100578 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911762863 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.31503662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.667072572 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.312362294 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313402731 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860166908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314604516 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311382361 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.713966333 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31530886 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562327586 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.315632678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.315749099 seconds)
  done (took 1106.992332881 seconds)
done (took 1379.11707262 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313372193 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316349804 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299531303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314628431 seconds)
  done (took 26.491596447 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320697044 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.318189542 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317462768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316752175 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.318011054 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3176872 seconds)
  done (took 9.154987538 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.332826926 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313552468 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314755853 seconds)
  done (took 19.207839653 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53553995 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.587267679 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.683240309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.503995588 seconds)
  done (took 10.558079818 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317764542 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318163241 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31823487 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319051331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321219933 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322671308 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318462585 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318803354 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321920248 seconds)
  done (took 13.122351183 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.230589479 seconds)
done (took 85.014663576 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.312079013 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.438410338 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.887141317 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.369112058 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.406713394 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.433818224 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.470873601 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.261046046 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.378551235 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.50044813 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.364490047 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.339978113 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.587893854 seconds)
    (14/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.411698627 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.352808876 seconds)
    (16/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.311740686 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.381177281 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.891169775 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181357885 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.29994847 seconds)
    (21/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.394611975 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.223810639 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.218587532 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.739502432 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400792628 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.174943804 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.787948495 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.940730356 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.325086511 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.315344909 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340887231 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.669847749 seconds)
    (33/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.746456336 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.612707738 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.072980922 seconds)
    (36/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.199545163 seconds)
    (37/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.401223712 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37664042 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.415284023 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.320331649 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.940309396 seconds)
    (42/309) benchmarking ("sort", Float64, false)...
    done (took 5.630096802 seconds)
    (43/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.350430999 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358344522 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.314604681 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.714218664 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.341635274 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.864679959 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733620049 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.442142672 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.313602425 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.594574061 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.334052338 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.314704827 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.41278472 seconds)
    (56/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.031368751 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.906531764 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.723388866 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.376896866 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.922232159 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.459900911 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.634174216 seconds)
    (63/309) benchmarking ("sort", Int8, false)...
    done (took 4.343778934 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.307035689 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.372128117 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.326496139 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.221609759 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.843515439 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.34471687 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.807883701 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695102493 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.108201492 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.729008834 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.934118797 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.737848421 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.334258215 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.950887115 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333618116 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439282981 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.315547905 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.754591137 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.683309788 seconds)
    (83/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.945780047 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.321729349 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.900856188 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466912774 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.530760122 seconds)
    (88/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.5716402 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.403101714 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.365960849 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.379647677 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.586664062 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.538773652 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.264248362 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.425622841 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.600120532 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.359461757 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.9777984 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.94965316 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.09918376 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304292413 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.482860037 seconds)
    (103/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.324168836 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.695804483 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.329153329 seconds)
    (106/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.314159253 seconds)
    (107/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.896418316 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.346235376 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335902428 seconds)
    (110/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.33471658 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.684763185 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422366152 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.079912883 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346418421 seconds)
    (115/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.081222625 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.319122779 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.487071513 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.426585717 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.640949287 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.552711417 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.304776446 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.650026146 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.346062245 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.344196856 seconds)
    (125/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.532517867 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.534206149 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.462227585 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.33576959 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.321450312 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.318717776 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.397048261 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.346297555 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.317715256 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.442054493 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.348602634 seconds)
    (136/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.799374839 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.760800772 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338847645 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.900265831 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.436055323 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.73776319 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330132295 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.329872647 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 1.840465236 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344317294 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.716260232 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.578567732 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.969352291 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.610769209 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.617713879 seconds)
    (151/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.686657199 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.337858125 seconds)
    (153/309) benchmarking ("sort", Float32, false)...
    done (took 5.331078272 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097617276 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.602194942 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.334151897 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.516907984 seconds)
    (158/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.421932008 seconds)
    (159/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.121955957 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.665160984 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.214999813 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.424451637 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.617583886 seconds)
    (164/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.44812119 seconds)
    (165/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336823751 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.105231357 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.307868173 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345944309 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.304505381 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.855402479 seconds)
    (171/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.349523074 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.358679608 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.183607834 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.370829303 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.886435665 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344912461 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.192652352 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.713538911 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.334315461 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.325508635 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.699834314 seconds)
    (182/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.513450587 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.322952546 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.057357246 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.937558328 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.68673492 seconds)
    (187/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.342477054 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.236268049 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.684902453 seconds)
    (190/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.685336524 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308713646 seconds)
    (192/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.057292476 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.345104413 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317300061 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.984796758 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.42193237 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.835935935 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.32400045 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.348559454 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.793997101 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.298820393 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.489515183 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365009559 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.906775731 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.674223386 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.521381128 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.348684005 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.180571828 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.447015439 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.634808685 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.132869503 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406827085 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.405005618 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.381019253 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.323436611 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.592978801 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.852805369 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.171852688 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.33517483 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351483608 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.312014171 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.381961396 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.315328086 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.965014384 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.537942448 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.446187585 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169013562 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.750468792 seconds)
    (229/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.696318702 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.700230299 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.10324119 seconds)
    (232/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.352054361 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.39346515 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.909404716 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.818443896 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.514927893 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.311147498 seconds)
    (238/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.940978607 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.465860758 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.34825118 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.395867688 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.822217101 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.352326147 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.408128478 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.722599103 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.931796417 seconds)
    (247/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.366747849 seconds)
    (248/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.403288237 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.460938272 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.308479882 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.342801674 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.341402413 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.327186963 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.328804504 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.323762963 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.346950654 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.343517873 seconds)
    (258/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.956107522 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328495981 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.746928523 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.236123743 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.172237314 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.327635253 seconds)
    (264/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.653724153 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.408175897 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.839208781 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.277225654 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.543643554 seconds)
    (269/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.008138586 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.385142566 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.334208821 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.3503192 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.615546991 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.400547288 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713228416 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.25583076 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.341733001 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.722532327 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.432122426 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.820360753 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.435650427 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.31083065 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.995178852 seconds)
    (284/309) benchmarking ("sort", BigInt, false)...
    done (took 6.329035202 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.005287517 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.987672819 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.666474901 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.79530081 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410044443 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.224035535 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.336020234 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.251726997 seconds)
    (293/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.730883691 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.4068076 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.742570212 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459264708 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.571693599 seconds)
    (298/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337845306 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.091736246 seconds)
    (300/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137934731 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.341801484 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.370158826 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192184872 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.747402593 seconds)
    (305/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.953911858 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.505985093 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365472403 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.196188053 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392470178 seconds)
  done (took 923.216061698 seconds)
done (took 924.465056312 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357513659 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350356592 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.334375776 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.355996703 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.445656278 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.36326329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34521911 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.336893192 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.382313865 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384385308 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.333158269 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.361199458 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336833467 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335203384 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334529443 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349164953 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.409644944 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.339320566 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.352153449 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.344816944 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352157465 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.334439921 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.383770092 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.362339635 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.339451011 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.339286556 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.338592239 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.355630681 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.447162134 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.339718746 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.339730639 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.346988409 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.410250637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.337565583 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.330196943 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.356836004 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34796778 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.345394058 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.339950137 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.368513501 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.824599873 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.339165995 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.338401576 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.338017083 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.336832523 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.341350494 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.337908193 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343310939 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350134607 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351280723 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.830769451 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.355005195 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.340131555 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.338036118 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34827332 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.337070873 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.340778515 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35359488 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.357271577 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353378164 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.406429288 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344732852 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.33933958 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.353681917 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.345842317 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.8803302 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.335162065 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.341915998 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.831735382 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.347061702 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.880798325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349225727 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.337910658 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.352629546 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.370685521 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.41784212 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336519139 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.337360984 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.346246924 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.336511847 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348217985 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350825853 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.343091737 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.339270455 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352089028 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.367109818 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.348757749 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.340858079 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.348102393 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.35923668 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.346716263 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.351159886 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.342654703 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334700476 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.349380233 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.342524393 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.342338614 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.341933384 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.34462772 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.349471516 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.832509453 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358865851 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336127262 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.33699254 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.338665777 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.35428079 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.838346417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.34409157 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.361817141 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.387969214 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.341991843 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.412280695 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.346761131 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356610476 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.348788026 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.343571392 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.336422793 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.412840317 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.850959113 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.358780057 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343011538 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.338664533 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357016754 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.3424774 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.337144232 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.426091755 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.34542491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354630986 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.461896781 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.351693106 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.373073171 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.339068664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.344709712 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.374195483 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357642124 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.373372946 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.343869051 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357485626 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.357638505 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.338419611 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.352425242 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.352958736 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.343233332 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348349847 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.335609786 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.369678406 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353865441 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354825094 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.36277493 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.463223589 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338958607 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.417254648 seconds)
done (took 227.137234003 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.418421881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.341419245 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442239281 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.340405837 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.457235335 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443327496 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337600973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.337747444 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338671205 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.781820416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33819175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.338717118 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.340699141 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339328317 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442379202 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.341069214 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.337998294 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.682075578 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340748907 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.424330746 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.338381099 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.339224698 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.341305157 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721389207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.335804695 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.338323199 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413002089 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.340839252 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.765982448 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.343086654 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.33567471 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.685922654 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.431248157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359160313 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.350737864 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.348920878 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.443345871 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.361414187 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.422663062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440729 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432941758 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.380414034 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335651188 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343733819 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346893757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.343484212 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340633804 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.369494423 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.336960978 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.340899423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.738253718 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352997151 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.340863804 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.341035625 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.340554876 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372107659 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.34099807 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.343305246 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447898634 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.343577101 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.405512393 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.788639634 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.722136913 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.343534098 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.341094741 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.341776047 seconds)
  done (took 149.367210565 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411741971 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.418955266 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457924142 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.34748865 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.396156284 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.462301164 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347945459 seconds)
  done (took 11.113530908 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.350947525 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.344424493 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40009611 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400511227 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.343963572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.526786909 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344514252 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.355452254 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.342275893 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41249049 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344767985 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345709369 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.350804321 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343331455 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401288894 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356741266 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46013254 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.346088832 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34555781 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.497055034 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341718357 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.351414443 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398544037 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357534035 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.34523976 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.351396643 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.983054191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344426508 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342552935 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345377864 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341671857 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384110189 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34649007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.345360905 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344260422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499715345 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.345780137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343415758 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.347404603 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340979426 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.345919719 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347019471 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.346626713 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.344010269 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.346003962 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369201853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.345853823 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.346479821 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347126082 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345988088 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.410363993 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346536443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.343517419 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.343893238 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418244079 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35378805 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347290353 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.344571066 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347292318 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344600365 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.49910074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403561901 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.34642037 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402234568 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347999769 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346910672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.347259485 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347795476 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412057458 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347481441 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409439951 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345584368 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.551245074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371048189 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348561863 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.350160278 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.350571506 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34749739 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.342757578 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353240018 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.345445321 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349108152 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.354714762 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344527037 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344727916 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.482583642 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487543339 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345457898 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.361358294 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.354997406 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.34594488 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415240839 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.348298301 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.345558451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411960801 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464291539 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402308038 seconds)
  done (took 154.846886749 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.355556328 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35883489 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.351339537 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366595316 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350965843 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.349324285 seconds)
  done (took 9.409002247 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.35188611 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350975977 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.349229598 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350098487 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.350060754 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.348818248 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.350138513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351703966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352416741 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.349183084 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349087187 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.35051113 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350757187 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.349051897 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.350912845 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348754506 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.349622766 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.34757148 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.349759153 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350016047 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.445638437 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34933661 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349978088 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352053251 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353156109 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.349805131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357550483 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350396726 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.350068548 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356915569 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.353507302 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.350560946 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.352107176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.357663652 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.354751962 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.352920509 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354571369 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350912614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34812419 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351428389 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.353130007 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350340291 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.350533003 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.352246941 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353577008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356613811 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355025428 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361934796 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.351140226 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.351924204 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351394819 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.349961408 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351106623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.35177658 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353686622 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357546608 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355783875 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352160549 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352653014 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.35305451 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.352887357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352020436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352884106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356618833 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358122071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.353617973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353624929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356178642 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351727238 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.351375976 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.352551911 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.349383643 seconds)
  done (took 99.728675837 seconds)
done (took 425.734545659 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.706831206 seconds)
  done (took 7.985472127 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.496855512 seconds)
  done (took 7.777258202 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.834325966 seconds)
  done (took 23.120976145 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.357323836 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.458344763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.378752704 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.356109896 seconds)
  done (took 26.830424027 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.898615371 seconds)
  done (took 8.178848499 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.344791216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.346326968 seconds)
  done (took 13.97199686 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.433213225 seconds)
  done (took 7.712841308 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.083868127 seconds)
  done (took 8.370509643 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.346272209 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.355930397 seconds)
  done (took 14.237114508 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.349974813 seconds)
  done (took 7.630506095 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.359016866 seconds)
  done (took 8.639726038 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.344674333 seconds)
  done (took 7.626000454 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.414214666 seconds)
  done (took 7.694428051 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.63465226 seconds)
  done (took 9.91558835 seconds)
done (took 160.972026225 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.345985238 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.351419049 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.350446133 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.351178584 seconds)
  done (took 26.678334143 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406497686 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387089155 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38923969 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.397615786 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391189774 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.386786162 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379816025 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.378965295 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.398217119 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.390671959 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389317137 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.389876042 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.386590341 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379025884 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390296744 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.389004186 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.399062216 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.389006277 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.379166217 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390636641 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.354185232 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399033547 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.390032319 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.354522339 seconds)
  done (took 34.568239886 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.555222211 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.428279735 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.509208259 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.407815121 seconds)
  done (took 7.181213403 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40657723 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.407696266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.422375499 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.4594562 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.485471251 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418148755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382896924 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.376083335 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.362757969 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408228807 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.483357486 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423805046 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.493071245 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.354849636 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.54201636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354897584 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.355302934 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407677834 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.458452602 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.476394055 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355824774 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.406878377 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.411933348 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425418901 seconds)
  done (took 35.362898685 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.353517933 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.363062809 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.361081769 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.354746376 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.354806595 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.354972487 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.361217936 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356631722 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.376128671 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.356306877 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.353841728 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.355119963 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.354732867 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.355919429 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.354791359 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.368315836 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.368928037 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.356170194 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358835452 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.361541171 seconds)
  done (took 28.464555631 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.349375072 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.2039006 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702691877 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.606977611 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.351447128 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.351055213 seconds)
  done (took 27.849658579 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.427652784 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.573253568 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360753249 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732653069 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.81526477 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.360763483 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.35749287 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.609202428 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927514855 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923404157 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.417554639 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429339128 seconds)
  done (took 20.219232084 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.357811205 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.353905528 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.35360344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36968843 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414133848 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36426205 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365024788 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.351385902 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416999808 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.421059401 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.363665561 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417174444 seconds)
  done (took 37.834999119 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439391018 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398999113 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.345119301 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26058953 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.526902952 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564808543 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.269401681 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815024924 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.356222268 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626762425 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351464371 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444332019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610460105 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352199449 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357003166 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.394249596 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580794624 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874883091 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355552451 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.491621558 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380716624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357822784 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.670749299 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.383426109 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564460077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33530749 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.612348533 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.130644382 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64701002 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366864176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362672029 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353188975 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625969006 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008588176 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447716907 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363193363 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28657106 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.901864433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.340742762 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.572349321 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371426139 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357805402 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363626771 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353751061 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287574517 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35308597 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825025589 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359709704 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.064878942 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35399061 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364290735 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448923463 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357430862 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.926567753 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485498386 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358686551 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.351853283 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359944874 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926498105 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036671857 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358559794 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.291448943 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.902963577 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551625737 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025000269 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.457652886 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358320672 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358551849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289987185 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.52306466 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372900937 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492144245 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.379983138 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016337318 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108501133 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356428235 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304624379 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934309572 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365765618 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.29235273 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583496588 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131057101 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294899507 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302325011 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289699662 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081486776 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364529218 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.785906922 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364263101 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816037178 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365476482 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371726468 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3790325 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.580863533 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.240440152 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355068184 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.371983527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475152501 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376603081 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.821656385 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289996256 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357887215 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613989721 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567102676 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366180427 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.387094652 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581319739 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361584655 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.372455362 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369216501 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.369506453 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.984683855 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370198391 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018845328 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375004658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.132954912 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120901639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361769187 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.459638064 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361508576 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614137166 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152351055 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243417918 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424373866 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359984284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356534963 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572331757 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211041266 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.264224205 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.360830295 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36125282 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.37139101 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.357250758 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319650729 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.354429718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369452716 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.137531964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582560981 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365121291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635379096 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291847204 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495335974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373823832 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.581646045 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.601910428 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.36007711 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619003218 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357807427 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361093048 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371757226 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377776328 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454974543 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379996966 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.359472404 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619302613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.361909809 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363395872 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.565315345 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.141479095 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362816814 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.364794401 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323294786 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989631371 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331545807 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368367609 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252981879 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.373041596 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426185229 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364652293 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368838537 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.215004305 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.410692143 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.364482408 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.36710827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585664488 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370698933 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.565670932 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442332496 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.576429733 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995119146 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373685125 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.294577277 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.07007365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.052828696 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360132627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551110896 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36024139 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369179402 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370083059 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.074871152 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995343071 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364632879 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.488202078 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.368753252 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370964649 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366532105 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360435324 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.204718426 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050586999 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370874901 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.375187569 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503693467 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.374794478 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294928837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877452348 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365974569 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36145884 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.136958879 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395898799 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.494035256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860421237 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621975128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.261812978 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372125203 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.604534249 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395312717 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360356028 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361690104 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377985961 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.367843983 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373331471 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.373409293 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.505051146 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.813634829 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930926421 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131446789 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937245168 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333564857 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.378295285 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265778483 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831232605 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296835754 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.021738879 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556743002 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833654719 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319174677 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584169688 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.603411057 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149553259 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375454993 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591486147 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328514353 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.369661418 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377495307 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574896288 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398182255 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362349685 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295222578 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.649757051 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641034791 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374160994 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445849468 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830692637 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378110812 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143634467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.363771734 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.731635895 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542483834 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993298351 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760669116 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369548131 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379383069 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86077725 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372793817 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893794903 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036067885 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377304076 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.58578766 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303911423 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374830986 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374462011 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.365325191 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.718010987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.373359886 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624769568 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376446532 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299012586 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370043155 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944664317 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.224018658 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.370213893 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365627653 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130035328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373413432 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661946451 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.383241292 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.193878702 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370236449 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299151994 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298489605 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.058349011 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367375528 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334021888 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886286507 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.860043652 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477531769 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394236514 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215685504 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623507227 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.379829993 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003780716 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593556703 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.371213655 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388325105 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.465295411 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365577905 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.353753544 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261043309 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602291413 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329366807 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.5906875 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.338507083 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.272841767 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365852818 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577648808 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261672553 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370682873 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618550017 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.076410506 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.384386571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142881649 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391322785 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375800274 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386844319 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.915666272 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374047788 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435935333 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378421819 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.377799946 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3778056 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546342493 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366397053 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371801603 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.381873087 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460846038 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079046353 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.20190474 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.142700895 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012391785 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150746756 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009728726 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382426271 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368480519 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367648772 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301773216 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516167631 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8972538 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642060205 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487842746 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.036223123 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389658315 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370736497 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382050537 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582531614 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64303432 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244173593 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371794216 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033456008 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.250063786 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379981139 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.580703314 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893837836 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955321954 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483680253 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375084246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837565754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642910953 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461699197 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369582234 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962229842 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.36997695 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.776201258 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.37668269 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369850486 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518952898 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379825081 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029040975 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377669109 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.526424435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.143976364 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.537017751 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629837299 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.880438914 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.38174795 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013082974 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142063536 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636325375 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43983428 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380799821 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.487084977 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515097851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.368936735 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.254953227 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371271763 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219051846 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.080366653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.380858665 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016576856 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639945668 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.367694629 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.368483296 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395962428 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381652143 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595042605 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109291275 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596999003 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380638045 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373585761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.944826844 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01385275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385126098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306242476 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.374254513 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619345874 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606903381 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395428163 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.824666345 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.082691922 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957712827 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.347963993 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392828953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378442703 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145115736 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01567418 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.21372007 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896022342 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.033574615 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37845048 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649040852 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376822892 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372540871 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652477265 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376279334 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376336846 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386146072 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014355471 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16669569 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.399514852 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.574835475 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.311761094 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.601443469 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140854196 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308840257 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372126351 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.5670367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373270013 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493204993 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384863518 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.372520827 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386859221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.109009313 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653122363 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.378312255 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.358559227 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.363764264 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394048505 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384047912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652898319 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379534679 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046814906 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.72613055 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631358176 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383339775 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.361677775 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.377476891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373888235 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098845014 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352753823 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.100842297 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960585649 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.382801169 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.387145324 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378107542 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.59105223 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586465966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377447495 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389374453 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385748858 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390296343 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.280675087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147097782 seconds)
  done (took 1607.991553971 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.382434742 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.399334058 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.419456862 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.47761944 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408833114 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493889274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.391282431 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508034736 seconds)
  done (took 52.788707204 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.381070434 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.531577511 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.40730512 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.385329937 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.387489404 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.388331176 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.85983672 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.389774609 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.388001901 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.385382056 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.375238397 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.391240926 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.08200941 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.387315619 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.388946398 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.373399754 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.386562536 seconds)
  done (took 66.202149613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.379333406 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.465958769 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.487081208 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.378903616 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.581132983 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.389546159 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.527963511 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.397295834 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.390612479 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.759738534 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.028632264 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.39987343 seconds)
  done (took 80.495390702 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.3851258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.383927143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.385177837 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38537998 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.384961452 seconds)
  done (took 8.23399218 seconds)
done (took 2035.153780595 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.619149424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125308885 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.041350564 seconds)
  done (took 5.475956994 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.527535799 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.576564704 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.708856721 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.706947072 seconds)
  done (took 7.831888623 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.661676509 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.753221759 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.571027061 seconds)
  done (took 6.297789476 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.832319486 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.390484438 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.502715941 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.379597874 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.380190141 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.381892209 seconds)
  done (took 20.454105388 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383493871 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.384970346 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382798683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.386363625 seconds)
  done (took 6.849602021 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.365638163 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.07362792 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.368196156 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.380592373 seconds)
  done (took 18.500721258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.131149625 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.144134132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.128963295 seconds)
  done (took 7.716343541 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.380110245 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.223097425 seconds)
  done (took 9.915861296 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.683723597 seconds)
  done (took 2.997046066 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.515378607 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.710995341 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.548283657 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.420910888 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.552730019 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.358325445 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.081431257 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.64774027 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.395434609 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.628203045 seconds)
  done (took 29.172902771 seconds)
done (took 128.867634249 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.251681028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403506252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.586737745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.222769147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.614311744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.589603976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.668933475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.191335256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.891399211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.724100247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.227655965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.610794457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.623785323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404886594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.6233082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403543697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.612951857 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.491666019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.915217932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.11245161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.668017974 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.864781797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.061709654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.040965466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.614237975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.538415136 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.444338585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40455319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.085473804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.623854183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.542112114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.291709832 seconds)
  done (took 192.66536883 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.382156095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386145523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382378002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.382508461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.383131151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.402287186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384686542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.397944549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393406571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390130412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381889666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.389177699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382819261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397743896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.385416913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398312228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.395487719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.386053694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409462027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.383383643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383662611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383555168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.383524031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.384059973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398970329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.383163349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.384306934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384434539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.38357768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.38431709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.386957793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388421036 seconds)
  done (took 205.740956434 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393426186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.38815192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.386832992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.39689625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.383952788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.388890257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39551954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.386583942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384065017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.401929545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.38601806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398836586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385805797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404135866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.38626762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.401250778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.388658816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.39699711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.393177246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389783493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.398266688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.386108248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.384648493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.393642665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38799981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.385670616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.395344444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384584861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.388757483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.41513601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389904515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40333565 seconds)
  done (took 205.867729646 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.589794834 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39130072 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39266641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.348563251 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.393004895 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.392738172 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.385505808 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.582244197 seconds)
  done (took 14.794373823 seconds)
done (took 620.383253681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.80882607 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.505218309 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.597820909 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.415049517 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.261025826 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418799106 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412216939 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.590350667 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.343548504 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.596710825 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.715089953 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.413749466 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.864958986 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.414559197 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.669791979 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.514761434 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.309894285 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.427662912 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.742141737 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.010493316 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.680097102 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.942347871 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.591591704 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.354404389 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.867024974 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.943940277 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.157805605 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.314518409 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.415674333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.741992876 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.171274872 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.42022582 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.479161209 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.457597306 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.51466632 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.493883904 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.3886113 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.458016192 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.602508672 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.705586096 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.024872479 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.163214185 seconds)
  done (took 95.242467165 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382226863 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.382785143 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.382504083 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.382343616 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.384130261 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.382796796 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.382767431 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.382262736 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.382965086 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.382418986 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.383457003 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.383816343 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.382468495 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.384454217 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.383024716 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.383930897 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.383252043 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.387359983 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.383047491 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.38327195 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.383124176 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.38288182 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.383849727 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.383126702 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.383850192 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.383321749 seconds)
  done (took 37.287712703 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.395854806 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.65812927 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.827579956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.405377416 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.396223436 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.402068964 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.476452745 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400618809 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.399505551 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.400405534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.553268984 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399510166 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431025661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.85612702 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.401616954 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396200453 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397508355 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.397619795 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661170469 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410153759 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.496028578 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400944562 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.476646914 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.409992287 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418242016 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397339917 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.402022784 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.924866352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.403689002 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.555220034 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.207680014 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.478315775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.881876246 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.838797645 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.21181824 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.402881681 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398085376 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.560167689 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.40296753 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.398654289 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.478615962 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.40244251 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.831761449 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.038746565 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.418405015 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.398117464 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.947847188 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.565636478 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657693855 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410202999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.856263179 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.406384609 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399541952 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400312446 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.654547685 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.408717368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399041126 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.948830983 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.423085227 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.479817426 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404015144 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.399278234 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670392809 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403166199 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.658459303 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.404412833 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.408757648 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.401227764 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.834632888 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.405249138 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.062828777 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.420593126 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.399955209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.557908201 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.662419355 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986107587 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.406862817 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.676052217 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.897019683 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.481677691 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.407473837 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.91450793 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.486964851 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.406661262 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.401944359 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402064651 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.400303781 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.446297315 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.478866556 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.982862429 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052657629 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.969994444 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.501001917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.415936655 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.401072244 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.949860133 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.421068793 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.401864692 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.831429381 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.06259855 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.421649988 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.408741122 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.045638225 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.423892801 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.481781237 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.411038745 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.841853337 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.40624241 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.447866 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.401863792 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.409213097 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.405849971 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.482758578 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.407024536 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.401799668 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.030290286 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.582518151 seconds)
  done (took 184.07167852 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.412165263 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.396128958 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.396365461 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.410531194 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.395006141 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.401598834 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.395363521 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.396597536 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.401191904 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.395642166 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.397068239 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.397547274 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.396734346 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.426321608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.406129377 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.403239872 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.01076187 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.39773627 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.3972275 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.396002519 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.209694981 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.400906861 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.399145903 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.396464329 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.397031896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.397624342 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.399372613 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.398748059 seconds)
  done (took 153.957298746 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.404280512 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.997772271 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.407909855 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.540919206 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.428085894 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40178206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.537581929 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.464964804 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.40563169 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.401358258 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.402479488 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.7220223 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.407505577 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.945511971 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.601205043 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.543597068 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.949715434 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408671754 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.403044493 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.402381375 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.540758269 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.415411003 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.72158873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.003144916 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.41026281 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.001804951 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.396680591 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.406632955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.403989891 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.001402381 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.405996753 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.725589297 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.486316541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.46596265 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.001496742 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.950652907 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951371482 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.559270106 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.406174328 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.403145145 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.403350282 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.393530435 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.006330288 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409838852 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.406714712 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.997082369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425951117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.406358171 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.414663993 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.403220648 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.46660146 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.468950606 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.730292276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012124342 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.488096552 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.426988728 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.542256414 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.794671483 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.41065491 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.950230354 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.397347209 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007072168 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.411948291 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394938441 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40662596 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.410259579 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.558409236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.542936963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.952916718 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.411059073 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.951739841 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.561347402 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.405159447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.405205163 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.407681486 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.009988193 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.954600385 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.562175129 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.543297936 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.606206265 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.398082438 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.406428126 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.39492507 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.485873449 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.406343567 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01000926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.954517431 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41087795 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.40741208 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.408247347 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.407739634 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588148153 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.015977274 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.490380234 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.946592949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.749929019 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.732602138 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.411087718 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.467369875 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.407659372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.73385824 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.412393289 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.465929519 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.857255781 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.733783623 seconds)
  done (took 167.930301968 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.66302686 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.604821095 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.502533318 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52314969 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.009994203 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.976431855 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.741680918 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.533037777 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.521259586 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.656686624 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.606290412 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.499975467 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.577290477 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.508418562 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.147213444 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478282632 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.500574369 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.535120821 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.506162562 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.445128028 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.064792583 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.712949683 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.583136879 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.451248496 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.50627 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.19246524 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.966334174 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.948337097 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.589694819 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.744382026 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.955712558 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.521345866 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.405155742 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.112004785 seconds)
  done (took 67.625662444 seconds)
done (took 707.435152698 seconds)
SAVING RESULT...
DONE!
