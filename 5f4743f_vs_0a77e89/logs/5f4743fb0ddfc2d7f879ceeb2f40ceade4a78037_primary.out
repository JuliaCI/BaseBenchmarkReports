cset: moving following pidspec: 9584
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.955099085 seconds)
loading group "string"... done (took 0.533866453 seconds)
loading group "linalg"... done (took 8.806212913 seconds)
loading group "parallel"... done (took 0.167863665 seconds)
loading group "find"... done (took 1.42714359 seconds)
loading group "tuple"... done (took 2.069325278 seconds)
loading group "dates"... done (took 1.347040551 seconds)
loading group "micro"... done (took 0.215142256 seconds)
loading group "io"... done (took 0.626199825 seconds)
loading group "scalar"... done (took 42.988242448 seconds)
loading group "sparse"... done (took 13.918269834 seconds)
loading group "broadcast"... done (took 1.120657907 seconds)
loading group "union"... done (took 15.100149325 seconds)
loading group "simd"... done (took 5.338177841 seconds)
loading group "random"... done (took 10.735818611 seconds)
loading group "problem"... done (took 2.248953138 seconds)
loading group "array"... done (took 27.623151839 seconds)
loading group "misc"... done (took 1.155021944 seconds)
loading group "sort"... done (took 4.04075157 seconds)
loading group "collection"... done (took 23.22863983 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.652642446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13681683 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148031952 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.19716473 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208436001 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151912802 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165039282 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.566670074 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987403411 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211052754 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141941513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.552617881 seconds)
done (took 5.85215966 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.296371197 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.445328771 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129456037 seconds)
  done (took 1.269078837 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075352044 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.176787875 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093442017 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111789551 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111577558 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.1106698 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110399081 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.09460534 seconds)
  done (took 1.493207776 seconds)
done (took 3.825657953 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.478409823 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.971528591 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.51851686 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.137587661 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160875334 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.151300762 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31558375 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.179424436 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.123594511 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114033081 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173625674 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.378734225 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.48752415 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.987027128 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.112634374 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127395761 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083502253 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.775101781 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080721907 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.147238712 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536789518 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115021226 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.131001529 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143316381 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20589133 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116527427 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.18163857 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.112877032 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 1.042408259 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104804715 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187467617 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099676243 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162877738 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.253338466 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097041117 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092674519 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.951658311 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191984997 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115914008 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096901139 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.973276931 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081742872 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204626246 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107968336 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.123645472 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19720244 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118916344 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078715712 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103434436 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102439237 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.185344559 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.632073634 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10730088 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.150616461 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.10931796 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.783099852 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098303837 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158375021 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14251198 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108741834 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.098452764 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.12194552 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.182703423 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109748202 seconds)
  done (took 21.254102202 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118019636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140701077 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095122284 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140115312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140568183 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097743345 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082560044 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094917358 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126658617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186059436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137662149 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128275787 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092943789 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078596712 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.120544866 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249358686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116985754 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104227642 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099089432 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090481978 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142707571 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113287267 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092315974 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11090874 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171434948 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209082402 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124309116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125473809 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08008484 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115139833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144958055 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164659626 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075638046 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095081506 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182622716 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122646844 seconds)
  done (took 5.211871038 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202205018 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118473002 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134020247 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193545358 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182867801 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150871023 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170073735 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135651144 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254732661 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.188512047 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187938486 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132363435 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095321508 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095573159 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081659195 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094982358 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720335056 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181966506 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153663154 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12629484 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089736795 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09952135 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099335413 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085878503 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099455558 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085927682 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.136396424 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.461635771 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18141886 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085484522 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.26172839 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121638452 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110581921 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115672236 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219191115 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130568958 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125310091 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104939421 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102614963 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219076314 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111491745 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078188604 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124684424 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132775927 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117167397 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102663038 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112636288 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.228139158 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.101405669 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121399023 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.111568037 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201496492 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0968464 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099682741 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.35462656 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120940325 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086871047 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101709678 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.13128283 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.330705367 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131303378 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082664195 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096366002 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087416379 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096022935 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.809544661 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092203661 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.585603674 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095434442 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160364519 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101895477 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109286723 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086192528 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104358978 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102835708 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099817487 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079088675 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100581642 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079468984 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10420408 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118144417 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085643567 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098303413 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148824355 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117359853 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122709651 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111222076 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103238916 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096947961 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114719205 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096226712 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081719372 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.148690757 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107249626 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081514755 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120417001 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102780896 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145308637 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097170016 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217529671 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097121306 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126399776 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086892946 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131392489 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121528252 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098492928 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084019059 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096464579 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080849316 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16450479 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081968733 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097866801 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085436146 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112944218 seconds)
  done (took 25.225740864 seconds)
done (took 52.374626098 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458894612 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098240464 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117942991 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.117413909 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.11569535 seconds)
  done (took 1.66946848 seconds)
done (took 2.403250448 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.363872281 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183970944 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121502125 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185437282 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105075612 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191815965 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.170364414 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119834464 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201426109 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100823772 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18157127 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102842806 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105822573 seconds)
  done (took 2.897402459 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095570258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120997874 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081990163 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112121751 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075785266 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111273455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092024934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14013173 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09273265 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104047912 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076557168 seconds)
  done (took 1.830232637 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092274386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115798657 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081641652 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109080921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075888022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107491974 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090288011 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118858316 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090691151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104180273 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075468218 seconds)
  done (took 1.793596218 seconds)
done (took 7.243553281 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.071299059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.417208123 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122113154 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.171410171 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352810795 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214577357 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.532451412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135476444 seconds)
  done (took 11.94500371 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112861022 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.116510687 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10011536 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080879889 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098848119 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081232884 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095824099 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083470336 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100575166 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084820082 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100435639 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084057428 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096403101 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083372489 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098926682 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083794327 seconds)
  done (took 2.298054602 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117628235 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116267466 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10583428 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110470206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0855925 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10366314 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088505102 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103795821 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100774464 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086190943 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109471395 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090024228 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106535378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10028241 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087452852 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108708505 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083812268 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103962739 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1054724 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088276901 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107794311 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08493263 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106092239 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107407143 seconds)
  done (took 3.258281491 seconds)
done (took 18.232512333 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172470454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08579131 seconds)
  done (took 0.993991036 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102948862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120662246 seconds)
  done (took 0.965537794 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108719889 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098841877 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138366972 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11690781 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083897413 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09961036 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133248465 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083005005 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100089273 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082974288 seconds)
  done (took 1.787658802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086997839 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103403846 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089504271 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120188257 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111553985 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08347967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104192511 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086504387 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106466843 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080703213 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107386582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118399679 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089633598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120464761 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105883995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087617487 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109187547 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103857337 seconds)
  done (took 2.559975958 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082459647 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084424046 seconds)
  done (took 0.907894947 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0847071 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097579223 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083451205 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100857864 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080596139 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097498449 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07970673 seconds)
  done (took 1.369400915 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.697409768 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243455131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348411732 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117164909 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137331139 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.389840169 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.138947325 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115289704 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.222619154 seconds)
  done (took 3.197943901 seconds)
done (took 12.521815293 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093924356 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.193832132 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.531370373 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120945401 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079751443 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161590324 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.263563463 seconds)
done (took 2.197243788 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354885021 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.127291661 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090966051 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08026677 seconds)
  done (took 1.396616911 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080827897 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105294225 seconds)
  done (took 0.936729186 seconds)
done (took 3.087995108 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111706978 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098867726 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079966926 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098192012 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08083307 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09917508 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077081332 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094763956 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079007358 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078535796 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098072869 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079028401 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096343459 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079727479 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094057945 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076656948 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096989459 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077161902 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094444952 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07743782 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076477704 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097177012 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076917853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094237038 seconds)
  done (took 2.900179433 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101470494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098586121 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086186563 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103503072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10260098 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085456924 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103482283 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080178882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104229517 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082378849 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100810724 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101268236 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081704875 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100869805 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082648073 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102383583 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08728695 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097870257 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082396786 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101201883 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103339015 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080633214 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101703147 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085920117 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101077441 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083815492 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100494546 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098422552 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085802787 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10201187 seconds)
  done (took 3.581503497 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088885631 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077009593 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095992372 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108066519 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077265421 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081352935 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096143511 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077776587 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095934118 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077300114 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098286863 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077384938 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095859339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079682405 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097422657 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084584665 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114142217 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077940409 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095616704 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078669185 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10148888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077858443 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099323258 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078056923 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095519052 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077980652 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078109166 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.095369586 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.078719356 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095681799 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083349607 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102618259 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077860775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108271092 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084318288 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095876064 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085957849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095877375 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078513533 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096613145 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077360224 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095665971 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078043443 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106670706 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081704658 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097617275 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078619894 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079090347 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096747701 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080340363 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095875824 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07713893 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098612699 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079916316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101187137 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077669959 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096617916 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077114626 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097320155 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077433625 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096238235 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077402088 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102748841 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078893917 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119331106 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090199991 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096043416 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079850918 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099997508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086055885 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097920399 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096857214 seconds)
  done (took 7.190030904 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082841672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106992859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080044621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098825615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075850004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096907588 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085718995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097222746 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079891892 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115801466 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078315847 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098511857 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079856597 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100556686 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078581545 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098790268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089516295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094883849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079400489 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100321322 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07838282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103545075 seconds)
  done (took 2.762205013 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221073437 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105084434 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143900648 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116478929 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098943091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114152061 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104340812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08705839 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104415869 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088985169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108673697 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10456212 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098621367 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106030709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110979828 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09014574 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104175105 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109140601 seconds)
  done (took 2.777450179 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093984038 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100725307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106344436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09970215 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082629262 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102437057 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107340269 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097916125 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103094777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081795648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110272321 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084495693 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103676222 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081384731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102815101 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100212859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084112794 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101073752 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091886105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106263668 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087783431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110311306 seconds)
  done (took 2.901336736 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097929441 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102047187 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11231491 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104497143 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095531421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079899457 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10787913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081743954 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109496785 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084093415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10015946 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079862974 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107839712 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08121752 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106014401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08182502 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103405494 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081586493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10264963 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078034216 seconds)
  done (took 2.663779477 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124151583 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115801856 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097345857 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12710442 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117356211 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09816822 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126901266 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116884548 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097267365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128722621 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116184509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097820302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126164004 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122787477 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097575472 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127810235 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127857731 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10898012 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118280626 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11672748 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110932767 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116205828 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127489189 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097517701 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117792226 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097510885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116678673 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123798026 seconds)
  done (took 3.986181326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081266113 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081759967 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097788675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079215248 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098384285 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078533982 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098180097 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079376718 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100641555 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079153068 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080255285 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100473924 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081053598 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100664006 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081253779 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100463 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08187936 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097937474 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07918165 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098203949 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081831112 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081508017 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099901988 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079613745 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097898019 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081949719 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09824382 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079325918 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100405047 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080257603 seconds)
  done (took 3.424142756 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09082749 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106778913 seconds)
  done (took 0.969123033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080379858 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118345035 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079528142 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105863928 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087911879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102950796 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092828571 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106294564 seconds)
  done (took 1.543028549 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10719806 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.121771709 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088161899 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113745755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102081005 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.121804825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167376825 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.108114496 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09046524 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.103391804 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.101932587 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101548407 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093391346 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108390349 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092537271 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117456582 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081165254 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112516496 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090834918 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.104426849 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088566958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11953849 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113719657 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09084766 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105197744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094889123 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116771265 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114659905 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088696848 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115084847 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090243567 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096074438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088309065 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.108013951 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081147186 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.120814776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101384788 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108461094 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112054236 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089368778 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112201061 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0784132 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11328231 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091346712 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114849953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088515502 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109015725 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078109115 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103605706 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086878405 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097964875 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087018217 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096197513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093899571 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112730205 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122306319 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086625423 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107121729 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088497411 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105917195 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091632926 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10759447 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09489921 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107322285 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11390409 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093777699 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111153641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078321544 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095611851 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081875529 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112425322 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108629203 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115436576 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107959831 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09002453 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100883993 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090017353 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109123088 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091715181 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114582061 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088205794 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111492991 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094518352 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107632766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087547808 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11071831 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085434867 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105530327 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084036561 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125560581 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.105975152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081337248 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103855331 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095344454 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106994328 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087266675 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103878955 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093438464 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09698871 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089753147 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108865659 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090880506 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115447334 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109077083 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090230167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112811169 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095063105 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107910667 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087975054 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099533266 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08977103 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105778633 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092820922 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09662558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089893425 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107144733 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089273071 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114972019 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085923801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.109146772 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113356227 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09675397 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105925645 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080041312 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107366994 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088598943 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111913716 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095972509 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105803489 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078731777 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098385295 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092184729 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106982439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090492606 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110518234 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089473531 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09751628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092327862 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109953388 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114142691 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08721985 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110378639 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094030089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111007022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086664683 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11356475 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087124569 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103222003 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113372144 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088478591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098702449 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094681058 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107565364 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086205228 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108901801 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093494113 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109009619 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091727492 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106456887 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090150931 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109766859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084563068 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109152342 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08744735 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116599387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088618519 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100409982 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08142867 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110559663 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085777891 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107450187 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084936149 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108867886 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090515293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103780509 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087639792 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109132216 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12038678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098288799 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109802606 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092330506 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115292323 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090289439 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111257783 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089283624 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110301461 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089972687 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114703903 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110724101 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090045729 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109499529 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081152406 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110446017 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096477577 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103860886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082505707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104064703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089004594 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116183824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089461168 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109506794 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086352136 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110817548 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093937417 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108621233 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088312026 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104931959 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089555472 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113548625 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090885475 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110229203 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115432177 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091288156 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099176556 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093924426 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105808965 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094684918 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099493134 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085633316 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105181279 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091630532 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106473495 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088661802 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098026977 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095210528 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116296485 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090680366 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103848897 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088920513 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118216084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088435964 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113539673 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108410366 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092221288 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123402819 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085999056 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108317322 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098132742 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108523732 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078631502 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112061677 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08676371 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104754002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088228459 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10611806 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090824211 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111660753 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090974695 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098779851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08932513 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.108395527 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086088098 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09973574 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114820895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090844527 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109350393 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100080921 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110420511 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091265128 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110625451 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089066167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111128414 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.093805259 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110982546 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091190566 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108382464 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084447047 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111254152 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10407359 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084180711 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088300012 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.109471841 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.11027394 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09169955 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108767199 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095344549 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109987532 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091138208 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128184657 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106285557 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085789393 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111153986 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092439908 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10959722 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090498312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10097725 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095913358 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109022528 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096122104 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109982667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081298171 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110255459 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089573558 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113110769 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090839546 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111723049 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108094878 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089809263 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109439112 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100776362 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106666541 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098610553 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112105033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092437432 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110529718 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091719025 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109291894 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085280138 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111165765 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11186515 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092226132 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110359378 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092679349 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110952417 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090038422 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108362365 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.092296504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111055097 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09319333 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099647044 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086585904 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10670359 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090277217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114695118 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091815759 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109564946 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088536368 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111984943 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089683311 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102670306 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095693678 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112361756 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090877049 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120832135 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105826502 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091459538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122107282 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079753259 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.108186529 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084979363 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106457544 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097650579 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.112605238 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09663411 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112065453 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086710343 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103241873 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092385105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.108881964 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081081403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104213996 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094030009 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108566883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088981876 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111977262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093542275 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113263336 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094442801 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110086129 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.111000497 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.091940808 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103122649 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087879012 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08605656 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112292531 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111432418 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087123093 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08290011 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.111049948 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10999891 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092082588 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.111208679 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089966176 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117027748 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090984034 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111192975 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096901379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101796714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091025138 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.111126226 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090652401 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106654973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093228854 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112687514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092924962 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115755325 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091237846 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115757319 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111072039 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084828428 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090312063 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.112051158 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112024723 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087180814 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114381018 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097829912 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105061559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091857521 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111564464 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089083868 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112592714 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092637897 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11150605 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094589131 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111790482 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091308349 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.115173431 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091188766 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112687681 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112695618 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090893957 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116375939 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087363838 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118473539 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093960709 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112816713 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090661797 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108654476 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090451853 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.111267683 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089728529 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117451026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092622271 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107240315 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086761464 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104337388 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091038488 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116284643 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117970608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09220282 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112078343 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081944956 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.1041638 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093209641 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108310298 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091273926 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114715947 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097283195 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11264455 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088777417 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.110600463 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097446816 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117186569 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093595285 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110920601 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113724875 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.093204158 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111958573 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089824269 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110504718 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092892577 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11397541 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0914486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107714889 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101020325 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118011439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092591133 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112012229 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114098819 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092362062 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103331116 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093528644 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11173477 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095875345 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112672633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09217823 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123483767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087189221 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110806251 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09686758 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110706841 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118254752 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082445272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112277259 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094465029 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113777579 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082699272 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107805237 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088643608 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11280557 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088293142 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102573048 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10295839 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117884446 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092922876 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110420734 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090593769 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104023921 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08276522 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108114918 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093698101 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111183562 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09964919 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108357297 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08740886 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103691584 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092133355 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114071545 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094317393 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10681213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082765766 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109100501 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091983717 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121915833 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111075005 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092880063 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114058989 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092250431 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105669559 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097636947 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104156212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09410715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124286659 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094044695 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115655744 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115314006 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099146185 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113707822 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083182256 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.114342342 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093896633 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113514282 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0944513 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.116175884 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108294592 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115290816 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.108359174 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091632618 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112272501 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08850868 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120780837 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094341353 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114114178 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095389215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111188428 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095090743 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119968683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094334798 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115702952 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113343425 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090993157 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11302295 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090079973 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.11119648 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09594233 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11492013 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092249327 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11532283 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089392018 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124345767 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100386073 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114330874 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084148168 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109413251 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088786079 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103796487 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094356334 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106080543 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090185344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.112311079 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091477697 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115475256 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094760968 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112994579 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.094309098 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.113604371 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081623865 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116802102 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093943702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117000157 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087562637 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115255296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094199713 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120098463 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117159645 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090443817 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113386273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091771231 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116306901 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084447208 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117038664 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092192504 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112133765 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089200051 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113306585 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095017618 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115824906 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095066062 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117075948 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093739451 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118146019 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09550651 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.1063117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084982636 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118136056 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086200412 seconds)
  done (took 61.187295221 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156629922 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090729522 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10412489 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083756323 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130388616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085148451 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103952394 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08451674 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105200562 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117816757 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08329141 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10349008 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105992007 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132785825 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129209663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118455697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084334698 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105271435 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083399353 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105345752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125501079 seconds)
  done (took 3.062329248 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109144312 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124270342 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123049523 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106371852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117216625 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123666546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122059224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10209669 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126979373 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11686718 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104567814 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124010828 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.117195121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117720198 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096776566 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120606963 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.127170087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094638972 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123660778 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121468138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099837839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121596061 seconds)
  done (took 3.359163513 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097970174 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.090965133 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.118863205 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.08522002 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.113696736 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086053952 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118293508 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087605281 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.120149662 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112214225 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090581252 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.112707673 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097933377 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.10647945 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090921079 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087702835 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12019712 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.112421246 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.094646302 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085696934 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134599116 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10803318 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.086728662 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110923883 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100876091 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114719738 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.092378816 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.113053006 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08979631 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.113010098 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088545539 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.114911557 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.096018088 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110932683 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089913484 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.113694344 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092207045 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107872588 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088942549 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117184929 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.087806888 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114371886 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098976493 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111159546 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.08848484 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116126221 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09315119 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.109677526 seconds)
  done (took 5.756530527 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125844165 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163500042 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096616259 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.172943474 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126232317 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.136053252 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093022934 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151546815 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.111774153 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09222548 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131819844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128827872 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092833519 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.129926887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114197997 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093910656 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118017458 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107024989 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116004819 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114922529 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.096702059 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110857375 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122218858 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.106704782 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118745612 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.112829313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.093281373 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126711357 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12488637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.098651068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.118507256 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102120477 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.139249196 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115713236 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090232117 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111527425 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123965306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08810226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116563352 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11147056 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.096493835 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127533133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.097558579 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130942521 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115269585 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09522804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117203106 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105588396 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130982663 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.114373095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098303564 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128661316 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118810397 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.094706708 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121877081 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136980781 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.091763821 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.111156242 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116268536 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103927706 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.114641606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113128704 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128087623 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113433054 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116470779 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09938116 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112236146 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118750625 seconds)
  done (took 8.796474885 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100865654 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.137309046 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132018187 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109982394 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120024723 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118794905 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098863564 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119348967 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098656707 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129493024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118962332 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.169168969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09167778 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125533392 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120205542 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098759182 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119889395 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098839265 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122133499 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119348847 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.099605245 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132001991 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119591994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109320191 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13338303 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112691146 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098192068 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120483974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13032149 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120244896 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112021927 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121258722 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120457721 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109405957 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13441332 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119961432 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089529423 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120192341 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.120506047 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099784597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113166447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111067922 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121591953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113614961 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099727728 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120064701 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131744204 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133561189 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105740733 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126674166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120293936 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110521027 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120195767 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119708883 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109634535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139706891 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132205272 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131517562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098873646 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132857665 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13207579 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14058505 seconds)
  done (took 8.170116316 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089692855 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089413275 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10975636 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087902746 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11197337 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087199356 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112683323 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.090122905 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111634379 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.090278049 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111547149 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087349386 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087235636 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111870914 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08808814 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109353342 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088201725 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109356716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090765512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108947438 seconds)
  done (took 2.807883479 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099158861 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133153672 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091722752 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12076232 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092954181 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120942492 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11389373 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094691078 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111748627 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094013353 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125213452 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.124898194 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091915551 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118637038 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102580857 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120554201 seconds)
  done (took 2.591502768 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111126338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12664258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.138587152 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.095718364 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110825644 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.098963325 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112405899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.085881244 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10789734 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098646019 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.119730468 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.101579154 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.115157464 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08819414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113050013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.095314292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108948486 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.116244234 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.090952209 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.138162136 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095911988 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.115563245 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092075465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115695392 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.094553809 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.120817925 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.118681203 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088561235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110452815 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091314189 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.115513775 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.098507172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109171462 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.096505029 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113546108 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087626114 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.113010719 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090268228 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.121867288 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111907139 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090111464 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11476877 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091154783 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113397316 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087410887 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11336965 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087015165 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118858073 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.093064049 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.115415227 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090649751 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121264575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.097947353 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.125071629 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12282549 seconds)
  done (took 6.698389516 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105473123 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116098247 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096180563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110180378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094123667 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.120899629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095738157 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115881447 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091911907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11117667 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092927389 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117953545 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092141661 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118385702 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115392996 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095414016 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10693824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.093296726 seconds)
  done (took 2.731283837 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096788548 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112920188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099111619 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113706928 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090559556 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115546167 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087480934 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110922753 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089811723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.113032642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092378169 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.11467722 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089630745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.115380383 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091850516 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1127767 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093932344 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088155334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114341441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085859227 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11879605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0885792 seconds)
  done (took 3.082461955 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.109543243 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.147752463 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104681053 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.159234011 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.119031558 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095039643 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129054649 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118683194 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115091712 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117339485 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.094809279 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.117662235 seconds)
  done (took 2.275862544 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116718758 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151850452 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08876114 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119524019 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126572513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097858894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119471801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096674823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1333452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131581829 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119152129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108736095 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133064405 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130386137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126747676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102543379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113716384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111523006 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086218509 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13325612 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11152729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102130172 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110780116 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111338643 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091546105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127121252 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126411791 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10903978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119635391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130630122 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127593338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098684978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131992462 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132354383 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095403515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131595233 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118320535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140475426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105268099 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130784984 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116060096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105313207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131341379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126953083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109874175 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120624423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126604143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097609012 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119954232 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147654427 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127380491 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108151117 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129362037 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130189157 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131193951 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145850166 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131431086 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104760297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125535824 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130835217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128645928 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105577047 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130908714 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132255023 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128091321 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108101512 seconds)
  done (took 8.749887758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132348745 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11433929 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120381989 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111395663 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131807495 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118968157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096961638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120453056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119886339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093663358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166409632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120607086 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131413386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107163939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113296562 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092338284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114773374 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1220841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086054447 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139506599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113061065 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122490824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123191545 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101477946 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12492166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11874369 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112099222 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091494268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112452194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091135652 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118633185 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111142915 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100763107 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106673532 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121756038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090669934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114040467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126783186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098184212 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128453243 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131638036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142961971 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098341564 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120265809 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134111284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098477028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121288541 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093840888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122428134 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116261443 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111163797 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133322725 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1342407 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130819694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120326317 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098539736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119474457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097421735 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120673467 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128358967 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10878952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121080401 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14920556 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120305241 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098682229 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131559345 seconds)
  done (took 8.542600706 seconds)
done (took 163.258637558 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.11161443 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.152265074 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.108498544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179658603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086314754 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.148491246 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118842493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123790552 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08583439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110163541 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085060697 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110533141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150861621 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109093157 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085615996 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110468735 seconds)
  done (took 2.727599213 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18886048 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.299877077 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106471838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119481153 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097456866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112015325 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113523293 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092499809 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111289255 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101406727 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109411174 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088212527 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121210014 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08828394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109240432 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109002917 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099862043 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109190493 seconds)
  done (took 3.036076567 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125647703 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.234818623 seconds)
  done (took 1.218650279 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130611092 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192898324 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309966488 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164294522 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116218422 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131485612 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165121411 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12845769 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196466606 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128919516 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.130325669 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093749639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138297717 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119083113 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097427538 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11464698 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118347547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116673654 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115686345 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094921894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137382166 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093100361 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120812163 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115916683 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186652599 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12927433 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094376511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115469908 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095230865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115982045 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099348557 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128518165 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12916092 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169062559 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121584717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186535742 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102250656 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113686131 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095225034 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113423089 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096190905 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119342448 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129041838 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092536401 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116268353 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122541379 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093614704 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.422335896 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107724498 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132036762 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123788373 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098853965 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191562602 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122901027 seconds)
  done (took 8.095854278 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.840616008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13706866 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115311278 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.928696139 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144864059 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106202931 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801542782 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138236179 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242497216 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.823998691 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13260582 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128934367 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23456661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260308781 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160512508 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34475843 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.688523475 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12933248 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119473467 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.18015365 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098987142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142096224 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132494827 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43622143 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091665306 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114143347 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117816776 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103172534 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187666578 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091781209 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116466191 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187518764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271728824 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208683673 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113551203 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090708149 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112647034 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176211665 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279390661 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199354668 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177254281 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110451787 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089516626 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125713872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132981973 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086594608 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192876861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179119588 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178717324 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116846078 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125082654 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099835735 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125618799 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167745252 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.113733508 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34845993 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349410809 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090535455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121649284 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131014956 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251216624 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113018185 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23069811 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118990155 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219868022 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11346458 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802125241 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.196567358 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090781583 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122221886 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121223467 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096637171 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125099149 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173474763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407657951 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128563092 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095387992 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11183366 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229468765 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113450686 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090028305 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192336469 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092613404 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122394105 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107774265 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12707003 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175906941 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277818461 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126537882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099086125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118842795 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104235235 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114845061 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214951208 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224346901 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165333863 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240731134 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103363097 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193338955 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172965138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12500723 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176405149 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121272386 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130870949 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105012014 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22004242 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148350287 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113470647 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096292333 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120784509 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152772933 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09547739 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120441103 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175866655 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.503591862 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175532642 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086503719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119783691 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11997632 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168356788 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099571661 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268035533 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123164676 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176003239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12284662 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092026482 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127423056 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175596566 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130515745 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123042829 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107798753 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125550536 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259204917 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225547112 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129602066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22064778 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183198264 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124130694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17986578 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122160223 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176268461 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12483684 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127719997 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101065682 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825023693 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127308168 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100314543 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123114337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200558068 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112386489 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093250883 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089278189 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110760261 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804052719 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094087829 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112196746 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095021419 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12281804 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099660348 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121360251 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123130271 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17400366 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240044477 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127382595 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097838228 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113115509 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.169643426 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092314863 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11478509 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091228825 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115617639 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122854231 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095642141 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113937459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178720509 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166011687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225234802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545126691 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091004396 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113583181 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240892053 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09150608 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315465797 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12069122 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206515133 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.198909699 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087555258 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344698353 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.202521178 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206706459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095594152 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177546149 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11079908 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100072773 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.193339977 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091538027 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124165217 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174396632 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141210677 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13852003 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153197036 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115056556 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240903112 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121264082 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188080126 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126541837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112947993 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331110021 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119668052 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120512177 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.206185457 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103595489 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124111347 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.844792887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113918949 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102200203 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12667895 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234161638 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182944455 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132524238 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131406977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113550614 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.203166555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230187501 seconds)
  done (took 45.695220199 seconds)
done (took 61.628696438 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315457603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273749054 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.319021237 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224301899 seconds)
  done (took 2.095046815 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.194404213 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166455613 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.152800693 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088507993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157450528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111618168 seconds)
  done (took 1.757438885 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.499237705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.40447222 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348615303 seconds)
  done (took 2.137603967 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276632972 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.284306861 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.363449684 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.4143364 seconds)
  done (took 2.340385302 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221782131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13997654 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108313004 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154802911 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.186935898 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.187595494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146427816 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155710242 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133829212 seconds)
  done (took 2.375244641 seconds)
done (took 11.597220924 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.275308761 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14682848 seconds)
    (3/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.303478011 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.180137472 seconds)
    (5/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.160192404 seconds)
    (6/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.110008662 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.210181094 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.279214015 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129383707 seconds)
    (10/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.269065967 seconds)
    (11/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.247712296 seconds)
    (12/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.115131467 seconds)
    (13/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.233960221 seconds)
    (14/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.257716504 seconds)
    (15/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.106620969 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.136023792 seconds)
    (17/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.111202771 seconds)
    (18/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094040449 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133984908 seconds)
    (20/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.220759352 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.221283696 seconds)
    (22/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.105866673 seconds)
    (23/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.137372706 seconds)
    (24/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110346312 seconds)
    (25/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125117688 seconds)
    (26/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.104460911 seconds)
    (27/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208279783 seconds)
    (28/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.159162851 seconds)
    (29/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121081444 seconds)
    (30/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199384854 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.124211696 seconds)
    (32/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.125837869 seconds)
    (33/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183904832 seconds)
    (34/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185957787 seconds)
    (35/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17972303 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217714675 seconds)
    (37/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.237905714 seconds)
    (38/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.11245748 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.238441935 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.20262702 seconds)
    (41/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.152415286 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.109860948 seconds)
    (43/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.209982599 seconds)
    (44/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.122365004 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.168189215 seconds)
    (46/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.223869819 seconds)
    (47/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.198255132 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.273870828 seconds)
    (49/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15148252 seconds)
    (50/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.150591523 seconds)
    (51/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146117306 seconds)
    (52/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098254296 seconds)
    (53/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.109866911 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193399784 seconds)
    (55/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.106734897 seconds)
    (56/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.133118689 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09861621 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146454195 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1537119 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.226993054 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.103680365 seconds)
    (62/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128303807 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139066933 seconds)
    (64/286) benchmarking ("sort", Float64, true)...
    done (took 0.243153653 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.1676821 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109872773 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.124361988 seconds)
    (68/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104024035 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.157010079 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084356199 seconds)
    (71/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197950894 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115387867 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.112517546 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130580983 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118781247 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095223754 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130742022 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0968361 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.163659098 seconds)
    (80/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196568411 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.147358277 seconds)
    (82/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.169895397 seconds)
    (83/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100027529 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096044694 seconds)
    (85/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118753993 seconds)
    (86/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.086475496 seconds)
    (87/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.109059246 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.202253756 seconds)
    (89/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.134224248 seconds)
    (90/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193236475 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 0.112556027 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.145276068 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077300438 seconds)
    (94/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.159611676 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100440182 seconds)
    (96/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.124799514 seconds)
    (97/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.085332068 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.111614758 seconds)
    (99/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110405111 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131043247 seconds)
    (101/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.258319351 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.213378145 seconds)
    (103/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205808839 seconds)
    (104/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106739716 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.186839236 seconds)
    (106/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.18998352 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120971316 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098781792 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.136060093 seconds)
    (110/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11497953 seconds)
    (111/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.129186886 seconds)
    (112/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075752953 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119283405 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097972187 seconds)
    (115/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.178432856 seconds)
    (116/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.099726685 seconds)
    (117/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.118346345 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121325483 seconds)
    (119/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.18824083 seconds)
    (120/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078097505 seconds)
    (121/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.161163342 seconds)
    (122/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126073039 seconds)
    (123/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103019449 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146675905 seconds)
    (125/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.130476392 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.158626059 seconds)
    (127/286) benchmarking ("sort", Float32, true)...
    done (took 0.232825006 seconds)
    (128/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12191943 seconds)
    (129/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075434207 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.126650448 seconds)
    (131/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125541118 seconds)
    (132/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162989857 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116686314 seconds)
    (134/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077689459 seconds)
    (135/286) benchmarking ("sort", Bool, false)...
    done (took 0.214346472 seconds)
    (136/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102128294 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.147383896 seconds)
    (138/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094609085 seconds)
    (139/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.114462538 seconds)
    (140/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077021244 seconds)
    (141/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125673339 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107673742 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.103182484 seconds)
    (144/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.189835883 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095628308 seconds)
    (146/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12716118 seconds)
    (147/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.161218326 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077355789 seconds)
    (149/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.125036183 seconds)
    (150/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0866355 seconds)
    (151/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09156412 seconds)
    (152/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.129460701 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092184183 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124322454 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089956291 seconds)
    (156/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.139753759 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120399434 seconds)
    (158/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.077256411 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120155266 seconds)
    (160/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077953465 seconds)
    (161/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.099833898 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142674586 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120830471 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101189839 seconds)
    (165/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117265411 seconds)
    (166/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090996288 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120892707 seconds)
    (168/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.127088006 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.118573986 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.101565792 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078205613 seconds)
    (172/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120524718 seconds)
    (173/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.142738514 seconds)
    (174/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119859662 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101431506 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.159980228 seconds)
    (177/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.075807733 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.142311967 seconds)
    (179/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.100491818 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099626304 seconds)
    (181/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119333195 seconds)
    (182/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089421408 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076990547 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113615669 seconds)
    (185/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095536221 seconds)
    (186/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114927388 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096254729 seconds)
    (188/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102181076 seconds)
    (189/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093750214 seconds)
    (190/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123259933 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078010868 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122879181 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126690447 seconds)
    (194/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094202437 seconds)
    (195/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139702678 seconds)
    (196/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09274332 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 0.254867907 seconds)
    (198/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077966684 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120641391 seconds)
    (200/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.203151945 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.227324376 seconds)
    (202/286) benchmarking ("sort", Float64, false)...
    done (took 0.153163398 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.119925121 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077928227 seconds)
    (205/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.129115594 seconds)
    (206/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075683345 seconds)
    (207/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114062546 seconds)
    (208/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078391725 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100923084 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10497307 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127034752 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07696431 seconds)
    (213/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.103122177 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104108757 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11542992 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115697392 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078306162 seconds)
    (218/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.133616128 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0934209 seconds)
    (220/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11850336 seconds)
    (221/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094311077 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117302006 seconds)
    (223/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105681396 seconds)
    (224/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10993813 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.086875335 seconds)
    (226/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.113435997 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10692324 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130076919 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101828181 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126715047 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138936065 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076868042 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076689894 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.102097498 seconds)
    (235/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092308275 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119958393 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078067036 seconds)
    (238/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125483182 seconds)
    (239/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.107262461 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114705023 seconds)
    (241/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096006453 seconds)
    (242/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118829672 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089030174 seconds)
    (244/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.100958062 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096538682 seconds)
    (246/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101506067 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103775377 seconds)
    (248/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119145172 seconds)
    (249/286) benchmarking ("sort", Float32, false)...
    done (took 0.178468062 seconds)
    (250/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077501546 seconds)
    (251/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102307628 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088857257 seconds)
    (253/286) benchmarking ("sort", Int8, true)...
    done (took 0.225815902 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.149545438 seconds)
    (255/286) benchmarking ("sort", BigInt, true)...
    done (took 0.256178716 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102059237 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.102799679 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098614265 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102832933 seconds)
    (260/286) benchmarking ("sort", Int8, false)...
    done (took 0.199270129 seconds)
    (261/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.083808173 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124012538 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121446512 seconds)
    (264/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.115031864 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115284968 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096446274 seconds)
    (267/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.13016437 seconds)
    (268/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078608545 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115170054 seconds)
    (270/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077939306 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118655593 seconds)
    (272/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095124315 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129282907 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.118751321 seconds)
    (275/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096527756 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.154026077 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.103600361 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.153803656 seconds)
    (279/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.086723383 seconds)
    (280/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.119606993 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097603235 seconds)
    (282/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.129506993 seconds)
    (283/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205503376 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097602919 seconds)
    (285/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102736623 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080050649 seconds)
  done (took 38.934350201 seconds)
done (took 39.828763362 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.112159709 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.171369651 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.111571495 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.155803621 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.139947882 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.114610631 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125426965 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100873445 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128379533 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128818181 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104303188 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109105223 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100744563 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.125354739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101543686 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145939841 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132297041 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097053882 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117394622 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.093723071 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117907204 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09296049 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.119798142 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.084841397 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126820135 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123811611 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096370824 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125302702 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094429836 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115572082 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092460947 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.122177063 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.111353269 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127172099 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095550283 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11744174 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102279896 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124585799 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095483455 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120503355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122705646 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09473897 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.12072719 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099290629 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118934958 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09416661 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117874151 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10416567 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146183355 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094633002 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.124427274 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099741927 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.127572124 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122035689 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092300954 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118470814 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09492542 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146140553 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095819431 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12214139 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101825788 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125135908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.092775674 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120763076 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118263631 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100754609 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124728171 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094726736 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126683166 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096875655 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.114526873 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094515205 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116489108 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093681125 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124576961 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101027561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112303491 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098419279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.125480141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098059175 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118043441 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092457692 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119592629 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094611813 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116233157 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085297987 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116029983 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096116187 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118288909 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118411871 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097321071 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121346996 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096345753 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124665447 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093618289 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118057416 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094191579 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119774933 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095338816 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11760769 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088631414 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117238192 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098151583 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115543907 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095652182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127673384 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116921174 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096097748 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.117803611 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.093860638 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130316038 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100820524 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118932233 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095238156 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114935917 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099647487 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116515725 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09157863 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116394244 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093300862 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120746756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.118759776 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092759902 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121724006 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1032138 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11455396 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.09275446 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117046462 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094561463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.121108696 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095522377 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116957362 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093367453 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112516139 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093236378 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115989964 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097139983 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116921481 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093955889 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11844782 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093719382 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121404923 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097270756 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120051073 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116559768 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.08689063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094402195 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121436165 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095206932 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.120040421 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118779088 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089999852 seconds)
done (took 17.735132559 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111219106 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191796293 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151926775 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155025465 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152353564 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111294105 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130372606 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150845469 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127227038 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122598168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148017385 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140899758 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155930848 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.102594529 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.13657992 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125720703 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100075799 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135825499 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160093838 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.120107203 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150646698 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126800433 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146332944 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121157948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125241379 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154433362 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129386129 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102174142 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128312995 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108142624 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14091732 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128761089 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.102541892 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137028354 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106555899 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125106171 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136424751 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097142674 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125998153 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125674514 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113463615 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136579588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121784858 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108296186 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126310079 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104171172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126184621 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124346521 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101263367 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120469946 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105630626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146331981 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124103897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103128522 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126899763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125485567 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103532891 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130775144 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127670599 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104711674 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126370073 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103029807 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131927826 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141841692 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125185477 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103809907 seconds)
  done (took 9.302843507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126036266 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1557386 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135392663 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10789902 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131555881 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.114637429 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090373877 seconds)
  done (took 1.821156181 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102923964 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.153112057 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127278006 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153484026 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144907301 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.139532793 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141308963 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117654167 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.114829689 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127414417 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145352044 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145991393 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.131367602 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.137513696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.125747043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125212313 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.161485016 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102881511 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138375805 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.128453861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133093311 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117944028 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133196138 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1178459 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114153673 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.124566424 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187139953 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106002044 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116281843 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098261458 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123416802 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.187994793 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14044189 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.112882658 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129058178 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132676295 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.147820119 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135259369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130344596 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136347468 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.153937771 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112212384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.139181142 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110414951 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.138367338 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.119471208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145195128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.140051076 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.109198888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.15297348 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113669744 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150467719 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.132438124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.108462799 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139600394 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10469675 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134382643 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.097413892 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146703939 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126921331 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11876708 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146624425 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.14797095 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.127303439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149536945 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147185751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.120142935 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.132339897 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102965902 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127145943 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144146991 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.096473153 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.1282563 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106761729 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129560735 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119040227 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146259691 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122086871 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104579143 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122397625 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097114603 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118127222 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111181434 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136867259 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.106072395 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147629196 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132467979 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.097829034 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122834072 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139714724 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0970546 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128856861 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103617564 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.12181692 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132598087 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120514121 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128909007 seconds)
  done (took 13.410751804 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106314813 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101093439 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126386112 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120277579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094450913 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119357594 seconds)
  done (took 1.636896912 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.134958094 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123330809 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108265706 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127356812 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162228809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.115607186 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146215472 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128820107 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.112565908 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134960743 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14229911 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.118232449 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.157442858 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.1114215 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.148911911 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129391456 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.116700909 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122400576 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.106973866 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122799795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135107824 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101360166 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123092431 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.115372161 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129128184 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100843962 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126158501 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134186689 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108482804 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1292454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102125136 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128257434 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126579413 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.102788266 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.14330021 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103400894 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123593028 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129018158 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101204723 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129349439 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.118809624 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126371077 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106410655 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129079175 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12857663 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100899104 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128797749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099052981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143286519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.13075135 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102964357 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12569205 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100834673 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130012442 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.101105069 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128694861 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128218134 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.118805885 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.13140014 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100760809 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123668909 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100615054 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130054216 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126214961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100581609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127620552 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100895281 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124182594 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0973226 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12710499 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.102348537 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124069906 seconds)
  done (took 9.695782698 seconds)
done (took 36.819647994 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.701992599 seconds)
  done (took 1.664768318 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.933716364 seconds)
  done (took 1.900272278 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.296503477 seconds)
  done (took 19.301943931 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.553785068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.635855606 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.963754821 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169855028 seconds)
  done (took 3.288515999 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.984928889 seconds)
  done (took 1.972022458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.324663337 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269007415 seconds)
  done (took 1.564671748 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.922297727 seconds)
  done (took 1.903152581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.56395983 seconds)
  done (took 2.545945938 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36535595 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204859994 seconds)
  done (took 1.560845223 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.602940315 seconds)
  done (took 1.584841673 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.052478187 seconds)
  done (took 16.042124688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245732375 seconds)
  done (took 1.245125534 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.315114031 seconds)
  done (took 1.29935766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.883410087 seconds)
  done (took 4.870653177 seconds)
done (took 61.71848708 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113837472 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132967772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106615244 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129494692 seconds)
  done (took 1.462427975 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120817236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.131569202 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105540668 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127338063 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10900782 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127900399 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125464751 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108931605 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130953248 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102687939 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128559515 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101288711 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130483643 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124948119 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.099456269 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12883448 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104434468 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128321191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100868878 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129304796 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.125333685 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103260083 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130502369 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.10075484 seconds)
  done (took 3.811921002 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114841941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124242675 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100105121 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122148237 seconds)
  done (took 1.454142403 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113684043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141344759 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114539362 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134727452 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140845545 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114511828 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123806242 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096617123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126006449 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106571575 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126431718 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144058658 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114950142 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11926511 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108415453 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11815233 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093477228 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142532586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134326019 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.108933885 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124300056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.106575962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130754241 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137102853 seconds)
  done (took 3.909351451 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.219367966 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109381222 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147466128 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.103398878 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175467919 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149777145 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123036313 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.122858068 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.123381497 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.108999511 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.128349004 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.176289746 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108546157 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128368241 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124109788 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.103698239 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.134997655 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.133810595 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.099706239 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136055968 seconds)
  done (took 3.647107373 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11468103 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12296449 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09292056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122811986 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10446058 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125576818 seconds)
  done (took 1.677128882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101071299 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091679632 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119081181 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091252427 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123089456 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091995411 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117779277 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.091617105 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118505624 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0935701 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119018458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091687743 seconds)
  done (took 2.245025675 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.563232138 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.101278872 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128018923 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124967151 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101805553 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122576507 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.110879813 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123683575 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180783949 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098268964 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.139621903 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.176470403 seconds)
  done (took 2.975166873 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22381313 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101974064 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278361609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.432666287 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164983238 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182207992 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.35697661 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173351933 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.191923515 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115916718 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239556913 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16397675 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132556998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188084255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148838399 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193622698 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182662712 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234320299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127480815 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251357209 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174737825 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174990568 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198075237 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159408157 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117352007 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165643461 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126455526 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133867809 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179521971 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176441151 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181018929 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154831182 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145272064 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20770052 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220198546 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219606207 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.372245059 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139724395 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198562515 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199249779 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283098186 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147855014 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200998693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164064614 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14123209 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187609278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165817726 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189546485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144345908 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125095213 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225221538 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186344902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190460202 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144458938 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351801445 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156107398 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156840962 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191571743 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197722592 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231942153 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172535755 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101965127 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254935797 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196228929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185440566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155682369 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177726271 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130643311 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185309671 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213660742 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188123904 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176746362 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225274694 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140031683 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170980397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185228428 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16002786 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185037173 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16513969 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100143411 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154980605 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14259739 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105988697 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192715227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099726071 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246275782 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142217034 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.292757841 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217954784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164609123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16779103 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171306141 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172684054 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15363753 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095889191 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152729827 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179000738 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163117532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139111123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164866082 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124570926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134711689 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159776112 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10036793 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165944476 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.139529617 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172717368 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169355639 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133902334 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16957017 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127801841 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163105381 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176536856 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226694977 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11362988 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138036342 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208610123 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167437261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142525569 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193799202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20141885 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17791703 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144906664 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178281039 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204281235 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149465666 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202803198 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150347616 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110798954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158329295 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163322532 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162955005 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161622275 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135335933 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159191156 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208467063 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132578715 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114566471 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180433251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135551407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108941723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151459476 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14225523 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147396307 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127859935 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149021621 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162788825 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165466072 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159701805 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164371614 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1503128 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200520764 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138965204 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168965888 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125182589 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125061899 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18538988 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199361548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137036397 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193696069 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175451526 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267165617 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169599002 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10813741 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188416109 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139040633 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12513813 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175298458 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165640003 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167549504 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199993848 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273072144 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174287999 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.130619983 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156259122 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171945396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188408306 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16253293 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153718674 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168421864 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173199872 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129921674 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104246668 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133001534 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147025501 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109515485 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140029784 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187357816 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169488629 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258253654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167002532 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145075659 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196847025 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1031074 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170944185 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177171304 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146544369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19859521 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225718723 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17368754 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120404851 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177151807 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126866507 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104271618 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138691849 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172283369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13993888 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112187381 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150488368 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196422354 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209482035 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128286371 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274076463 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17326036 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235945644 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101010147 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169558611 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189165317 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168489302 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171322629 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141295523 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172551924 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193440913 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150521467 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197894655 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168178891 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173611865 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238594017 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165679002 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111080433 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156093317 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174533925 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148386214 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180829794 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154686595 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115812854 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163137848 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14523273 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104989202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217522851 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122778657 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215929424 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175892345 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183629158 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132497737 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122833419 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167471328 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151874931 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12248129 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179775996 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203390418 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150484527 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165342594 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190865128 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137103121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.360367368 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202957169 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223375596 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116278509 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150758583 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168346588 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175237056 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172357612 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191458193 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151298683 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186741008 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166898155 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.151406346 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112873957 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155347947 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159789452 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16138103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113594346 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162995868 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14905542 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189770964 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152696312 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164880228 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173050722 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155841424 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.132407485 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148219086 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219128334 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164893258 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186332847 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163010197 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180456286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194569687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131918678 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104484826 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135044715 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188889687 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139917272 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167575538 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227928568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279799625 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166547495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176285134 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143757347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101724769 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166690345 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156319541 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268772151 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121150593 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143199548 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233641141 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127625536 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137805127 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171006203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349324966 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150197224 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192390154 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129249601 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.323501472 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13243745 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1087206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175084492 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17613686 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139784216 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192050457 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172407737 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121802996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179552569 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14512936 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.262219778 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218846297 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177296538 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184730798 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149918132 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165682074 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170675872 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192192645 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150442962 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151722117 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139687715 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228873968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204455414 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138839262 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172760724 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138744975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168890921 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209666364 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112845826 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193672006 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137411747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174221821 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146513846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102851892 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166403728 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.257796374 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13882494 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193174703 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168007184 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111238743 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138019385 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162159736 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166524068 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120002318 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136300448 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185069411 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13941644 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172371126 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189731229 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111240664 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162274564 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153631994 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110273899 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150351001 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152404584 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141332642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.154314578 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195177588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139761324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192004493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17813507 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173955065 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167180361 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15370591 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669578213 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109805959 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232894852 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125275422 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22218147 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125769658 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174657269 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169102598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157591952 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174478376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156661414 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229094199 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17433473 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166227662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108983152 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151157011 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153215788 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136273757 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129930707 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168200474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14788154 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142298382 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16122572 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123340166 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153142907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148637463 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202044602 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155833797 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189554074 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190678596 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143843554 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173307277 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181740282 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135584398 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.137811705 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208432308 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121047207 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158194927 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141031509 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.117584716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19021598 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132196147 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174124464 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172544131 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171728338 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173131663 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115999331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168511302 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149782613 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170557877 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10415457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164386268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163686978 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138754369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106820436 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166665205 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164653752 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165910567 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13335083 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.156896177 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193199641 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133488531 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138913274 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333512036 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165550061 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199623214 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158705681 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142359077 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122732021 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16283568 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.158807208 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168157267 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135853915 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111430032 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138846161 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189809743 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171463044 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168070713 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199397165 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171802675 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198835533 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110774236 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.26968947 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145831033 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160252137 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1073933 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137470219 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147851755 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110646259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154574834 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257947781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185146427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156159656 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12135873 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132837304 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133323585 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110031046 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176419011 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160646456 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163677925 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149379578 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.094958617 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15163291 seconds)
  done (took 82.032804134 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179937209 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.226755625 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.179700225 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.228648989 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191799219 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.33242259 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237700419 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281361331 seconds)
  done (took 2.946158157 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.114220609 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14185695 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14694503 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131967873 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.097370774 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.375196152 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14523987 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103187794 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157309389 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142029049 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123969112 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.602022159 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.134259817 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129043316 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119177543 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096640601 seconds)
  done (took 3.84702015 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.558545432 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.566033172 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.407215833 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.260386627 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23821327 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184352954 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.793714631 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172464024 seconds)
  done (took 13.271240001 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.14008599 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152661496 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.15035818 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.188562004 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169438267 seconds)
  done (took 1.89792603 seconds)
done (took 126.156560916 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107859427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133958451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101216369 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13215301 seconds)
  done (took 1.55359721 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.121359177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092258569 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120187219 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084121008 seconds)
  done (took 1.504380357 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443191704 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.119473223 seconds)
  done (took 1.691737083 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137504632 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15532102 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.118458055 seconds)
  done (took 1.507424755 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.120909724 seconds)
  done (took 1.219910316 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128114511 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.138593094 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.119676821 seconds)
  done (took 1.485847115 seconds)
done (took 10.05267906 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128782333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.459048291 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.397309739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147898704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735247467 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387762435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.087393014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16876017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173910379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098487266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145656164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680194132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039177678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.353015802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025186283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467681701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680038699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126293021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10302479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125903695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040043252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127710803 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100126099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127617034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678422722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429982826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097046389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.479390206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094788461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135232198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414422397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096944366 seconds)
  done (took 17.434093906 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11064616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201123849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.11194147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132426618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101761187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132165683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138298316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110440026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192747406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130759231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115281333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129121029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101173097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126473944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119029711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.130192602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101582327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129901305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104674586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132054516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147441806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100613747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128754695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099191447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125149898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110033821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126153679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109208623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128810525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104883709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132314621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097261232 seconds)
  done (took 5.064819751 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151658026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199604515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134438561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135305629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185060758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128380857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212422813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166018486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190572855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097349324 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145715095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101279013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164931236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100489596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149439951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096310684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130821018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12797572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104409909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126380644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117798849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127419485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099476814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128284538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096852161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140225165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096531942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139943391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1244563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103148712 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132302331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098072748 seconds)
  done (took 5.356643007 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111518301 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135891661 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113808272 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146104575 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104095215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133696451 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10835604 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131717889 seconds)
  done (took 2.089754668 seconds)
done (took 31.044273808 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.127309834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142407005 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.116911206 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.146808431 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.107759908 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.167540252 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100338662 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138573843 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.114303343 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139448172 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116980541 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.13154079 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098669686 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124393744 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.109913043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.133196775 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.11228203 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.140473921 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.121982099 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.14588084 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.102732964 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.141400077 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110684892 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.151969535 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.152567897 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.121083029 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.147500826 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108030451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130162696 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097862636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.146747259 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.128834169 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.136314145 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113858403 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.139400766 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102715037 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.131800072 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101621918 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.14618696 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.113011208 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.137962055 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.112258143 seconds)
  done (took 6.402503278 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.132237914 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.177843743 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.102745097 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.129305192 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.097538373 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.16814756 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.173943682 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.101779325 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.128564362 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123636002 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.159312606 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.128602933 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.095721315 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.09460366 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.129411579 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.094328139 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.153947028 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.159907029 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.134411729 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.168366588 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.183761011 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.140978485 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.172877873 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.161077829 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.14377776 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.171631384 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.15991876 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.172014036 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.131790248 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.133162888 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.129729932 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.166658709 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.103380905 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.130392993 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.170357815 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.143485966 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.167601787 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.174861822 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.134913556 seconds)
  done (took 6.662582839 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124370839 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148854252 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128811435 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.270678192 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.142004461 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.148907536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144496166 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116293359 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158119645 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.097282218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143083021 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.129995335 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145908623 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142290235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104337486 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142074696 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.116690535 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.130023677 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106605185 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148393305 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116002393 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142721282 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146327916 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108351138 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.128453153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10755839 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.136920174 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113039455 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137874269 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10936764 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132667135 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.132041466 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100830997 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13912111 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103002605 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.136561903 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119791367 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140775815 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.113165836 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.163115078 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139888801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102768729 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152929117 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.179389683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102281006 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136340034 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108373326 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143072753 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098255677 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148533774 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114806945 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130963922 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144458918 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097741203 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129706142 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107566719 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.131366798 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100909105 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139904259 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102167369 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149683853 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108838173 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142001977 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.132260075 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107571054 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127317337 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097832021 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.132779922 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124038072 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137867048 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164789574 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100152295 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135306616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109223505 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13712648 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109805287 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129006226 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107556412 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140323888 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106091121 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13986695 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100797344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.135154921 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.146131787 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.114495251 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136817132 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103505043 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137428073 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101496955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134715459 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147346228 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101255837 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.135111389 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112420045 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.13180351 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101535746 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13572765 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101978185 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127461664 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122229502 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134689803 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097496988 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.15262562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.130781764 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103697075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137685771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113383916 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128327451 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102954522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135406703 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098296424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138041581 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103416424 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129424379 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113261742 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145068218 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.105563596 seconds)
  done (took 15.992210687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.255433867 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.23162687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207290823 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313084447 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156081363 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.156833546 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.226712332 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.185724291 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102064387 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170659168 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.186889003 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.201350984 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.19718854 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.206389176 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.190595521 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129573919 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.132819656 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183163825 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.230371605 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.316931961 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.165671896 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.112174354 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172024149 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171160139 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.149208256 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.146116952 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.124878834 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.151204562 seconds)
  done (took 6.306010163 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124260378 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17387094 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.137765175 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.129786792 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15674315 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130050018 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104241074 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098374919 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146653502 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146252729 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099688913 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136566875 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105686891 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140811148 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099175293 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.138559172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107793254 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139841257 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133095794 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102837998 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.151276599 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115724265 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.140996487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104256795 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147162867 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137231183 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099417064 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153566642 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.140030366 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.130327243 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.128280361 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110079844 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147910631 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099265283 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141087918 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.131796693 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101447466 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102941927 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.138205338 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096707932 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.133433846 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.09116661 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.140088167 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.147412932 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10655673 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132292484 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106138167 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.136931346 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102486852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.130093643 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103347669 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135556902 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102570844 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149610095 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103994697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133672944 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.105678358 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131795154 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.111124114 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.134783064 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098242337 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.137731278 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.104754967 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13842427 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110468099 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138413297 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106509176 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.135630066 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.106142692 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139246148 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.103433351 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.146529437 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.098498999 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.13653388 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113061031 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.146246437 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133083409 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.104728548 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.139823311 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098054666 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.123404212 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098215241 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087438748 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.138418713 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.101029007 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.140116884 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.105174393 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138572669 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150866153 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111086058 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.14094015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103445507 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.139495645 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.105387912 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.130854364 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105925142 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151655262 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152652767 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101645219 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.131784624 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122885145 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13599758 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100389974 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121843048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111762569 seconds)
  done (took 14.132958064 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135140395 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17500051 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.105018495 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.15330185 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.168537484 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131473572 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.148600879 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.111013324 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.135813401 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119723735 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.141215589 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106547784 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.140106017 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144692133 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.132399273 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.148372696 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106166615 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.151067039 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.108939814 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175728065 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.156903105 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.130649786 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.167243052 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.147230446 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.108207202 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.160084015 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.138993981 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.15122406 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.116546825 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169045847 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.149949896 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.137751133 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172005532 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.142068201 seconds)
  done (took 5.933410361 seconds)
done (took 56.527896025 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.269134013 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.447529507 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.201165909 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.217024752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271016313 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.252723698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210918321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.402173375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.020215702 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.200131609 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.208606928 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.208106001 seconds)
done (took 28.037810614 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.319994652 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.811984033 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526704825 seconds)
  done (took 4.483631048 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.21030872 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.20936022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453362321 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.209677413 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.231380769 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.230807327 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.224887156 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.201978115 seconds)
  done (took 15.886925434 seconds)
done (took 26.025919533 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.215678592 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.592806234 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.479472014 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.221351738 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.205469024 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.203899973 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.20431808 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.275623167 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.220728008 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.211858571 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.201233772 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.492486078 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.218729083 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.60283481 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.210759555 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.233463359 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.216021955 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.572091645 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.212066788 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.262535811 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.188246876 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.189091004 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.229035812 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.238516961 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.220525193 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.210555306 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.25082075 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.200516931 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.592577654 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.221234013 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.257158418 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.204322812 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.247257824 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.206420636 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320998949 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.235214022 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.477750314 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.225777234 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.192633443 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.205837714 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.471111706 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.634956336 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.209305064 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.213175981 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.205655367 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.256015732 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.192304741 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.957076012 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214179243 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.217728222 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.230520086 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.617164951 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.22094497 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.227969108 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.212268362 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.56343214 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.214151096 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.286092134 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.252332436 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.208686498 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.231040762 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.205971349 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.260210559 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.206930252 seconds)
  done (took 144.802986415 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.21410606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.20806117 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.208680293 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.212021313 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.216786481 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.207914618 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.216425791 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.214960908 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.205116888 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.225880214 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.209789361 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.207154786 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.218392518 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205778219 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215455079 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234072422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.219652529 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.206651081 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224450337 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.217924649 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.22909823 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.218773217 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.210927908 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.21009938 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.252466221 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.31552529 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.245158688 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.253447922 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.214906859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.217515655 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.219355461 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.215537854 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902784047 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060971113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.224696452 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.260638233 seconds)
  done (took 80.670634135 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.215136491 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.218394019 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.219032378 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214837584 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.252100915 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.219384183 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826722284 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852966626 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.978691369 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.522947508 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.697503318 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58420457 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210073046 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313896214 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226620303 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211657804 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23575954 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247875058 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209044869 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216357962 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860039712 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.230869983 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214231911 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.401629709 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.227969574 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254173958 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620191818 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.455077978 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209917698 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253058969 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.564476843 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265439071 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207847774 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.680531659 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.780558051 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328984267 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212947888 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254722089 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.220548991 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.509392532 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208127554 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220460563 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.223858804 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983020157 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210192202 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830207599 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209458984 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234753714 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.228888149 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218377244 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.425989927 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.124901713 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237564287 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.221277264 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.223820095 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220031062 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218985393 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.255783046 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.219850593 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.617016141 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.345362677 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223211343 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.226707418 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257089219 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.223521616 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.464292301 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224843511 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.460116628 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.283113194 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32056895 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867831388 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222051421 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324300323 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334364597 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209419481 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.22043299 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222659397 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.220888421 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.33296164 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210205877 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.676601762 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.398482144 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232238693 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.844994871 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326274533 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.212564617 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682193122 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.221560607 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.223260361 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020938479 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310100662 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.212218294 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.22214351 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220609972 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.220149136 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.677965238 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857641822 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.545912025 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22430009 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.839249956 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.226151315 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.689145641 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.821503601 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.978888865 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.226042072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340440327 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.397270545 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.233735215 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219398219 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.853236704 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.226839644 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287979134 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.211269707 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625027334 seconds)
  done (took 370.594780126 seconds)
done (took 597.19441656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.963249086 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.893744834 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.038869981 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.924669017 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.897882831 seconds)
  done (took 10.852634693 seconds)
done (took 11.988037406 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429330275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.421793141 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284265469 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420587026 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247175442 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.446523945 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397434391 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234334961 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334026182 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302800506 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322242089 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270192215 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261606055 seconds)
  done (took 18.506997669 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512291133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21424692 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306950058 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484191291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254905637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53121245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.525011436 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.216113683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365781585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238505842 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239262748 seconds)
  done (took 18.026094883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.502897375 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.215661222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28801489 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492602056 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256285083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547194302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.535241372 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.216138821 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3708147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238867312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239602124 seconds)
  done (took 18.040157789 seconds)
done (took 55.711435607 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.270520935 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401490713 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.264958875 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.241199483 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.235492732 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.237812957 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.242796433 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.247439628 seconds)
  done (took 11.281277112 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.231157274 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.233434259 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230457191 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.231621741 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.231331898 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.230574392 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.231866687 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.234956752 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.234202268 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.235112006 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.235466061 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.235739534 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.232866821 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.235434652 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.231647586 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.234772494 seconds)
  done (took 20.870361606 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234171648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.232455819 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233190209 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232933955 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.231990574 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.232754646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.234769926 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234052637 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.233658262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231640356 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.234117187 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.232754071 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.234361739 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232886161 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.234831823 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.23509615 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232594014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233793198 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237652311 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.233243807 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.233710556 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234504968 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234716444 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233905032 seconds)
  done (took 30.751041137 seconds)
done (took 64.039437757 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.246646091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.231075025 seconds)
  done (took 5.616775874 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.294298872 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296597886 seconds)
  done (took 3.733308707 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.237559272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.237487439 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.23646134 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.236615885 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.236518007 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.237225779 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.236562944 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.236137844 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.237591887 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.236895108 seconds)
  done (took 13.50836774 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.238430986 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.237479326 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234128981 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.239005154 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.238195233 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.23580384 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.237645871 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.237055659 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237741642 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.234499988 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.239732858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.23601964 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.237453701 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.235316539 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.236812207 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234879685 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.235770326 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.234987461 seconds)
  done (took 23.402307694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.252188176 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.260282249 seconds)
  done (took 3.654615538 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.366437369 seconds)
    (2/7) benchmarking "second"...
    done (took 1.277955093 seconds)
    (3/7) benchmarking "month"...
    done (took 1.346472021 seconds)
    (4/7) benchmarking "year"...
    done (took 1.334300507 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.277832225 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.256827144 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.277875963 seconds)
  done (took 10.279615141 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.240299992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.429263496 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.532059251 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.797689615 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.241170233 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.243991147 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.117685162 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242719643 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2452286 seconds)
  done (took 14.233992139 seconds)
done (took 75.568721629 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.234099932 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.302629304 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.241430247 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234945941 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.57583536 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.291791181 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.233913592 seconds)
done (took 16.258058744 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.220980715 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.220184895 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.211635973 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.221170517 seconds)
  done (took 10.017039312 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.232083715 seconds)
    (2/2) benchmarking "read"...
    done (took 1.603310395 seconds)
  done (took 4.979547779 seconds)
done (took 16.142340558 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.237804423 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241289983 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.241631724 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.238127392 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.242357283 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23992566 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.239012079 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.239716129 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.240881942 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.241256763 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.242155856 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.241451322 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.240674746 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241351717 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239322917 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238037478 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24186803 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.237842971 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239144486 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238945862 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.238959423 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240407932 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.239631435 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.23930089 seconds)
  done (took 30.905906199 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.241366934 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.238999861 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.243053577 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.24274302 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239669052 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.242422273 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.244577855 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.240346968 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.242624054 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.243001824 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240191222 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.240352965 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.243444123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238655899 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242179172 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239623051 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.241550086 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239212809 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243691848 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.2410903 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241138811 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241980502 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.241898834 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242872988 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.241490769 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23989237 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.243083211 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239738101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24500796 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.240517419 seconds)
  done (took 38.392826819 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249229205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.25537494 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.243556375 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.242672547 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.244563903 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.24442242 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.244315322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.244594709 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.244258884 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.244271214 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.243774231 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.244041063 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.243680071 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243747262 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.244226463 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.243169532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245686362 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.244584956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.244344305 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.245085721 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.244506433 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243472254 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244711247 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.245531434 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.246522416 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.244042445 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.244912367 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.244541161 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.245820895 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.246424585 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.246340521 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24552858 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245233938 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.245718686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.247427726 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.246056191 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.253164534 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.252086061 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.246957328 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.246122067 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.245024057 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246507636 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.247197556 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.246725363 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245645892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.247555744 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.247393442 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.246475762 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.246326579 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.248062674 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246744666 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.246545771 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.248230226 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24714219 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.246755964 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.246754778 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.246013136 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.247554943 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247552351 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247546003 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.247575039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.248122762 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.247654803 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.249042477 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.248515971 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247962736 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.249801489 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.248040846 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.248291322 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.248756208 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.248339876 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.249735612 seconds)
  done (took 90.894667341 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.249959448 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248136217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.247674303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247879432 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247449529 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250140961 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248397647 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250294367 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246132212 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249010581 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250081254 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249057148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24758316 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250611691 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250185545 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246587829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250930386 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247060903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.250834013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250183114 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250196402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247262068 seconds)
  done (took 28.62904984 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25188213 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251624443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.248446199 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255099349 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249969383 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253916936 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251135489 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251319885 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252000819 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248528567 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772769236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250574006 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249797563 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24791983 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249367849 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250653255 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250778628 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250114789 seconds)
  done (took 24.189190202 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.24848999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.249004524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.251820664 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.249177194 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.248986624 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251424173 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24955864 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251315731 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.252803306 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24943068 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250815457 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252280917 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.251202317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249759022 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252165276 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248960576 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.253786776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249862123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252719436 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250889981 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248432293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25348695 seconds)
  done (took 28.670967749 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252892138 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252680001 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25187508 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.250217911 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250431624 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252302289 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.253400681 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.250329527 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.255831035 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.255318016 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250848336 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253831395 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.253726397 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251602829 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.252970457 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250278299 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252998408 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252159194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254302034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251456875 seconds)
  done (took 26.205424261 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263642588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264355857 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264773742 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265675854 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265143932 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26638551 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265977034 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.266462429 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266143529 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266133212 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265624584 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266041553 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267700394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265242913 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265430167 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266835879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26628984 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266721918 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265701401 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266807096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267952639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26533099 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265895112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265888885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266588058 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266741238 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266606288 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267503475 seconds)
  done (took 36.606910409 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25682952 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257282327 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.254155284 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.254413656 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.253331557 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.25320945 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255535215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.254609959 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256792114 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254371554 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.257227102 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25718568 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255816075 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255600188 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255901455 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.255061607 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256691183 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.25599803 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254836462 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255414599 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257562346 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256012862 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.257757102 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254372479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2556732 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255720886 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248912101 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253368964 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250998833 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253006457 seconds)
  done (took 38.813492455 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.296166625 seconds)
    (2/2) benchmarking "in"...
    done (took 1.295660913 seconds)
  done (took 3.752235927 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255812917 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259662686 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.257361069 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252988398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257226034 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258193419 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257886409 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256948647 seconds)
  done (took 11.215855914 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.258951233 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256682252 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.258089366 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256783468 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.257594399 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.260164197 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266457149 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284511613 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.260561255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.260955594 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.269328995 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.268492946 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.260629248 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260605512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259537249 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262201696 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.260008165 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.260151678 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.262058385 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264213792 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260217873 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26328744 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262359916 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258495144 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264569157 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.273189567 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264774961 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263287149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261055292 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.265471887 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.262007621 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257242625 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.260510879 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262085541 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.262020468 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.261979769 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272881229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287184886 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.268099436 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264744052 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263392092 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.26051094 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.262418946 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.264212724 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262785417 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263728697 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263605689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258956617 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.262343486 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.266208041 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.269818818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262914589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.261253211 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264433193 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.263427072 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270205231 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28539676 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.266131529 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.27544834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.275034202 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.277755029 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.294075422 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265476707 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264761445 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276255899 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.291115247 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270863264 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283769121 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260782487 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263576474 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270898596 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279061875 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.29831801 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.263656757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265017813 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.266142447 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263328962 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265352907 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272647037 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.290801426 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266733466 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265853755 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278703528 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29388202 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.264676187 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.266547485 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.267640279 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.267191099 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.267003665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277580578 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291008465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262899647 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.265414872 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266073612 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.266441074 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.267531429 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.266551382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26744829 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.26422496 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.267328954 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265833145 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270477843 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.277175709 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266762362 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267996613 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.275062763 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.269401807 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267973483 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.273376776 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.266589614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268089542 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.270563099 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273947661 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265015091 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270540012 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.278239534 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.26781341 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.269016921 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.267845415 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.268629234 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27953112 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.299132989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.269543159 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.268034711 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.27363639 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.28399665 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268213792 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.270633883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.270415159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.266611592 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.266268758 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.269743121 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.269424548 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.268663195 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270529018 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269649532 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.267393226 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.269557762 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.26943584 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270620348 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.268548497 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.269912678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.270854819 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.271036097 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.270803382 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.272471102 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.276122941 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.270336452 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271324023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.269490019 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.26775241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27204771 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270207433 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.271625614 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.271871166 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270954218 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.270847008 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.269674135 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270931735 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.271115144 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272445483 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.273233906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276157862 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.271251953 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275558218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.273224109 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.269149097 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.2704086 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.271510432 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.272192024 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.271574327 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.271133075 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.275933383 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.281812245 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.274678182 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.273585117 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.274702404 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273191315 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273770252 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273062351 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.276950559 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.284244846 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.272950699 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.279373585 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.273700637 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272994358 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.273047958 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.273499369 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.272389982 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273010655 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.276677566 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283090399 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285605778 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304170092 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.274470224 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.279449181 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.274275776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278265442 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.277676604 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27505809 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2749826 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272372825 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274020059 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273877906 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.275651941 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.274063598 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.274365356 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.275066556 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274463764 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.27387802 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275430192 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.27449302 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275702671 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.272452926 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275457347 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275282403 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.275673694 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.272165523 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.274108104 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.275667122 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.275078713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.276286109 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.280370475 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27296711 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275393552 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274054744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.275079446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.274311836 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.277357837 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278747043 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.276109437 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283499052 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.300017837 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.277370827 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28465361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.300001619 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.275927254 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.276891015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278240757 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.273599233 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.279882464 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.28828373 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.276644906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.275336022 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.276075718 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276619807 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276417555 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.281269555 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.276162456 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.275789205 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27844905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.27832133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.275906567 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.278944989 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.277692401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.277881507 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280089297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278513205 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.277645716 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278890509 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278393293 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27809465 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.279244926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281191184 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288808506 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.282655021 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.277690883 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.280942441 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280818725 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284373906 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.278897543 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.278401268 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.278321509 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293221224 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.307384948 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287224991 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.301698589 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.279939797 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285365255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.304829119 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.285144817 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280285112 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279263481 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279377478 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279407056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277831861 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278921322 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279930985 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281448349 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.281649598 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.285773434 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.277339022 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.278680817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281523583 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.281603997 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.281967673 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.280692072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.281644569 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.281411223 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282719757 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.279081715 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.280148519 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287321438 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304496501 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.281949948 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.281079399 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280530708 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280025059 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.282054601 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281908679 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.286368284 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.293549322 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.285141066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.292602544 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.284554381 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293521541 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.280572964 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.28703648 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.291792909 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.280649752 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281449631 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.283010899 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.284295145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290341471 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.304156664 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.284933187 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.288760542 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282028385 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284169949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.282863066 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.282693853 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282649939 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.27819541 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288665383 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.301679602 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.288459893 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284867682 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.279421584 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.284286524 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283343002 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.281798157 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285899548 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.275420406 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.284816716 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.282714728 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.283797714 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.283614639 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.284369218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.283699111 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.281785583 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285128046 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292464114 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.30934883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2886908 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.285167948 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.290897751 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285848713 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293908454 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.305982828 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.285412471 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.284824283 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.285295487 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.286504235 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.285422692 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.287024558 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.285099741 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.287431323 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.290631872 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.283353799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287888683 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.285417745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.285302885 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.284943347 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295658809 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31333909 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.287007419 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292261224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.283266594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287269749 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.290638635 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.286302033 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.285411363 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.286958158 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300808343 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29852669 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.285961745 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.285837606 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284363457 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28718598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.283925192 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.284626496 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.287883399 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.287289168 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.288672148 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.287021248 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290182946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.286512378 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.286933778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289850531 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.289916917 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.300855947 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288441439 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.287537284 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286946426 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.287985828 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.288168974 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.289459939 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.289824681 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288377244 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291198377 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.291540611 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298305521 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297389052 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.291965004 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.286461036 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.288435292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282186627 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.289757239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289569909 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.28595594 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289244671 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.287637421 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.288164302 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.288545827 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.287248499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.290766622 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289193678 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28872905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292328022 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.293969138 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290358226 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.286260159 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.289089722 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291358849 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.288426586 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.287770071 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.292252684 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291836727 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.303881965 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.300968385 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.296678735 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.287836062 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29443712 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.302565432 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.290362886 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290580271 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.291518464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.289908913 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292644674 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.296604818 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292199161 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.297075746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291768723 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.287738159 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299011624 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.317978638 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284319091 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.2862054 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.297554108 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.291978956 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288693965 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.292643202 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.291792352 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298904962 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307987036 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28930883 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284169075 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286597585 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.289079408 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293011897 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292901132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.293815156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283181136 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.293992072 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288718726 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291905931 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.292144179 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.292640132 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.290980084 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.296838823 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.300947105 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.291754743 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293893992 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.292888566 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294580378 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296457378 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293625644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.292750721 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.289827263 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.291399078 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293981491 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.295920145 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294489551 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28870695 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.293268673 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.292514146 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294888637 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291030466 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.304897546 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296260175 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.291217996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.289894318 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.294235298 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.297242169 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291759879 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.293909819 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290268011 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.293992936 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28922616 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294835729 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.294918917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.295672677 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315136918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.321847158 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295422101 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.297456323 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296067847 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.295213333 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.293857682 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.295112727 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.297572461 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.298722615 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.305517781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.293880185 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303141218 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315190162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.288880981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.30108646 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.294454836 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.306211082 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.298874878 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289537688 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.294451509 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.293121557 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.316899623 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297950997 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303818481 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324245719 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.315064233 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.29722936 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.297761196 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291168377 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.299074958 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.295852487 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29481488 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.295048533 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293774261 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.294769808 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.29827579 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304439134 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293174716 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.294591915 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.294753717 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.295035062 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.298206998 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.29447364 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290884698 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.297847424 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.296105044 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.298524621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293907427 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.29715319 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314716516 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.321577166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.298806056 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.299652298 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293538001 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.301574394 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294116025 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305518359 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309046175 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.297954491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295526796 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.301862787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292627965 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.2940338 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.300315583 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.299596433 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301241549 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.294509171 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.308332894 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322611049 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2944598 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.297885494 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299554766 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.29977212 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299925199 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29625667 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293094048 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296814848 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.300506522 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304550367 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291246155 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.296345241 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.29914707 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.312035729 seconds)
  done (took 765.825539254 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299226021 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29876917 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30045557 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29528757 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298888564 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29487978 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297614642 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290789511 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291622114 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292594214 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298142654 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294437782 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293968119 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294797391 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2936044 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295657698 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302326246 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297932834 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295526377 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294211426 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295589018 seconds)
  done (took 28.415129138 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.304157137 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293472754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30031634 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302216358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301004988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.304017927 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294711774 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300967764 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301141123 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295834341 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305408384 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304494737 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.30216398 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.300808871 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303049667 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306570243 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304852257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301247449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304469527 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303452474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305896456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301307855 seconds)
  done (took 29.841097957 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.306465205 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.305782561 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.30436176 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.299991841 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.306236698 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.302333083 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.303552522 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.304873462 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.305642106 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.305542243 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.306225564 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.306605699 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.316036447 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.314437057 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.30761622 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.307005011 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.307937833 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.307839053 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.305600212 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.304431659 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.31277505 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.326459779 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.302243647 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.300651515 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.306722734 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.303684577 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.30765005 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.307813667 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.305905341 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.312674791 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.303949427 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.305942855 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.307593538 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.299571809 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.303523853 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.310808702 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.309205472 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.299527961 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.306664567 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.319359141 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.330082054 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300767318 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.309942004 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.324606941 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.298850571 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302800256 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.3168111 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.297441385 seconds)
  done (took 63.963990413 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.924041803 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.940180061 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.941880717 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.949292696 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.961083668 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.948120306 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.948673299 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.960591426 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.944530635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.942633417 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.945334896 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.942645922 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.937159893 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.942738516 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.936580502 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.946426686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.935124878 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.953551764 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.939028945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.95695871 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.936186617 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.942163634 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.943922438 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.934648835 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.934824338 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.936521914 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.943771135 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.949670086 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.939686417 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.951941475 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.943651013 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.941954025 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.96174127 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.941781734 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.939579905 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.942299935 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.944018436 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.93939814 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.944207822 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.933440559 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.9471922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.935869376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.959586738 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.941272958 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.955354018 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.932917626 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.938864347 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.943862506 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.940157981 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.941649545 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.945047217 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.942642547 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.947419481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.948065275 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.962713552 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.946847706 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.94668225 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.965642563 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.945089329 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.947600219 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.940651418 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.939498795 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.94038309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.943309314 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.94115866 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.939640531 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.939055715 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.96119934 seconds)
  done (took 133.426452488 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314229788 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305855437 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307919727 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305729674 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305010223 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304139743 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305878711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305618245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305972393 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304486021 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307488842 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305621385 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.308574893 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304416851 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313918034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306657534 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304552517 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307855627 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304958792 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305545423 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.312465462 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31525514 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307319588 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.311093491 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310069379 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309152878 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.311981857 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309216623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311449495 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306456545 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314679016 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.31347368 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30974178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308597312 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.310892336 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.312283387 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310075406 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314982787 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.310087527 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30983748 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314078696 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313797373 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308185649 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307893654 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306609664 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307830555 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.311647783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306261357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.311526646 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314220189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.313813945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3101682 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309773115 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310673543 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308367679 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309312584 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315066774 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314125121 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316613486 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.312962971 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312656066 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308281899 seconds)
  done (took 82.409186295 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319070093 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.319590101 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.316446646 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.314337447 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.314004681 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314116303 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317004391 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.312736985 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31628159 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.313594365 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321116843 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314281384 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317288188 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315131702 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315297864 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31103537 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318426975 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318051585 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318457584 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31250408 seconds)
  done (took 27.530201072 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.318114896 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.321254293 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.316935336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311909701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.316234284 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316903916 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.321709046 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316914541 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317549738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314330321 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.321464434 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.320250785 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318709064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316375342 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.321863139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.31870062 seconds)
  done (took 22.30220732 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.318849924 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.317717233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.32180924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311920032 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.316063257 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.312310375 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.317902761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309350782 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.318664854 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.321252497 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.319557286 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.31360025 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.318660614 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.320232364 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.310934466 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312268802 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.31511154 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312272626 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.315186141 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.318645966 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.311159487 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.315392369 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.320417058 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.316210666 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.314825981 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.312395681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.316799694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.318064036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.316648141 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.319695821 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.317088261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31916744 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.320390533 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.314820903 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.321201582 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.316069608 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.317466496 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.316191951 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.320184105 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321102932 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.317737912 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312452436 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.315477059 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312139579 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.311348753 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.314060623 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311482033 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311707052 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311195415 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311870807 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.320199915 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.321839039 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.315202823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.315042002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.316208735 seconds)
  done (took 73.599294912 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323338923 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315504035 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318161441 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3232574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322075073 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.31446583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.319842472 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.319089766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322203993 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323433593 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312980658 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314741888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314299207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316629366 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315474148 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317231202 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.319724034 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317554402 seconds)
  done (took 24.946940451 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322814958 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.320107091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.318076501 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.314530148 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.316389643 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.321432116 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317794228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.319693347 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318445607 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31415763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320314126 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.318203892 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319488657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315871635 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318635204 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317845659 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317906963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320256337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.32032897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319331814 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325100328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317092114 seconds)
  done (took 30.231090979 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.324137796 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.318486298 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.318078254 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.334043013 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.341526119 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.325054714 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.319475853 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.324831482 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.346019094 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.37610458 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.371627234 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.344095212 seconds)
  done (took 17.262305603 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322140572 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32098034 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318493347 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323948325 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322227595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32088507 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31782643 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318985352 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324701235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322048875 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320821146 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322700273 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321220029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320878026 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326799743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319306333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324561516 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322710807 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315025715 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3262726 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324597 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319119917 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322584546 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315421441 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320102597 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316169514 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322367885 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31680269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318618529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323890509 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31981856 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31989304 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320925766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319473092 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31875482 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321414687 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319542807 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322211854 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320330554 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323327893 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326236378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325533081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328643535 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325840064 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331871994 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319326239 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325214785 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320715288 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318084235 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321884515 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321303444 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322025532 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323616773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328075536 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320163727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326333915 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321887345 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321942689 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320258131 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319220589 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321248036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325880965 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329749289 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321769269 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321014939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32224096 seconds)
  done (took 88.469240062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321303587 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319612941 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32043393 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318523083 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323601674 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325607593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319704241 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32007631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319795542 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321785694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329639684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325872687 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32588806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323806399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325147752 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320331324 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321207093 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324772796 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323274245 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330699162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322750073 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322941304 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330047741 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323370672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326989118 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335210312 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326933944 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324589072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323545455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322395706 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321660483 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323248853 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323379455 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320357123 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321432571 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320097416 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322304425 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323828245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322276391 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325655894 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321679455 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322042497 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322406529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321785498 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32218375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323051896 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323246253 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330944964 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32613158 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322771755 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324339322 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325362458 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324786115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323869622 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324768887 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324081263 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329434047 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325085073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32595255 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329615624 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32300207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325416828 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326059623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323328991 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326549918 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329255741 seconds)
  done (took 88.615916691 seconds)
done (took 1836.25888355 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.499969084 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.44356993 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.326831293 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.341985183 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321099663 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.327862194 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.330379659 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322312956 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.329633798 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.326446172 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.327705913 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.520795826 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.322056975 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321449458 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.328560985 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.423415894 seconds)
  done (took 27.041425618 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.360031794 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330296707 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.4636561 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343157716 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.359040866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.549561622 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387758166 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.334778068 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.533586787 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373852407 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.325444233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.3530348 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329096992 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.320917039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346373488 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.546713668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.615644473 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.320665463 seconds)
  done (took 29.422286133 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882352388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.337626208 seconds)
  done (took 5.449612262 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.357207511 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.334612238 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.331763262 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.331099712 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.3311363 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.322350199 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.331864657 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.328975156 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.316559969 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.479980637 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327612338 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.351847481 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.355534258 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.336294135 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.337884149 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.375012013 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.492657792 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.333783841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.328307967 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.335370804 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.333076506 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431683513 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.379998102 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.328251181 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.479605289 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.31725854 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.337043198 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.339269107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465747834 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.334458417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.332828215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330679083 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.335335371 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.32384413 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.907077565 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.338858963 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359907199 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34226075 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.330152717 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.514300829 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.337431642 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.340319406 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.334537571 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.867986102 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481132572 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460901673 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.338736913 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348365658 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.337472059 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.405543902 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330052408 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.333722383 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.381889049 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.228446299 seconds)
  done (took 85.667513018 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.369477347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.328678956 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513161886 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.353539037 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324304659 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.374227424 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.32744162 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.683978804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.349723454 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324719196 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.64810081 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94686033 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.344147096 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.392072335 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.22701593 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.390120814 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328767501 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.342065444 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.327221137 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.329126282 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.938894942 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32776793 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325161272 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.515625228 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366482063 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926657415 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334697015 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322822351 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.367461803 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.324453505 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914634942 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.357657698 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.400850551 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.323400432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.64157809 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.790267792 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.753479925 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.331276585 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372068858 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.326492802 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.335336284 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.912651102 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.774050441 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.330283065 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.324126748 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915016094 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.331228106 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.335920476 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.327963944 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586160605 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.330602963 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329289393 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.347257813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.34883019 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.329439333 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.439245493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.405036243 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.929227221 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330260372 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.325121514 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364260042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.332407349 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.334131069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337545049 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.350265282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.77483172 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540323566 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.338812941 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.779006211 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912276846 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.348831132 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969983161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350452857 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.355879102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.379930162 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.345735844 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.326718749 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923639065 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.35931447 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.327930908 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.734091751 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328213206 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.669410623 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.359590423 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.3495837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943296446 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.339686655 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.335678171 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332217007 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.327973453 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.360139709 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335126007 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.646421745 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359614373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.32974684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.331106505 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.342850723 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348573888 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.337103745 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.342652603 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971672303 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.360104938 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331305249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330249941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332434688 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.334691833 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.33332475 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.333894198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605591275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.33255371 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.354074485 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.337225163 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.329877883 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.341912217 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.500393685 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.336526062 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.703991342 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.333561685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330069319 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.337754252 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336889361 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.406949039 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327186547 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342241415 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.238420028 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.595515434 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.35903313 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.334296731 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3347522 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334786405 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330162221 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333829048 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.377612461 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336964859 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152567078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.365787989 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.345143285 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332184151 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.342605329 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335207633 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.330488229 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342270376 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647549875 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.65180186 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.518978135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.340009546 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.349704334 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.143357126 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.375460728 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523753293 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3613619 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334247265 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588400551 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.544402605 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.336190057 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.331478622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.336030103 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599531642 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334587788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657360754 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944073311 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.354170817 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346327874 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.167936956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066571539 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.334470098 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.338994034 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.664529893 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.354859091 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.336046591 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.334541001 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336436855 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332516401 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.341667023 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.342972954 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.338175965 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.336795252 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.356519008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.532487009 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.357345148 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.345115089 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915344941 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354930877 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337272176 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.340760799 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33811939 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.335797338 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399673724 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.338651067 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.349235679 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.334767579 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337168466 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.95401498 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.337473207 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.342152924 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.538736425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090731176 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.357394657 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.348865547 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.353711378 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.248214062 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956058014 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.359068247 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.730643897 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.34778865 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.383639524 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338951693 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.400542572 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949463012 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339013453 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.372962477 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.067588275 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.358775109 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.977707077 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.339467222 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.338048899 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021722566 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.359644379 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.345803725 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.336391518 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35678026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.647605372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.342392035 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.34595637 seconds)
  done (took 501.431904223 seconds)
done (took 650.237932947 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.341812158 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.344193685 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.331470595 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.339669877 seconds)
  done (took 10.602945061 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.354814828 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.348147199 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.359769042 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.355594967 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.354884881 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.346923589 seconds)
  done (took 9.368331992 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.342985224 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.346889008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.346724864 seconds)
  done (took 8.283864367 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.592858629 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.372299907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.724763145 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3607477 seconds)
  done (took 9.300215792 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.361133271 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.360739483 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.363639976 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.352351172 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352441278 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.352690524 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.352632743 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.353633279 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.354469048 seconds)
  done (took 13.448416474 seconds)
done (took 52.247851956 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.502993696 seconds)
    (2/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36887677 seconds)
    (3/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.460380837 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.477977231 seconds)
    (5/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368014761 seconds)
    (6/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.125079204 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.363523381 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.299056366 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.435913314 seconds)
    (10/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.357062652 seconds)
    (11/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.491868038 seconds)
    (12/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.492998563 seconds)
    (13/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.432830034 seconds)
    (14/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.034169444 seconds)
    (15/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.362178788 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.348335085 seconds)
    (17/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.410856318 seconds)
    (18/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.381852777 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.360695976 seconds)
    (20/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.407351265 seconds)
    (21/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.464111239 seconds)
    (22/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.433640288 seconds)
    (23/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353336374 seconds)
    (24/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357931338 seconds)
    (25/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.360357171 seconds)
    (26/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357562119 seconds)
    (27/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.508484532 seconds)
    (28/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.513074265 seconds)
    (29/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369908034 seconds)
    (30/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.467448977 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.361959917 seconds)
    (32/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.349322429 seconds)
    (33/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.465809938 seconds)
    (34/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.35023969 seconds)
    (35/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.586944264 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.479618888 seconds)
    (37/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.528157101 seconds)
    (38/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.365771155 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 1.791376112 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.089326766 seconds)
    (41/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.355529369 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.35579599 seconds)
    (43/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.347579889 seconds)
    (44/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.5198394 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.603245989 seconds)
    (46/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.129460735 seconds)
    (47/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.377506719 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.683580318 seconds)
    (49/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.531622094 seconds)
    (50/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.356254974 seconds)
    (51/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.363278473 seconds)
    (52/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.357580838 seconds)
    (53/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.380293593 seconds)
    (54/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.12055799 seconds)
    (55/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382136604 seconds)
    (56/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.383000221 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.362916232 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.372856198 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.360926112 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.33787031 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354454618 seconds)
    (62/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.355615548 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.399457642 seconds)
    (64/286) benchmarking ("sort", Float64, true)...
    done (took 1.984172718 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.364182472 seconds)
    (66/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.357832911 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.355970896 seconds)
    (68/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.364034074 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.463220815 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.343745504 seconds)
    (71/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.481110237 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.033764016 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.583839031 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.567840596 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.464172096 seconds)
    (76/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.411819435 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.434184335 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.439714371 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.443758107 seconds)
    (80/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.508160305 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.564770334 seconds)
    (82/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.410092897 seconds)
    (83/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.401983777 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.40566477 seconds)
    (85/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.357921524 seconds)
    (86/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.258823651 seconds)
    (87/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.404884322 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.079345857 seconds)
    (89/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.721975633 seconds)
    (90/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.338419646 seconds)
    (91/286) benchmarking ("sort", Int64, false)...
    done (took 1.628533111 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.417481991 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.134875839 seconds)
    (94/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.407683786 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.464549704 seconds)
    (96/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.358932517 seconds)
    (97/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.360647895 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.014058594 seconds)
    (99/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.36373714 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.450495525 seconds)
    (101/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.3686833 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.593357324 seconds)
    (103/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.35264159 seconds)
    (104/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.363962995 seconds)
    (105/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.488546651 seconds)
    (106/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.510184386 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.399397714 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.358157145 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.357759894 seconds)
    (110/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.591212405 seconds)
    (111/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.361019378 seconds)
    (112/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.083122546 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.452041189 seconds)
    (114/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.357836716 seconds)
    (115/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.556401552 seconds)
    (116/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.178525245 seconds)
    (117/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.462583479 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.551414001 seconds)
    (119/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.030310435 seconds)
    (120/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.378471807 seconds)
    (121/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.450966841 seconds)
    (122/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.374419057 seconds)
    (123/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.359653875 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.462950029 seconds)
    (125/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.361927196 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.374595301 seconds)
    (127/286) benchmarking ("sort", Float32, true)...
    done (took 1.912307389 seconds)
    (128/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.362205532 seconds)
    (129/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.494298888 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.370672276 seconds)
    (131/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.366280459 seconds)
    (132/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.444383678 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.387980907 seconds)
    (134/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.338624909 seconds)
    (135/286) benchmarking ("sort", Bool, false)...
    done (took 1.41217391 seconds)
    (136/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359336903 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.362020369 seconds)
    (138/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.356865879 seconds)
    (139/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366294084 seconds)
    (140/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.486642508 seconds)
    (141/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.405074329 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.358504286 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.341298982 seconds)
    (144/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.015767286 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.454032242 seconds)
    (146/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.381283193 seconds)
    (147/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.504271065 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.422876741 seconds)
    (149/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.368450069 seconds)
    (150/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.343940164 seconds)
    (151/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.343633044 seconds)
    (152/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395976132 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457414878 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359804062 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.451468339 seconds)
    (156/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.388938347 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.549634722 seconds)
    (158/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.407695093 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.360926048 seconds)
    (160/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.37828654 seconds)
    (161/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.149695154 seconds)
    (162/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.666329805 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.355290115 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.362048257 seconds)
    (165/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.352540776 seconds)
    (166/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.368134099 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.377877782 seconds)
    (168/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.37009505 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.371151278 seconds)
    (170/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.363218881 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.473208715 seconds)
    (172/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363614687 seconds)
    (173/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.354455832 seconds)
    (174/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.389629873 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.441639086 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.358278068 seconds)
    (177/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.428706267 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.466398957 seconds)
    (179/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.227262613 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.575897956 seconds)
    (181/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.525910302 seconds)
    (182/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.413724966 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.447087566 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.468575313 seconds)
    (185/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.391362337 seconds)
    (186/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.394669425 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.364112974 seconds)
    (188/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.500228689 seconds)
    (189/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.365485775 seconds)
    (190/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.372903311 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.343259608 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.419789913 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.364986522 seconds)
    (194/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.37556986 seconds)
    (195/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.581043391 seconds)
    (196/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.37067172 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 2.357336121 seconds)
    (198/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.344352653 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.417550508 seconds)
    (200/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.444576586 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 1.5600613 seconds)
    (202/286) benchmarking ("sort", Float64, false)...
    done (took 1.568555693 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.385902707 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.697027343 seconds)
    (205/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.388618032 seconds)
    (206/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.504567211 seconds)
    (207/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.457582888 seconds)
    (208/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.020627308 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.439984478 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.473967034 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.380619754 seconds)
    (212/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.142229904 seconds)
    (213/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.448453522 seconds)
    (214/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.379794894 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.418198549 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.366761763 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.523089665 seconds)
    (218/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.375078955 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.376938719 seconds)
    (220/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.369578867 seconds)
    (221/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36788996 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.368356794 seconds)
    (223/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.35891466 seconds)
    (224/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.551682272 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.445893182 seconds)
    (226/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.037538095 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.480619133 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.364713167 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.417621611 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.430136897 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.375631166 seconds)
    (232/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.161173188 seconds)
    (233/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.501400081 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.300283325 seconds)
    (235/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.558213701 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.450406528 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.524863656 seconds)
    (238/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.594574948 seconds)
    (239/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.588359634 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.398223885 seconds)
    (241/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.372630769 seconds)
    (242/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.370951952 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.528876269 seconds)
    (244/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.435643948 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.388715866 seconds)
    (246/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.607809968 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.39512186 seconds)
    (248/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.374928117 seconds)
    (249/286) benchmarking ("sort", Float32, false)...
    done (took 1.521714987 seconds)
    (250/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.479576907 seconds)
    (251/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.540634777 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.381629946 seconds)
    (253/286) benchmarking ("sort", Int8, true)...
    done (took 1.73075618 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.381224732 seconds)
    (255/286) benchmarking ("sort", BigInt, true)...
    done (took 2.358131484 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.73108314 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.219516496 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.366856096 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.102200139 seconds)
    (260/286) benchmarking ("sort", Int8, false)...
    done (took 1.508362001 seconds)
    (261/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.400076024 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.380262712 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.478088342 seconds)
    (264/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.373028334 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.375682687 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.434940331 seconds)
    (267/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.376267328 seconds)
    (268/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.347181696 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.382954549 seconds)
    (270/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.42140748 seconds)
    (271/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.376756075 seconds)
    (272/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37412735 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.535581321 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.36408739 seconds)
    (275/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.370432482 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.362008286 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.385426037 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.366046793 seconds)
    (279/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.275983602 seconds)
    (280/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.530031126 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.387533342 seconds)
    (282/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.459272212 seconds)
    (283/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.352876622 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370845299 seconds)
    (285/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.350168686 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.021537186 seconds)
  done (took 478.419970871 seconds)
done (took 479.667277059 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.408012239 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419232234 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.375309078 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.407376207 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.489247449 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.550936932 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.384583963 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.41188714 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.421845989 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423699835 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.379424821 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.549829348 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.376703478 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.375000513 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.3749496 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417036722 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.369974047 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.370376683 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.39205053 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.409601863 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.39216751 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.379753885 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.42442506 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.55089622 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.379539053 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.377507335 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.37923608 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.398488694 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.491973226 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378914128 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.380262499 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.388512143 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.373440127 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.376902603 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.370192186 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.398243708 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.387554306 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.388251583 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.412679035 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.492704174 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.367457659 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.400101059 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.379234318 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.379179837 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.377879621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.417081832 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379223099 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.435808137 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419876192 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.420395514 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.371913244 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.391201899 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.38679815 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.379057301 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386986809 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.376760895 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.435451892 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423227393 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.398310881 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422319905 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.370171763 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.377374856 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.416479674 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.395685543 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.389360201 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369143572 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.374478093 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.418373591 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.374238869 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.383544653 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.367510859 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.388155804 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.380306654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.391974133 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.414493849 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.379655332 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.368777823 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.377569511 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.388398817 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.377730361 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.425967781 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.42077071 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.429797936 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37997859 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421543595 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.555984995 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.389733777 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380809185 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.416544982 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.399507417 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.391877392 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.392223557 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.413830786 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.381420353 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.42852837 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.437335526 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.38906234 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.389183467 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.431106104 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.39150364 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.377271241 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.42552824 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.377247509 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.377267718 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.379686682 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.502185916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.376664624 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.380684929 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.416237012 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.429093672 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.441350934 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.386569309 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.390875057 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428699884 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.392159664 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.442963112 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.382994283 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.378351373 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375371745 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.505962266 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382854902 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.388539873 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428271856 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.440644753 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.381654133 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.385947953 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.378102638 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424763766 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.504735074 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.394425644 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.496933799 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.381837373 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.386367185 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.416405096 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426566093 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.416912638 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.442405525 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427437343 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.398895645 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.385574246 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394983059 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.394747979 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.384558679 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.440316215 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.38118986 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.417743929 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424940165 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.426391139 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.416111097 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.504689171 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.389483266 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.375569124 seconds)
done (took 231.029427774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.443797104 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.379156498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.488476792 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.380722795 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.488083372 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485580126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378778396 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.379069084 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379544921 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.760366724 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.381024491 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.379190301 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.38067876 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.377878734 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.465386391 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.381949937 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.380792763 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.724403271 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.382343088 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.456067084 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.38332261 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.380031131 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.383055402 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.763919339 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.380790841 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.377106426 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452744731 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.383535416 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.72794206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.377473388 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.379336156 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.728814716 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.47235825 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.399404544 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.392501434 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.390807645 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.487722605 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.405359846 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.464910382 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.465591274 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.491401332 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.42263911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.377116253 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.381595653 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.385194253 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.384608215 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.380824284 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.409736605 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.382267737 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.381056601 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.725812462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.394633922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.391448254 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.381115007 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.381848159 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.40399261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.38142369 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382891529 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474689433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.38505621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44714992 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.765366176 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.763744046 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.384891603 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.38134241 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.382220343 seconds)
  done (took 107.770804071 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.44999839 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4615791 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.513392594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.402346959 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.437754092 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.517280331 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402446925 seconds)
  done (took 11.46495278 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.393606128 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386428882 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436297968 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.43381577 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.388037823 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.604591817 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387514068 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.397732342 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.384306777 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.46560155 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.39888487 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387734535 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.392231095 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.384373858 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.434137902 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.398034697 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.500853144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.387693454 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.387187735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.541671321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384306749 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.393817357 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.462841518 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.400813344 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.400445763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39554063 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.355975656 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38851214 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384731199 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.387163432 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385664446 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.509118834 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.389539014 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.385856812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38353529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.547610634 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.387817939 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384742214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.388949677 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.389030808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.388398205 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.387949745 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.388546812 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.385763991 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.389435821 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.411766747 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.387636094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.388747494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.389882817 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390647311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.465587281 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390596748 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.384769409 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.386232499 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.465598815 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396300587 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391065908 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.387531931 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38978905 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388583536 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.544515074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.438523019 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38961861 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436635853 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390615814 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391822886 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.389945077 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.389361092 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482362206 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.390804238 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.437961638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.387244202 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.614037724 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.416541036 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394155698 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.395023596 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.393867471 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391186275 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.387729439 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.399093509 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.389440668 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.391833633 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398151108 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390439671 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388789842 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.576111324 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.55051998 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.390472082 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.404446001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.399588258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.389554513 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465905319 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.393273831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.389177345 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44396167 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.508805299 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.470011157 seconds)
  done (took 143.636487779 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.395882994 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.400702488 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.396712316 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.414612137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.392657772 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.392282835 seconds)
  done (took 9.678566015 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.394498928 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.39582172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.394326815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.393088389 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.392618987 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.406708762 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.404905359 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395429638 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.399050955 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.394496613 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.405157426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.397664495 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.395473142 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.393506471 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.40624511 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.393083887 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405906097 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391275434 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.393222919 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392243758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.392735139 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.394154329 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395415399 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.395964794 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.412540538 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.394740382 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403802929 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.394840526 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.394203611 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.401045979 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.414765678 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.406237477 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.39658729 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.401211929 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.411291813 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.397551699 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401550093 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.397385127 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392701782 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.405823472 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.396669637 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39491723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.395250305 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.397210007 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.397754445 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.401579537 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.404444767 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403768406 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.407421622 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.397886821 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.398699956 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.394965901 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.408103559 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.4015099 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.399357585 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419756629 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.403683285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.408184293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.39639647 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.398667201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.400104098 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.408559082 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399588678 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.414479251 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.394719896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.399694047 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.400012236 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.402384881 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397326671 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397772561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39943874 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.395554147 seconds)
  done (took 103.074516022 seconds)
done (took 376.900066849 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.447717665 seconds)
  done (took 3.7380396 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.399896273 seconds)
  done (took 3.693847686 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.44583569 seconds)
  done (took 27.746179974 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.455433813 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.482212277 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.395377595 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.389171415 seconds)
  done (took 11.015589852 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.791751577 seconds)
  done (took 4.084882066 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.3900068 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.398771283 seconds)
  done (took 6.083206936 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.807694653 seconds)
  done (took 4.10068577 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.845705982 seconds)
  done (took 4.147913876 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.39513005 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.405534831 seconds)
  done (took 6.106675075 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.376951571 seconds)
  done (took 3.668711177 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.948392893 seconds)
  done (took 18.240292354 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.387984057 seconds)
  done (took 3.684417971 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.413424856 seconds)
  done (took 3.709012151 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.63335459 seconds)
  done (took 6.928879395 seconds)
done (took 108.239156745 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.394615907 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.390282498 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.391144267 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.391275038 seconds)
  done (took 10.858167581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.43248462 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.432817445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.433439855 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.444218159 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.436011837 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.431980879 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424284288 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.42450927 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.443564449 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436703952 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.437596152 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.434901012 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.43573484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.439573727 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.434856367 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435109165 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445250011 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.434781952 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.427876693 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43743805 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.400080963 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.445903977 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.438156887 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.402351029 seconds)
  done (took 35.684664883 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.91603539 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.471653618 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.554685557 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.453659837 seconds)
  done (took 7.689394847 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.470343138 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.471686823 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.47953562 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.529119261 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.544646284 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.478486202 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.430116657 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.421092724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40911348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.471672396 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529323573 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.468041882 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.547403275 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.400995043 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.589865474 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.401791345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.40195487 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.479374884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.518336085 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.531408417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.401721736 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.481147118 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480729902 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.467599286 seconds)
  done (took 36.700533043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.402269826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.419066782 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.402117638 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.401129967 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.409722865 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.400850112 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.402377237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.40177517 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.402360963 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.953104917 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.421978598 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413504559 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.954878791 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.420983179 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408367699 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.403455425 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.957027562 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.964827504 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.422475879 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.409047268 seconds)
  done (took 31.667911138 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.394617028 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.39506045 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.747549956 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.653966504 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.397374014 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.396805011 seconds)
  done (took 14.282296627 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.491216852 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.685059272 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.405951426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.86579406 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.952904276 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.40816202 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.408117555 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.715371189 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.093543435 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.087357258 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.476758684 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.491629293 seconds)
  done (took 21.381677349 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.41301978 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.393031624 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.414676506 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.409756603 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.474468076 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.425948692 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.414923604 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.397108514 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.474478102 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.497034634 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.425411153 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.477589559 seconds)
  done (took 22.518576391 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492985263 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399001257 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419271686 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518326819 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397770294 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246488436 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.54033216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177970879 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.418229331 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673415205 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414955156 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496205934 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657472091 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40215441 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399233808 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.39194467 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631588591 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980249464 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39656033 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397703391 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463339605 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41895567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418103291 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667997449 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401739285 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399878277 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.660810598 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400658121 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754298142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416952819 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41229951 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400963721 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676979608 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15759613 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527889037 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664637089 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454484809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401460518 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.387464972 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.446828539 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415666524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403246129 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412289617 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400289365 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401290805 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415926743 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250876248 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.428293994 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.399094632 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40168623 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729650752 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501923858 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.406330732 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403724889 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418751943 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40217607 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.407485119 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401211919 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98540308 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405247738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405974798 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.421437213 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457717195 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403166119 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169288026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406016824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.40702247 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406375368 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402154723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398604911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440656587 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402702289 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.423890288 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403959852 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264112917 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419891118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407031477 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04305558 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409396063 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.4050575 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63902708 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402320601 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405180828 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.402133709 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405005169 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232777612 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409509761 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.388565936 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403569784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196550426 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.688038324 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426012394 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437646687 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631531312 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.388886392 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405316815 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.404492221 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427484035 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422880228 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251407134 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425766136 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.405033034 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668942767 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.616919145 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4171919 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.402843861 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998019056 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439415175 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421711219 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405951379 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.694699558 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.123453811 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424472292 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404998364 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423069716 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406234887 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274898998 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4204053 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.507722897 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405440099 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730241897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.320485013 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40510334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474900016 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411605513 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409189528 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407649547 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410362323 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407474153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.664451314 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439846057 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.422400161 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.420260329 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408086086 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.400776522 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426378513 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.410930021 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633803211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421715558 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684587189 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408591457 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407473002 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404836853 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.628537378 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.405048664 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.764288413 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673443558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414036156 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412586736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420646293 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42860826 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516025787 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432259853 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.423895457 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669321896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.411704097 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.414890156 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409977717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411270008 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416205038 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.417099162 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444649526 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128404134 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397053503 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413260605 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307238089 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.423697026 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479310119 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417108511 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677822629 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.419473949 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407209196 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.440473488 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.424368448 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633722705 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420617901 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.411016803 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491052748 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.965614922 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123890108 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420990144 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.41174388 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.409812557 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.407921711 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411117957 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412466514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411005343 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678465019 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429481758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41732324 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153127248 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413947086 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410046949 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.42040818 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425673775 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.419082981 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412486948 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425073388 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408578675 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423202239 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424996267 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558030512 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.42679194 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414808082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929641245 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419613943 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414093499 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413025561 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448116746 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413198501 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417309158 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679579793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413356384 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769475449 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414910189 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430717523 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.412400689 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413275352 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425361956 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.434221049 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425081662 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.426950799 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413627941 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417062203 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989657056 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368746899 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061775796 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412078408 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.420318735 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415733562 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.26753359 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436880517 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416676515 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692056159 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278667538 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433401499 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002347188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.433811493 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.32487855 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74069288 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651481284 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436258308 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.412057903 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750453704 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631845526 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450978948 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425054525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416275566 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.397848376 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06003858 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431478518 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515787943 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213176481 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431601951 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420051313 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.445878042 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416408567 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943344199 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438493802 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415918824 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424398536 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417232053 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325570744 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440938449 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416702465 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1893443 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417362062 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.012040824 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437430309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68656142 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.431188278 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.422637407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.432314033 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414872704 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677255175 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749986276 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419623157 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419534573 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08880818 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.292044995 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.42577054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419600394 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294396453 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418418495 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777416199 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.420636024 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.416804368 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438927231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417757 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419628291 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.416613138 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424218094 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403107701 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002525304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.416263622 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47468905 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418396663 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421777138 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.677929606 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.435003057 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146214604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651298324 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423898401 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466241106 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.425209757 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427765635 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.408371219 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419775696 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420347939 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439101855 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645911739 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419046093 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.403176645 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.561541156 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634106004 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422278359 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421005116 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721521502 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.419701827 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.449189558 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381626473 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456430766 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421029511 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425197293 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427424167 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440482036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51406693 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692271009 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.436372145 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.435242475 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929213172 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445157277 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42555011 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.437449458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519475525 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439913698 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.423248951 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.196592338 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119836323 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30908405 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117764734 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755049423 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424245683 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427772539 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424482718 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583814377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423307911 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698215447 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424151937 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.418310162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465746194 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424280545 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421887877 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654873087 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69798994 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423616649 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426316452 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425814301 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.423109105 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435210848 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.638427347 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011641122 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070450135 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422818411 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425238134 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265076727 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715482499 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425928116 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425519925 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426523682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.433340911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442197377 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427207206 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426541298 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565613306 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760108442 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199662694 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457028268 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.453848485 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.200766157 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427420416 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679231844 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429455847 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.696723911 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153442934 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257733076 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692094142 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496951723 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698974788 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.427614242 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591913635 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.436893261 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42664871 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425021206 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427545296 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.423607502 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.437065064 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138873477 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691929463 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.433090562 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.436608399 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459326207 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.439031089 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654384597 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275607966 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650433503 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437606694 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434287202 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426505254 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131401473 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759254575 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429714221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.426631798 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727857963 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430979383 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452763072 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.881925678 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.427135762 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096443661 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.400033959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44963438 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432708406 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304036789 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13657179 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426010432 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048497388 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432042116 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44401444 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707075447 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.434500736 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433099947 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704889202 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.433191485 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428994229 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725257974 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.156865275 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385819486 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.430745083 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438656471 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.43365712 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4286526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445822009 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431862323 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426363163 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.954410256 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451404189 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432157932 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437664141 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.43907698 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440079712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.428485101 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430191222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432884208 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.42755759 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.418008645 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440752108 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.430576644 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139344301 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459359866 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.246303882 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.767965604 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.69004286 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43660625 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.420239387 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.437665541 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431217507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431733903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431372715 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433066656 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10662406 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.434836137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.44461381 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437105892 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.65022344 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644012279 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43235806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70448275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436517181 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449221683 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.419902286 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433525617 seconds)
  done (took 1009.271285463 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.473359097 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.471228739 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.452584571 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.488586338 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482598162 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.525811055 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.496211164 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.504674014 seconds)
  done (took 21.226048378 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.451120878 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.438220406 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.447933934 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.441353696 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.451008554 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.014828159 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.463115762 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.438737369 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.444708081 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.454072382 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.44907849 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.415794045 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.461780573 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.451863497 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.421704596 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.437358104 seconds)
  done (took 34.025383607 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.931253616 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.759839773 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.296417688 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.482952993 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.503200848 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.431548575 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.90451648 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.45079191 seconds)
  done (took 29.094101104 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.448172239 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.44962466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.446255989 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.446548149 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.447756293 seconds)
  done (took 8.572480216 seconds)
done (took 1284.26537077 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.440092675 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.443153292 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.439971619 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.442088374 seconds)
  done (took 7.096207578 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.424334187 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.417627314 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.417691112 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432621896 seconds)
  done (took 10.024074208 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.336195553 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.226174398 seconds)
  done (took 5.896368019 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.970638229 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.980360486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.956744673 seconds)
  done (took 7.242376077 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.755055637 seconds)
  done (took 3.088463364 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.400426824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.337958213 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.159582428 seconds)
  done (took 8.234225917 seconds)
done (took 42.914512706 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.442379936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.687334813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.599164219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.446232832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.594588665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.598689401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.278611984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440872229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43857117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431472497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.433385555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.595348764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.194365874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.692094044 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.195407673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.786024327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.598374564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452953135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.444327039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433567513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.301156768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.447987631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.447308125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.439073197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.595578529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.586721682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.455135172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.78185737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.452024558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.436602145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.584375514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.458098929 seconds)
  done (took 85.102723759 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.441507266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43418323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.438812362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.455375658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.433447285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.436255726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.45746697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.458595303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.442683743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.440475663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.434754093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.435585042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.455324575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.434443404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.436284012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.458074664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.436494801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.441108169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.436127921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.435477045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.434814873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.470353467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435720698 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.459868177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.459503443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.438895263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.458303127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.43705335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437155245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.44802405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.440331621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.46872139 seconds)
  done (took 79.568733376 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.44220485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.460409912 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.438037592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.456833103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436076848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.460603239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.459737545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.437735759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436203789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.456453524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.459147493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.455166786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.438094515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.453041751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.437485768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.437676255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.470382625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.439323495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447286508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.438233656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.456821305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436927529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437168093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.456354278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.449409153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44078915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.470182833 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.438481023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.459979804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.460446214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.461961389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.457281824 seconds)
  done (took 79.724351431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.72519306 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.451926468 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.45144436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.434784143 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.450825213 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.451824127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.444695488 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.726018872 seconds)
  done (took 15.476386439 seconds)
done (took 261.206229228 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.442027063 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.443528917 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.669790224 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.469079963 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.449919338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464849057 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.471997057 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.712220337 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.46304885 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.731326136 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.46217545 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.465582578 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.445865767 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.484210302 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.773898959 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.610664496 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424769703 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.441823653 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.841582963 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.474024917 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.745550991 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.444148939 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.767594836 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.44546629 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.486269703 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.439984526 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.440769416 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.401943853 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.485883417 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.856041895 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.459813349 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.44402931 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.546324176 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.574288158 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.691649567 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.627609553 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.441311957 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545055057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.698324028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.446352906 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.442562685 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.304221494 seconds)
  done (took 86.818185843 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.453643737 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.578662915 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.455035114 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.454170312 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.454040817 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.581599629 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.551874298 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.453871734 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.454648164 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.453392438 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.452994587 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.454754519 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.453485449 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.456073206 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.455884864 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.454698442 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.453397214 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.469534434 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.469476298 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.502496318 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.582171535 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.484840053 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.448883327 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.455135627 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.565482827 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.598679533 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.455364737 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.449990138 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.499344663 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.457478892 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.459621552 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.502820049 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.457293526 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.456883229 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.575719421 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.559163386 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.492237803 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.453411464 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.574266162 seconds)
  done (took 59.389592749 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.468115432 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.74409949 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.955966308 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.452693465 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.458399102 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.463184042 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.558361712 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459745288 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.461686939 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.462229103 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.636911911 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.462368847 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.500868604 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.994693295 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.463279542 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.457264615 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.457930556 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.461669413 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.754576095 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.468894648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.580971614 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.46150449 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.559875975 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.470762722 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481577226 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461993867 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.464530123 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.056357031 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.501211359 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637004301 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.459311198 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.557861327 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.001087401 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.957204849 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.456449591 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.462193118 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.461706744 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.641392682 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.461843618 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.464243697 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.562478097 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.461883961 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.973510575 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.162603581 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.481589048 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.459677986 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.081595823 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.643216721 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.781972868 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470548401 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009306258 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.46684666 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.461531915 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.464889812 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.779732091 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.464585674 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.460604389 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.086591374 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.483092954 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.561523994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.463630629 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.462586009 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.754661125 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.464014834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.748703632 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.462227535 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.471087798 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.485322817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.97898562 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468221611 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.172174358 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.478375545 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.463457612 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.641051278 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.750238808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.131021547 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.487776422 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.759925438 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.017930153 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.562849432 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.468956155 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.049230022 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.566739257 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.467870792 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.465593024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.467520964 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.465504563 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.509486487 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.562601588 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.115205058 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.16867728 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.121231618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.586294517 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.47500566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.465778058 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.103302475 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487350903 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.466021416 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.975676558 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.180732232 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.487429043 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.473235112 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.189999526 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.48991699 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.566354632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.473159048 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.98878501 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.469389671 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512411519 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.466012676 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.473727424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.490008077 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.56607941 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.471507387 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.467009718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.163189143 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.663841452 seconds)
  done (took 194.216228829 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.477693366 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.455955617 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.474945118 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.456236942 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.459647215 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.468092788 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.460254858 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.46067307 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.469224905 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.46179004 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.461653292 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.462303297 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.463412243 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.469511751 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.466637854 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.468348731 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.46060127 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.463659234 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.4682744 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.457012154 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.462167115 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.461383108 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.463283201 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.457893722 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.463076199 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.462834079 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.468047955 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.458877348 seconds)
  done (took 66.338563758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.468260303 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.159941539 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.4648453 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.636257574 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.494402366 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.465541885 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.635724274 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.54434112 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471611842 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.466704523 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.465739441 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.868014901 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.471385352 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.108327458 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.707151794 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.655445671 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.106619141 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485167543 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.466113029 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.469140729 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.6398466 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.485445143 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.843310727 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.154124112 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.467431361 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.160114938 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.455781206 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.471772796 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.468580777 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.163357809 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.481319063 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.844110383 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.563832628 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.546386926 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.165832115 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.142595395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.135247777 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.654089068 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.471938165 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.469073214 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.470443345 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461395797 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.17717238 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.468319106 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.472332977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.180021899 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.485706212 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.473196698 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.478490563 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.470313739 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.54904363 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.553336641 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.875712397 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.251307927 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.566458596 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.486225862 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.640990646 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.878507788 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.470277118 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.104512418 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.473871759 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.166155345 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.488088872 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.462587404 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.473182192 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.478690307 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.665468822 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.642232412 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.123575342 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487525709 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.155180448 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.683726527 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.47148896 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.471836684 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.474100969 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.167347541 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.1547038 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.682956477 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.644824868 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.721428338 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.464877447 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.473416332 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.464596863 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.573690577 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.47362254 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.168580094 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.171230213 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.493350612 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.475310422 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.476807325 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.476921857 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.704714042 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.191079111 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.569242697 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.131154216 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.893817118 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.864695885 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474293184 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.550705393 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492137322 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.930567652 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.472582227 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.550689839 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.966271797 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.87412533 seconds)
  done (took 178.733840156 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.769361356 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.490862466 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.597591148 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.650375673 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.180678086 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.136163207 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.473077054 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.617088251 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.603877482 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.777895696 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.470584268 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.577623776 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.737911468 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.57150286 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.2636123 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.55524524 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584164599 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.642168977 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.636190079 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.472164744 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.213737028 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.819328161 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.702295687 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.520106844 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.598875066 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.349780446 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.131962232 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.047975396 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.694987261 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.468524866 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.070919472 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.48672415 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.478114428 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.28501862 seconds)
  done (took 69.038354576 seconds)
done (took 655.873612418 seconds)
SAVING RESULT...
DONE!
