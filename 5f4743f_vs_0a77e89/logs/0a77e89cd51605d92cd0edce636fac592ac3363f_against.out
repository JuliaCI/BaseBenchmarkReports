cset: moving following pidspec: 13236
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.99776135 seconds)
loading group "string"... done (took 0.547111025 seconds)
loading group "linalg"... done (took 8.877790733 seconds)
loading group "parallel"... done (took 0.171080184 seconds)
loading group "find"... done (took 1.456608475 seconds)
loading group "tuple"... done (took 2.099823235 seconds)
loading group "dates"... done (took 1.381068948 seconds)
loading group "micro"... done (took 0.219010931 seconds)
loading group "io"... done (took 0.625474214 seconds)
loading group "scalar"... done (took 42.98257033 seconds)
loading group "sparse"... done (took 13.233033966 seconds)
loading group "broadcast"... done (took 1.07046332 seconds)
loading group "union"... done (took 14.498150791 seconds)
loading group "simd"... done (took 4.972128594 seconds)
loading group "random"... done (took 10.07570619 seconds)
loading group "problem"... done (took 2.195337342 seconds)
loading group "array"... done (took 25.67468796 seconds)
loading group "misc"... done (took 1.089873716 seconds)
loading group "sort"... done (took 3.659487389 seconds)
loading group "collection"... done (took 21.781895436 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.667558883 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139708658 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.15215401 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.20288333 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.213092779 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15358238 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169337469 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.57116052 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.016140192 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21635178 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146688802 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.56399735 seconds)
done (took 5.946168465 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.265303653 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.453335698 seconds)
    (2/2) benchmarking "String"...
    done (took 0.132118399 seconds)
  done (took 1.264549084 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078337675 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182767936 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096016031 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11445471 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113723435 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113288728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.112286838 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096837064 seconds)
  done (took 1.513436887 seconds)
done (took 3.814149331 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.496247807 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.841164648 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545283524 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12972787 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160404648 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.153143249 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.322867673 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.180232662 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121093867 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11452516 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176744477 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.397850495 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.489834799 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.013764855 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.111379008 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130396847 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.086369052 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.713020535 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083384272 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.144762962 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.546904398 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113522932 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.123689397 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141457829 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204212889 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116899401 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178658874 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111438819 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67064394 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102922897 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185733235 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101068488 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165021084 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.251587371 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097297891 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094047146 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688775889 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193030701 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114483093 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098350783 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694585161 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083150431 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203801701 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110563609 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.123690444 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193756283 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118186949 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079753358 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104911878 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103540137 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160273938 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477932756 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109637096 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149651248 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110287712 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689200362 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099609131 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.160403893 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143819178 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108050056 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097585789 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.113721712 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154865288 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111560275 seconds)
  done (took 19.944212551 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11995701 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143488934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095331917 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14089591 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14068346 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098019935 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084194826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095995935 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126031635 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186988191 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138118298 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128386048 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092650155 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078950116 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119174949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253684723 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124780317 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.109712006 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101213607 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091468596 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144588396 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115929845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09500661 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113114991 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173674786 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210325926 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.125228187 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126560816 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080966117 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116905191 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145002457 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165283781 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077522178 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096427854 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187341471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123119947 seconds)
  done (took 5.264208355 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.204117921 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120060466 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197743393 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184722629 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15160335 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.187644083 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121636479 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258709815 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.270276082 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.17985213 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18697086 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132852639 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099595288 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0972321 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082857791 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096556586 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.71390258 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180746617 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151577984 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126726904 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08978512 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100409274 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379931272 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103668048 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083063971 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105519311 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072938528 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180478959 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103338765 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.261598606 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118168687 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088285994 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134018639 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213341429 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118410479 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145132315 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10521297 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083563733 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238970087 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093527504 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099546694 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076190665 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126676488 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133385399 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132498027 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083980326 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108087198 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241116514 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082120312 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119381596 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.071557182 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200967218 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09817055 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100794038 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.350934912 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11823908 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084716953 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100097522 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.285277081 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135522168 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082768411 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095395167 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08641826 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095885581 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.407090023 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092864022 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.915940189 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097848279 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16094476 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100130483 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105676771 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085168291 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102699716 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100237429 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098034688 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077736585 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097084515 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077876315 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101599866 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09793654 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098847191 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100730402 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077421071 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165103416 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119823327 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103619414 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12643927 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104432802 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082200379 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130263085 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096767279 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084007827 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146787909 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103400062 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098516642 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101702679 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143247647 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100496375 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166177386 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097105218 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126358309 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084079416 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128972337 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12043324 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098773557 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08027808 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101795212 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07790638 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098448723 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147569411 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095143422 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078941764 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099875762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093154176 seconds)
  done (took 23.908327535 seconds)
done (took 49.799036131 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.442372436 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093934107 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112912592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112194919 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111156237 seconds)
  done (took 1.621563391 seconds)
done (took 2.346621597 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.352473709 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175659392 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119696937 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.178500802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103693505 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.186297151 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166177638 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118105987 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19723795 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102170882 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176415486 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100971136 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104541865 seconds)
  done (took 2.833556625 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096034022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121546141 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083102292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113178553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077039636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112382132 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093193128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14387488 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091673033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103171498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075489851 seconds)
  done (took 1.836042521 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093289914 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116305693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083096578 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109216516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076743955 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109079873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092035136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119704589 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091968675 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106191852 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076896932 seconds)
  done (took 1.803113426 seconds)
done (took 7.185929582 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.051768247 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.29052654 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118553034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165546638 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33880159 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211350933 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.524899776 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132660321 seconds)
  done (took 11.753966875 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.113612586 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100773354 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.118218344 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083240422 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102029783 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083783767 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101525999 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081763312 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100365926 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081481515 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099789214 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081174513 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102476846 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08225655 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101210498 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080679913 seconds)
  done (took 2.297363201 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119040349 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118251405 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107093763 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111957851 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086474219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105397055 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088985839 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104835994 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101539772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086522803 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110118633 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091686239 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107564068 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101226763 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088153617 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110424527 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084950601 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105507061 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10639088 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089495149 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109594189 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.086578731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107293754 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10866474 seconds)
  done (took 3.284137851 seconds)
done (took 18.065852671 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.174509098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085612455 seconds)
  done (took 0.994336987 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103975188 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121541507 seconds)
  done (took 0.966770945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109166581 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099899053 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139317597 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117070458 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083863448 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100038744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134393139 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083390723 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100654029 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084152158 seconds)
  done (took 1.792635206 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087685559 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104820317 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091052055 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.121259103 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111546578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084925509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105911975 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087444322 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106078695 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08137771 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107430611 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119792457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089603541 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121464935 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106322501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088322241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11039058 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104163295 seconds)
  done (took 2.571803116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082807446 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085087652 seconds)
  done (took 0.909031177 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08521483 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098166807 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085091181 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101895492 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08051076 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098533987 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080627809 seconds)
  done (took 1.373980954 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.682562629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241058727 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337877525 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115095958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.135921555 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386413882 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136561096 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112810184 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095318504 seconds)
  done (took 3.027140837 seconds)
done (took 12.373409151 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.215890065 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.191739692 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.540883544 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.1182385 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079842195 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163141186 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.265979026 seconds)
done (took 2.319552862 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.363238361 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.127427067 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092040832 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081263046 seconds)
  done (took 1.406333873 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081173019 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105690372 seconds)
  done (took 0.935740576 seconds)
done (took 3.096586056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080821178 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080620948 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.113244078 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097763348 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080402627 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096975334 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079101888 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09931692 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079608103 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.079845253 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098223203 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080327991 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095225033 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077444392 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098156529 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080441961 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095399033 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080322541 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095662846 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078036343 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077458366 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098000419 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078066521 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096687401 seconds)
  done (took 2.921902238 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102624864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099688219 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08651128 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.1045427 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10390038 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086458159 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104750349 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080767115 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104832242 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08342978 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102688229 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103306912 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082939237 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103124665 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083129114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10299745 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086129191 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099049814 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083493089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10195219 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105044797 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08137156 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102927469 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08660699 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102011838 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084271049 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101178549 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099279112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086914917 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103135817 seconds)
  done (took 3.609958765 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089849134 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078012219 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096974207 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108206986 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078224933 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082334886 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096961385 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079568272 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097807542 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077630643 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098780225 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078767123 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096350205 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079697457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098028408 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085130738 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115994733 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078963034 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096436533 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078829386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103722094 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07856561 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099663809 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078053249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096410758 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078586562 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079265593 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097153929 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079511143 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09755288 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08478772 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.104067009 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07863711 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.110920028 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08583136 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096670722 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087732012 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097094226 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079583455 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097948362 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078275213 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097306925 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079075609 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108662015 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081991868 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097847708 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078773626 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080415068 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097832908 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082055917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09725225 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079421707 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098429409 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08041991 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103051155 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078428674 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09840202 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077660947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097959032 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07893773 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096799757 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078093967 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103485188 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079309647 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121934315 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090204681 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097235748 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080667963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101092537 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087101531 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099748926 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097844223 seconds)
  done (took 7.264077409 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084221004 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108843247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080901755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100201284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076855177 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097694125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.086788542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098010636 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080726715 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116997867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079437698 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099833455 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080638962 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102018286 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079457808 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099089824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089227077 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094841521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080164361 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101507401 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080620025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103894869 seconds)
  done (took 2.780647812 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226580872 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107345658 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149097033 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118095782 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098870589 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11407726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105105521 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0880904 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104790478 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089522375 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108809789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105394248 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099756063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107577429 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108296961 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090792258 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104248527 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108363416 seconds)
  done (took 2.79217616 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095055489 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104564383 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107592139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100836985 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082473091 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103535414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107633686 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.098578885 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10331647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082755483 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111164118 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085875981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104138785 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083271828 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103878589 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100824468 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085330612 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100930508 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09351566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107412043 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088796413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11156249 seconds)
  done (took 2.923904708 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099819133 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103762592 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113486185 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105300681 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097556364 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081210524 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108484463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082938439 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110027475 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084421697 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101697714 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080900854 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108156736 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082507271 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107086959 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082656973 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104029026 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082426777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103035128 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078660109 seconds)
  done (took 2.68233695 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125337468 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116994386 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099744275 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129652701 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118734653 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099429642 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128008926 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118488068 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099455629 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130477909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116967908 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099435186 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128835513 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124637817 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099654835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128891636 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129552888 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110614376 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118876741 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118138685 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112299062 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118764681 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129019944 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100095301 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120909055 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100380377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117315153 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124779474 seconds)
  done (took 4.031292515 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082025502 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081881869 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098434513 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079908155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098585216 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08004434 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099214086 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079775437 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100732032 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079840667 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081829538 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100303548 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082487028 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100528628 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082256205 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100854101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082269678 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098481123 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079502129 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098535337 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082136381 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081856529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100874762 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079939046 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098277346 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082663842 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098613144 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079992798 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102113005 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080366983 seconds)
  done (took 3.440025433 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091460271 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107752712 seconds)
  done (took 0.968659075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080636834 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118599782 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079649131 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105668906 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088858759 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102301409 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092917772 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106523313 seconds)
  done (took 1.542962455 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.108439822 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122496312 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089013668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115192981 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.103354448 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.12163136 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170459334 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.109169788 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09052831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.103749144 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.103982336 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102581749 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09344815 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108294887 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093366948 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118700671 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08232524 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114290096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092209164 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105533026 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089851838 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120249806 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113798452 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.091618657 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106005188 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095775586 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116612635 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114642332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089752305 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115569885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091981855 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095969586 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089640036 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.108091339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08234313 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.120862914 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102773813 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108952432 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112736482 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090133387 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112790535 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079310936 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114139126 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091594252 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115535897 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089841703 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108292138 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078939744 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103240519 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088618421 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098497317 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087173882 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096690527 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093654115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112329729 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121806701 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086912611 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108067779 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089860485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106463498 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093018947 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107532084 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095668048 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107476186 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114206031 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093870691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112388083 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079236091 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097404459 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082495817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114044734 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110661451 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115493487 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090492061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110532449 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081748891 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109184275 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110226539 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093042989 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114498815 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089270655 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110841384 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094963434 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106317626 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088266006 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111164717 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086434688 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10743407 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084799704 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125334962 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.105680465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082277553 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103890608 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095902989 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108241705 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087863453 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103824539 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094619324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097202918 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089802703 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11020381 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090967624 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116158149 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10946352 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090890538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112955788 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09690519 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109348321 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088996827 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099729374 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090849595 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105437608 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093191668 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097265734 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090091406 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107892631 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.090609479 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11412613 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086583972 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108008628 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114554213 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096995734 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10563482 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080613781 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.1081251 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089265262 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11302302 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096658391 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106055851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080075286 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099601935 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09453617 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.107965363 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091534845 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108670138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090525854 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098248762 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082568687 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.118197614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115849756 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088357498 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.11062631 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095706734 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111252026 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087484827 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114938719 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08821875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103567007 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113026136 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089120009 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099951696 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094534666 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107560823 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0876269 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108739026 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094799366 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109011542 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090365267 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106780442 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090531633 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110061661 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084957129 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109267911 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088335919 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117233359 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089590597 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100660819 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081806729 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11116421 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086607652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107816115 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084704495 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108721888 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090289256 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.1027099 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088726979 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107266883 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12127062 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09788483 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110511789 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092734551 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115710359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089700131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110660837 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08950773 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110040883 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090466443 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113185174 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11166358 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091022363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109026056 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081370149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110205578 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096438417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103792468 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083284517 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103843489 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08921671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116350864 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090445024 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110081891 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087170675 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111324934 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095027408 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108265248 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089279951 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104719526 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090208477 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114163461 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09224525 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110963658 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115970149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092720057 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099589883 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09403743 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106910494 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095158241 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099990941 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08629327 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105042256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092103237 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.107545304 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089435823 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098193701 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09628092 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115746202 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090941861 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104482535 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090300667 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118733358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088791556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112894162 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089715887 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113614026 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124255248 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086182017 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109137438 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098367112 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110124503 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079139012 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113328857 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087841886 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104225219 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089182988 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.107015092 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091104711 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112561625 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091925404 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099347106 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089135995 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.109182451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086178343 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100342452 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095673203 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110962114 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109022164 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099899113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110824885 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090586539 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11056002 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088507051 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110214638 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.093468337 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1110182 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091452724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108947072 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084560339 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106163043 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082633773 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099059423 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085206794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105832357 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106594473 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088485897 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104307094 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092268534 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105719102 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088035942 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124180694 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103986957 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085826071 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110908914 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093657007 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110124019 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089795186 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100677774 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095989962 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109519982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096400878 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108788353 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081958119 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110492954 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09054718 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109555555 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088158087 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111796488 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105622404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087781058 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104960407 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097457296 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105220525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096732049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109433909 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090406915 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105129972 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087397549 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104393719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081717478 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105765588 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107638501 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090530975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109017207 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093571749 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110325022 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089585246 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108915479 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.092704214 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111699646 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093201968 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099608834 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086019261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105828508 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090147446 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111897144 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090142735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105743302 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084993214 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107410056 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085372914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098239786 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09129726 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107974102 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087527183 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11519122 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101378982 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08795379 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11625421 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077218218 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104846843 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084105132 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106768881 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097784561 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111821278 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097629644 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111537154 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086865088 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102879097 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092916741 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.109001217 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080432582 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103833617 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094694227 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108363291 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089786018 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111475237 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093764226 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112011168 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094898844 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.110768781 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090983303 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.111424912 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082716606 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105729032 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083233299 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106791303 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107482058 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084097288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079884342 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10624637 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106640569 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0880572 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105437137 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085275484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111307085 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087891669 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108118081 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093579649 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098782741 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089696971 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106219214 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0871978 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102015391 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088657539 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107354482 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089104591 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.1109208 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087026651 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108159516 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086451533 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101554925 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086928377 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106036977 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087845055 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103291269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088107044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112695824 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099274884 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088251041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106257854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084574786 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107514492 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089754734 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107281294 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092154899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.1070293 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088453192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109981148 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087432216 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107661706 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088716268 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10520176 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110313758 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083802728 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11316489 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089118105 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107420338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087055155 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102397513 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087713303 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106043538 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086654924 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112554665 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089108914 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102828038 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083742206 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100337082 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088174235 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112124725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113069807 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087729038 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107883456 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079425272 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098463294 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088998533 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103105528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087144418 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108698241 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09294795 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107046621 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085312822 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104586744 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092469739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11118541 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090198582 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103763023 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108585079 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08911374 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106595143 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085491325 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105707656 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088787358 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108957497 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086987359 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102569061 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096244575 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111791731 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088921439 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105969637 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108595874 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087356715 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097740143 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088820891 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106920639 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090993871 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106507951 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087230215 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117501623 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083257321 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105301269 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092597693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106110753 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111900365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079477025 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107882326 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089597612 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108110588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079360425 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102765812 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085304617 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107680695 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084305268 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098195374 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099034771 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112108922 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089087032 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105028938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085857141 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098007004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079450678 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102566319 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08980371 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106571622 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095775129 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102867752 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083779652 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097854892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087741919 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108956782 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089432433 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100794527 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079232595 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103369295 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088909256 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114389925 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105400108 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08826498 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10864952 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089027423 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100742502 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093486613 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099230253 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090023261 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118325891 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089522597 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109282466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0907636 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11436017 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107542043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080282468 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108278313 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089209177 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108428484 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08986831 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110010132 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102655233 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109399798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083440858 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106722267 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087917066 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104603518 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114736598 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090684956 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109541419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090671949 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106213763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091372666 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114483316 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091247558 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108382282 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108071379 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08748061 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107511723 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086259539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105540195 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089781209 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108707263 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087996338 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109500874 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085553804 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117414953 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095099933 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109284214 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081683102 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10292253 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08494133 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099285907 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089533865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101778046 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0862844 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105724035 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086751358 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110034526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090885658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108133499 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089890892 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107260942 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078194707 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111529635 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088522104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111198035 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083410491 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107978337 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089775572 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113154644 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112196501 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086160997 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108324504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087881957 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110145855 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080233347 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110205952 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086747106 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106167974 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085047962 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10648615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090554774 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108942959 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089465775 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110026899 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08916343 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111935299 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090677105 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101073286 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081198729 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111883968 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08131826 seconds)
  done (took 60.043928536 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156163789 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086060782 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098630153 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079486136 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126236211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081200288 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099364611 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081360569 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09993852 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112841231 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079526311 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098078018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101739794 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127855482 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123809669 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113339699 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079105976 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100324146 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079564365 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100477424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119403478 seconds)
  done (took 2.957638551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109130581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123019353 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119282861 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100822051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111284203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115890288 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115910842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097738289 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120306593 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110882112 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101161494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117780799 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110608132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111222662 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09187946 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1149492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120987288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090721101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117876454 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115816628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094670565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115686508 seconds)
  done (took 3.236879556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097433242 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092113929 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.114357722 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081282072 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108374737 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081781478 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112408578 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083969923 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112830105 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107672073 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.085447327 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.106735388 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093283941 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100825595 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08688755 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083716978 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113065481 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107011536 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089403902 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081784191 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12843152 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101576853 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082395872 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104185244 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095905073 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108662146 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.088597489 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107117299 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085980833 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107798554 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083774439 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109562134 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091705491 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104870383 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.085328333 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107267987 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087465355 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10161174 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08431627 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110236756 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082336753 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108891359 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094159709 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105159736 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083739982 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109537858 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086849223 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102481172 seconds)
  done (took 5.502184489 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123562188 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157760824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093002215 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15579513 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125617352 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123536228 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092004893 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148418493 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105981491 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087775296 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126725966 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124258488 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089316657 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118952836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108019499 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089510967 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112750349 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093178425 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115876112 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113118041 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.098167651 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112107962 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122476394 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101167407 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112121708 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106108115 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088909959 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116687543 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120654483 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095276934 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113985172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097477217 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129465622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115926081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090951968 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112614317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124552146 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088978861 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112797424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105597599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091493196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117180738 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093295008 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124539151 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109197999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090420541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111014133 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090614045 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126239836 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113567904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.099326586 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12290551 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11243931 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088716145 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114899392 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12613011 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08813803 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108125444 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112057796 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100745289 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108319561 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09844597 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128632206 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114001198 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117884672 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102657276 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110529363 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113135882 seconds)
  done (took 8.469079985 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095871965 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133557333 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125482918 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105127643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113618972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11352956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094166705 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113109484 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092877709 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120996956 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113758988 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162286027 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087606148 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119795765 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11313486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094404674 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113501098 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093354538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115055422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113134963 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093631339 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124928004 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112453501 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104628655 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127648093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106904282 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093706549 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115103848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124354416 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113666143 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10671885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114549661 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112703782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105296441 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127155781 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113385341 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083790526 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113819758 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11370849 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093899236 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107455644 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10470267 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115685922 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107323822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095359897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114284538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125682599 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127447886 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100435108 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12074338 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114898041 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106254996 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113956318 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114015153 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105888176 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132895637 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124869758 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125621831 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093898935 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124877423 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124949918 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134533136 seconds)
  done (took 7.790381069 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088348325 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084617132 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103023533 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082794061 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105247305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08256716 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104903991 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085073851 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104644763 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084549083 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104196933 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082851767 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082299284 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10528531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082101895 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102294919 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083055825 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10263269 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085555756 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102452621 seconds)
  done (took 2.683968535 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093372186 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126189073 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085971957 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113476694 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087370076 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1144938 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10783288 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089219861 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105958445 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089074257 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119044611 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118930122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087188264 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112597917 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097164405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113643812 seconds)
  done (took 2.483562346 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106462575 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118995999 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131379316 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090813067 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10434557 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093499739 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105785581 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081462968 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101827968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09395243 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112143191 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095447315 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107222109 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083084656 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106816818 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09162232 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102185833 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109228274 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086752314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130835782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.090692582 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109073262 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086926753 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107511009 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090059248 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112812563 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112341829 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082847455 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104581132 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08613309 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108793601 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09390093 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102562764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.091328323 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10547364 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082853505 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105412202 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086082457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113233346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105232848 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08376254 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108131999 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08600306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10616171 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081432836 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106770885 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082036462 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112208009 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08795028 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109329824 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086512332 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114272091 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092944304 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118326984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11677449 seconds)
  done (took 6.351855413 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10105196 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109838769 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090239449 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103519126 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088328507 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114643055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089395634 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108529471 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088090632 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10358756 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087976608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110088862 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087787576 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111744624 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108653411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091216423 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101169659 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087868185 seconds)
  done (took 2.607185389 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091964834 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10547229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094218521 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106148324 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086580954 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108160782 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082230985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103831403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084498923 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10593936 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086375355 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108254178 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084964823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108356223 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086564253 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10598459 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088753831 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083614437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107120081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081142781 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109430906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083643176 seconds)
  done (took 2.937535339 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106124691 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140598852 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.124948118 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.131464794 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.118793296 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094315798 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124352121 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11153194 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109736094 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110741727 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089764402 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110911845 seconds)
  done (took 2.210765853 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11821483 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148808637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085993261 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11135745 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12094773 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091860782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111553051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091530494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125113459 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125463354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112809753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103832829 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124049895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122252451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119170997 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100316017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112325791 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11179788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087464507 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133198378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112434466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104136461 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112308783 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112425495 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092661848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122894547 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123171104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104888596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113545106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123917294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119837205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092594612 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124992739 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126594447 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088866327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12475833 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111428367 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135155756 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10021968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123087842 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109209536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099601495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124896383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118287885 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103964437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111615291 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118137419 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091972842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112153763 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13967646 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119867069 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102608461 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121048667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124133329 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124631864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1406444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126231986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102581935 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119658073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125843325 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122771724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100060443 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123134973 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1257794 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120298382 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101726497 seconds)
  done (took 8.39694288 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127243505 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106720326 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112710548 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105245414 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124153287 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111923875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091788285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112225273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111982618 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088758569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159539675 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112512612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123455507 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102950637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112537204 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091716961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113202713 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122814939 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088423458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139996409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114525202 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123194361 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123608552 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10133053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126759785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120021089 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113515114 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092633543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112262487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092004605 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120777778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112053955 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102286185 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106544713 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123614883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092143485 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113357329 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119985373 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092127765 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120831028 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123622275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134541653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091913917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113551251 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12749934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092047326 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112888678 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087920573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11453288 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108356692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105905274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126425902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126879135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123565801 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112499894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093175786 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11260958 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092701197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113205555 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120992425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103565185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113883232 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141206395 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113001072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092616225 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124175326 seconds)
  done (took 8.243665673 seconds)
done (took 159.62160669 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105394604 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14438896 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101656077 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172155857 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085842987 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142537128 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119580944 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.12464381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085965876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109648256 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086810835 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111087192 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151347364 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109620887 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086617431 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111302654 seconds)
  done (took 2.685272663 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18366266 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293930228 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1053773 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114478022 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093326244 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112181827 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113321646 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094140714 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108859303 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100944231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11029574 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090021288 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122195235 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089380677 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110449649 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109169925 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.101208698 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109854973 seconds)
  done (took 3.005920113 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119919688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159249245 seconds)
  done (took 1.117615615 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126320059 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188543739 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315179534 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16629505 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116953718 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132098245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164982674 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129695556 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197783184 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130223403 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13131842 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094753091 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139409048 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119971917 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098939199 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115837596 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120007949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117125218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115864099 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096451602 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138914991 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.095320928 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120981993 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116696377 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187192277 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129393231 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0951142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11545391 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096172628 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116560424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099522044 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130881812 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129844066 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171099475 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120747675 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186904239 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103752513 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113992037 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096320581 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114583274 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097798724 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120290199 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130091324 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093976039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116857327 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123323457 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095839353 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115481276 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.339505615 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125416064 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12228676 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099881688 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.192294397 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124013557 seconds)
  done (took 8.034775478 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.861092807 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133298885 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115457945 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.958407936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144432091 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107723758 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.829606245 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138331344 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242719023 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.861456822 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132310485 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127731254 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215768284 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283042864 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.152505266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341676183 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.719713069 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13185371 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119526923 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15617673 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120595208 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142951443 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133297347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424501183 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092082779 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113884675 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118693718 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104657547 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166607008 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114753118 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115127847 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190487982 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.272549294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209417716 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093054836 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114199927 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089992052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.198477046 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278119952 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202429292 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177268027 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110101001 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090213716 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126753136 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133982296 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087474132 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193448662 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186304885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183500321 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117202093 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125276561 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100842041 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12480648 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167268409 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111167234 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348551091 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346389206 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092041195 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121774697 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109818389 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273030209 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114950974 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232994871 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118903121 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224430616 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11576404 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796661795 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.197152693 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093153778 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123022141 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120401849 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098543702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126043773 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172864722 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384191294 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129816132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095873039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113392053 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229859056 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.115918482 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091720105 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17133669 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116537998 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12187899 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107069719 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127763197 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176951294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278571087 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132339131 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101108285 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118929312 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105311118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116289512 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222563027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226773576 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167361221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.246321765 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103986227 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194157731 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173810034 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127223803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177700625 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123000973 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131419899 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10658559 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224852526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157242626 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123914296 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105740667 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130932262 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161797766 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103785702 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131303937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186257507 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.485049459 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184442297 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0914572 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11951539 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121623732 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170599732 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098932458 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270340665 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124447455 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175081853 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121175833 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088765286 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1231415 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170998231 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129147569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122921131 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104557825 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123186443 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256711285 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230861765 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130812739 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220734507 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182137683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123947197 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181391425 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12373484 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175845476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125069386 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125854995 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094207685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812797061 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127922316 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099522832 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119328448 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198116222 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113058302 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09400477 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090647336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111627052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819821379 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09580497 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112352896 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093588537 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123730658 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099761573 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120469655 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118179952 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16990169 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24102675 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125998095 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09964251 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113541183 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.169456185 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093506961 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116812112 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091247101 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115956589 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12344126 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097537193 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115095695 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181182327 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166180069 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22883053 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543030543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093244209 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114578085 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237657336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092375255 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312755339 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121041694 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20897035 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.198167103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089422911 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34730622 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.19988405 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197598333 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096361422 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177475467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111712792 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097890747 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.191965901 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092037685 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122274774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166944146 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133762062 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128527684 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.134530828 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115762208 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235573224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111537584 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.180448551 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119726053 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105338616 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329312279 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123625526 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117930205 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193332603 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096755925 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115110807 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.596955984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115487675 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101826755 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12493831 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232012585 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173569401 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122457532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122412906 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105119464 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193932906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.222550104 seconds)
  done (took 45.505376775 seconds)
done (took 61.188163087 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315437579 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272120685 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.309896786 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224234038 seconds)
  done (took 2.079417093 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187423915 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157975383 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.151050511 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091444021 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159304147 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111688325 seconds)
  done (took 1.732064184 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.494198807 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.404784323 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.347623575 seconds)
  done (took 2.114769122 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270946353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.28570653 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366207938 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416740106 seconds)
  done (took 2.322731263 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215928353 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12992185 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102856842 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143834882 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175902877 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180697403 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147125461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156563446 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134507489 seconds)
  done (took 2.315453913 seconds)
done (took 11.444776961 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.313841872 seconds)
    (2/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.197392247 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.259177197 seconds)
    (4/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.214298289 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.156129299 seconds)
    (6/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.130902736 seconds)
    (7/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108401962 seconds)
    (8/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.268344523 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102716157 seconds)
    (10/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.246701951 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119857048 seconds)
    (12/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.104114512 seconds)
    (13/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.149340419 seconds)
    (14/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.215601454 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.175894147 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.120158152 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.220043826 seconds)
    (18/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101920383 seconds)
    (19/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213009225 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.281977048 seconds)
    (21/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21973332 seconds)
    (22/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.208792375 seconds)
    (23/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.193174001 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120759528 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.231083352 seconds)
    (26/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09422404 seconds)
    (27/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.235811393 seconds)
    (28/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166054668 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.228660211 seconds)
    (30/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.111561331 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.107451083 seconds)
    (32/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.127020723 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.102755219 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.134860099 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.27616212 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.110675143 seconds)
    (37/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209692799 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110507704 seconds)
    (39/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.135696631 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.101100481 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116361155 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104749163 seconds)
    (43/286) benchmarking ("sort", Float64, false)...
    done (took 0.179026654 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115568557 seconds)
    (45/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202946075 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109336073 seconds)
    (47/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.126560161 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099653088 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.240410195 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16451019 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.180240614 seconds)
    (52/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.10008379 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096283454 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142900233 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137781171 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081529265 seconds)
    (57/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117612646 seconds)
    (58/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095619883 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11576242 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148612848 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104004221 seconds)
    (62/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126381758 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.122027082 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20318816 seconds)
    (65/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125821034 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11348387 seconds)
    (67/286) benchmarking ("sort", Int8, false)...
    done (took 0.221796788 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.279866911 seconds)
    (69/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.212711113 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.193971425 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.119413523 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.14753557 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.122953234 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.104307384 seconds)
    (75/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194944387 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128304406 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.16131959 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.114117445 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078467104 seconds)
    (80/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.128702689 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.154031081 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19263105 seconds)
    (83/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.232746159 seconds)
    (84/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07867929 seconds)
    (85/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.101911242 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10444998 seconds)
    (87/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.202710561 seconds)
    (88/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.12623111 seconds)
    (89/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.138529078 seconds)
    (90/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.131167613 seconds)
    (91/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.16431015 seconds)
    (92/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.25330384 seconds)
    (93/286) benchmarking ("sort", BigInt, true)...
    done (took 0.25685119 seconds)
    (94/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.245339753 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130864614 seconds)
    (96/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212390284 seconds)
    (97/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09137694 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076753785 seconds)
    (99/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101224813 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096322658 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.145215679 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.143492232 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 0.224701835 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.148339216 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10449454 seconds)
    (106/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101900857 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123668363 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.147315714 seconds)
    (109/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.09967497 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.107777985 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.197960332 seconds)
    (112/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078008122 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.15209928 seconds)
    (114/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.158577386 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121043603 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.191528006 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.104291749 seconds)
    (118/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119572827 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.103927371 seconds)
    (120/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.100797504 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.124252672 seconds)
    (122/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135805518 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125939304 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096864087 seconds)
    (125/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.10103218 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097331542 seconds)
    (127/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118879023 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121511951 seconds)
    (129/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12753228 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15550868 seconds)
    (131/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107362637 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121216882 seconds)
    (133/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.220256076 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.095284756 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.127660498 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12216396 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10632868 seconds)
    (138/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117035888 seconds)
    (139/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079043114 seconds)
    (140/286) benchmarking ("sort", BigInt, false)...
    done (took 0.255922444 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.132656001 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122117596 seconds)
    (143/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097280481 seconds)
    (144/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.118863129 seconds)
    (145/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078486048 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114402733 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097413884 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131563596 seconds)
    (149/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078842749 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190903306 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132646389 seconds)
    (152/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.193810572 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097103686 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128358499 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098311681 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140633755 seconds)
    (157/286) benchmarking ("sort", Float64, true)...
    done (took 0.236443081 seconds)
    (158/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.160241649 seconds)
    (159/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.107978912 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.103836387 seconds)
    (161/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.087286409 seconds)
    (162/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.168275862 seconds)
    (163/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079089484 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144692877 seconds)
    (165/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.076855693 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120481124 seconds)
    (167/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.085257945 seconds)
    (168/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.123785295 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078206988 seconds)
    (170/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.102200177 seconds)
    (171/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07852453 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118381304 seconds)
    (173/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.077773441 seconds)
    (174/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113960415 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.121135907 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121379554 seconds)
    (177/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145065129 seconds)
    (178/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095702374 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119287961 seconds)
    (180/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079432606 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.131973815 seconds)
    (182/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098141931 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.101619477 seconds)
    (184/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079406943 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.128333789 seconds)
    (186/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096745907 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117619813 seconds)
    (188/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09468692 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.102004274 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097729193 seconds)
    (191/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120390688 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120821594 seconds)
    (193/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.141839302 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.102050772 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079408655 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121037668 seconds)
    (197/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086801581 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.226195853 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.127787952 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.095627606 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122055793 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097660714 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122020771 seconds)
    (204/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079243787 seconds)
    (205/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.101305761 seconds)
    (206/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.134527418 seconds)
    (207/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1024129 seconds)
    (208/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.086778992 seconds)
    (209/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16654007 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129840405 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.105265554 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121295625 seconds)
    (213/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079141048 seconds)
    (214/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.164926627 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098876935 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118431754 seconds)
    (217/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120802596 seconds)
    (218/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078419408 seconds)
    (219/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095832491 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103590087 seconds)
    (221/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207639917 seconds)
    (222/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.106644854 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.118849622 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121246108 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093368519 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.116173924 seconds)
    (227/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.134406371 seconds)
    (228/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115795224 seconds)
    (229/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.079467389 seconds)
    (230/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130628744 seconds)
    (231/286) benchmarking ("sort", Float32, false)...
    done (took 0.157211406 seconds)
    (232/286) benchmarking ("sort", Float32, true)...
    done (took 0.236669133 seconds)
    (233/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.102279866 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143008929 seconds)
    (235/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095531296 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115953606 seconds)
    (237/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092412395 seconds)
    (238/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120555258 seconds)
    (239/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.079313725 seconds)
    (240/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110324339 seconds)
    (241/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079901159 seconds)
    (242/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094755074 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115155764 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101603727 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.103417433 seconds)
    (246/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158274538 seconds)
    (247/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174418293 seconds)
    (248/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.112219797 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097510791 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.161135847 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119661646 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099793155 seconds)
    (253/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.110337323 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.106421284 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115092846 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.10327972 seconds)
    (257/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126153601 seconds)
    (258/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.145758246 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098981167 seconds)
    (260/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.119490065 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099767754 seconds)
    (262/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11914066 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101110284 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.101610737 seconds)
    (265/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079002257 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.114936133 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093448237 seconds)
    (268/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.118029091 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.106034751 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12122317 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079267164 seconds)
    (272/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120437308 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087212102 seconds)
    (274/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111262863 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078640898 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119081074 seconds)
    (277/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078575242 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095923608 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122801936 seconds)
    (280/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.102266349 seconds)
    (281/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091977267 seconds)
    (282/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07931848 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103140349 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094002115 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101605988 seconds)
    (286/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079342074 seconds)
  done (took 38.838220852 seconds)
done (took 39.719027012 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104067179 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156542958 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103184541 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145282072 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12823205 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108169245 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126241912 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103518191 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129944633 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130571349 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106763018 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109986608 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103114088 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126636571 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104487015 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146549935 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.129454335 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.100492784 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118731417 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.095130094 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118905099 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095806632 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120749726 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.085601564 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127180626 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124202838 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098576341 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126349126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.096121594 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115629385 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093843625 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123123612 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093151392 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.145286907 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097526535 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118587494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10281663 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12617514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.096507189 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121023074 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.123170871 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095394617 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121194352 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099879843 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119418555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094352444 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117551161 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106290984 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145929834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094844323 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.1249454 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10185399 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128593834 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122708977 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094231141 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118824012 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096471201 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146222847 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094462284 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120933656 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098978145 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125852288 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093968867 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11931217 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118916464 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102542422 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125603992 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095422236 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125363499 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098413734 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.114186439 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095816954 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117168413 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093300914 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.125374591 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10321555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.114038669 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096158825 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122887769 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097930116 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119289891 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094008225 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121656244 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095971792 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11750666 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086834362 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117353434 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09721 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119143518 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.117896592 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098165635 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121565266 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.098592 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125446014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095850801 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120363832 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095955138 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120329542 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097961439 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118259071 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.09022016 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118685164 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099713078 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.116858282 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096010972 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127778389 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117616925 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098342255 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.118190495 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095850321 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131052789 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102727275 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119869877 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097268625 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115668027 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09902116 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117659235 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094005438 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116576887 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095099841 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12155233 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119615234 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094376754 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.122729433 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105808776 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.115155316 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094631479 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118180732 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.096714147 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.12247292 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096332813 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116816034 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095394468 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113824815 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094081789 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.117233368 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099277277 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11724249 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094959134 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.12019489 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09528603 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121204388 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096078231 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.122118509 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116880902 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088552275 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097849996 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118476116 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096996586 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.120846784 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119613123 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.09122205 seconds)
done (took 17.795256877 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102458937 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190396761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151508758 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156574342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153264192 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111952944 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.131077954 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151641222 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128187381 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125313163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150204884 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142361097 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155300309 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103932037 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136852509 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126919356 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.102389504 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136681418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160554638 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122868885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152696891 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128138785 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148162019 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123055663 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126255706 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146490885 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.105079527 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126922081 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128709812 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119060791 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142702639 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129719262 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104704064 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1390235 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109441079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125414926 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.137630275 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09887657 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.127057879 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126838791 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115266567 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137863498 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123275869 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110286382 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126887784 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105670921 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126418069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125062449 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103448385 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121472991 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107467463 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1480724 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125069024 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104352182 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.128429058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126635913 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105403894 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130014013 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128621042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106713756 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12690961 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105957822 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132722061 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144085285 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126161823 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105308882 seconds)
  done (took 9.357273793 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117953711 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159682026 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136402342 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110220189 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.132118467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115053603 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091674334 seconds)
  done (took 1.803127459 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092587613 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147224011 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126754169 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151047862 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138585614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129805195 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137711785 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.118313999 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117902657 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127795861 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.146181555 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149200169 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118850687 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.130619593 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128702281 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117757095 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.15336611 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094010995 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124859626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.126529932 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123622217 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141307656 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.107335354 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118916991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115048313 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120543225 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186872512 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105699307 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117704798 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099763439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124380978 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.191273014 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140683063 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.10435186 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11616045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121855074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141085729 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123729074 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.11858855 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123356192 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140635744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100607063 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125783226 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.10050295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125846324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10827956 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130735966 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127558135 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099875044 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147160638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106089424 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141077875 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120370181 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097793713 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129033133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100723174 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134000053 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099108637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146945738 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125126236 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120255596 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145213759 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140404149 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121333336 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136249691 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141041713 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.115693815 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124407887 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102208855 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126721067 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145600474 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097660474 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130299387 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110261915 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127469254 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145327033 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.121861101 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122677124 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107119846 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123072741 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097172891 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119059503 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110243798 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122698592 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095960046 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136687295 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13085478 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.100083591 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122651652 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14127924 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098979718 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.130822485 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.105384386 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123365452 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134317585 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122526476 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129857548 seconds)
  done (took 12.998969385 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095782856 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095149491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125939585 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12054714 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096171335 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120071278 seconds)
  done (took 1.601527229 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125980454 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123481035 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10993763 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127773738 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163142693 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118027659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144309391 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130018525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114774836 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134788772 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143047667 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.12006865 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150097588 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101890477 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14477199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126795307 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11941309 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123275395 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109492348 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124403854 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135375675 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10249647 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123631079 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.117423912 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12726942 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103433271 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126561277 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134795869 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.110291555 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129928862 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102432195 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128700712 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12603222 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.105161686 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144019511 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101975229 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124298024 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129372269 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103338552 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.13053166 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120663433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124138409 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108321514 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130488606 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1297011 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102949759 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129096278 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100808039 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144326925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129261994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104857945 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127300911 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102454398 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128926316 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103219701 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130215175 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12861237 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.119152933 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127069904 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102211338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124736295 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103086076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129919819 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126891996 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102321374 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128733088 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103285349 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123979077 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099346565 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128047557 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104341359 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125464868 seconds)
  done (took 9.701660236 seconds)
done (took 36.39819811 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689355105 seconds)
  done (took 1.629114269 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.868702146 seconds)
  done (took 1.815982274 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.846661248 seconds)
  done (took 18.823992683 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542280082 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.634556945 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.982423526 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170223376 seconds)
  done (took 3.275769657 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.976162844 seconds)
  done (took 1.939827077 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.316725389 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269157002 seconds)
  done (took 1.539558188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.841841075 seconds)
  done (took 1.801643546 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.580121474 seconds)
  done (took 2.538956965 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356637543 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204048501 seconds)
  done (took 1.532946395 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.596834623 seconds)
  done (took 1.566575505 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.609846963 seconds)
  done (took 16.577702665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241491933 seconds)
  done (took 1.22638052 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309847047 seconds)
  done (took 1.279058015 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.691979756 seconds)
  done (took 4.657170147 seconds)
done (took 61.160846105 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107129274 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13447772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109627898 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13069649 seconds)
  done (took 1.443211569 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112927997 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128484751 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107361038 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128205746 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110493298 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129130722 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126698421 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.110066941 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.129007227 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104908621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129430593 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102813389 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131481287 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126632817 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101517725 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.130590884 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105917458 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128690165 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102668091 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130492404 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126625335 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.104918128 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131407244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.10282954 seconds)
  done (took 3.815905812 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107296974 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124016228 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102859154 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122892184 seconds)
  done (took 1.436034366 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111934189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141670305 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11623798 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135446315 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142229748 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116448199 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124371543 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099271322 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127194961 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108712256 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126865275 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144979906 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116641093 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120070621 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110726169 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119127379 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095269225 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143324446 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134611007 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110925553 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1245018 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109280166 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.13229878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138118502 seconds)
  done (took 3.924766332 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21299112 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112556535 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148954268 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105324918 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178849941 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.151260686 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123234186 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124586367 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.124168328 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1101726 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.129108484 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.179610817 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.109429938 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128864398 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125451624 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106096845 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.136271591 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135354128 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101659869 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13818798 seconds)
  done (took 3.65735606 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10846254 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123926753 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09536304 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123355364 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106028213 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126842191 seconds)
  done (took 1.664970567 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097955325 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093301305 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.120392754 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093467069 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124033728 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093237911 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118091632 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094305217 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.1191714 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094190763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119123829 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093563471 seconds)
  done (took 2.242783119 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.555045945 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098284604 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12805852 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124303436 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104096412 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122800714 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.114366421 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.124307384 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.18101474 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098094046 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141794038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.17856618 seconds)
  done (took 2.955692775 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217722353 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103819403 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282390049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.429783459 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164868427 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17307015 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.359653448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174230179 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193652344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117173564 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239343782 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163851516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134225782 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186687864 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14648994 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192981386 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181957882 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233597614 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129638158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248411106 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171990103 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174603821 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198172702 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15846493 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118499826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166244396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125476744 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134318403 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180450191 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176763988 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181099531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155227428 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145130286 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208875605 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220394086 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214380218 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.367059631 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139205589 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198781145 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201499122 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283949259 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14855998 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202087974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162805887 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137708397 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189305797 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164521682 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188026032 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138367463 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121121076 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219318688 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183391793 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187734622 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145534018 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369264627 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128611627 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152643752 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191382099 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223717286 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208187626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174920296 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103277991 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257640495 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198712685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188612948 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152325367 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175490892 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132522958 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185670162 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212766568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186063274 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175186983 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226463958 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14133096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172437904 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187451067 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160907618 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186723042 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168141105 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101382343 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157336173 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144564031 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108181707 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194230446 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129215459 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222688224 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143096642 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.297355907 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217431807 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166776135 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168629645 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17210836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174940399 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154776657 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125183636 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126350009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179416112 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165072788 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141091192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165486627 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152783356 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107153301 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159743776 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12959875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138876312 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141690578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174721736 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171494585 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134968331 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171148487 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129333265 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.167808441 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177742897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230208781 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112164667 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140511536 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212060351 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165464613 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145569821 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194427317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20451335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179616446 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144494019 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176256439 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203625992 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150157282 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205679338 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150207963 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140629505 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.130173869 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166300811 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163619375 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162917273 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136624934 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15827145 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211835785 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133691942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116638237 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182063245 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134271661 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107521152 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151461513 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143800219 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148463957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129394304 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145751342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163064176 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167253633 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16104978 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166045141 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150486056 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20125738 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140306893 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167187299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127367097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126282957 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187422347 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201297074 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137048489 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195081549 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.176360209 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268690072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171512188 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10956855 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187869079 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138334641 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126616193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173709353 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168884028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169387306 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201738901 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268359162 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174919075 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.132486551 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15788187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173659464 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191659248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164796716 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153823695 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171332855 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175867656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129940466 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102295496 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134435817 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147149972 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110522107 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14129705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188618878 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171359209 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257145951 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169206248 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146450992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201062991 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105978155 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172873441 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179855701 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146814985 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200944126 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225888875 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174955688 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122960729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178409037 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128498986 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104030152 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140159729 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174444457 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140893823 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113843283 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152511189 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200525451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182256178 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159164777 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274074785 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173827588 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237902365 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102719624 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171655197 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187936892 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166460287 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170436559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138793322 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167464767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195703661 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150750738 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200751971 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170715988 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176929724 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238979536 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163741715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110562454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157743628 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176922179 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148565224 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17999492 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153166706 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115760459 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161925333 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144370523 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105213144 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216732282 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121727293 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216942416 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17504581 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182926262 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133331102 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12319744 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168887508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152924609 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.123639836 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179218983 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205430738 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152505904 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166741382 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192208487 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137398832 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.361701078 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205882385 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222862316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116907254 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151605719 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17038301 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17822801 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171848848 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192017695 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15190811 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188900568 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166381714 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149995145 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114787462 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154766843 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158703304 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158779112 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112830693 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160274958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150941416 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190813155 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152645112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166302617 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172375786 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154723197 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.135427748 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149049083 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21846731 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167007071 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184811507 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164233492 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183558981 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196144701 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132789835 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106209106 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135757102 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190791569 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140113093 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167224788 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.228688984 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278558418 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168296257 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177481902 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144819526 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103758602 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168537505 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157050513 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267796252 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122771718 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143998386 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236043058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13054295 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139765454 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172714726 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349089499 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151019667 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194910044 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12945716 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32520501 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132857844 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111507891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178755354 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178145264 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139655977 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191797976 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174121094 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124698816 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177742075 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14632467 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.26134014 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219942801 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178517639 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183198113 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151765509 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166192485 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17210214 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193765111 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151620778 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152540124 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141268721 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227880269 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20349628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14050958 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170825739 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143310063 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169565328 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211194305 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11303246 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194818329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139118023 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173609824 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148051769 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102368852 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165635423 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.254111128 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139740375 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193498426 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164638637 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111024341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134100017 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160330068 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166706145 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122647464 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137716135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186163645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136317078 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169913744 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188521937 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110781552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162912025 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154235576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109843519 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150503257 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153649749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142453274 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152667115 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198128696 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139603032 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193897042 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179616304 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17294488 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168029149 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153383969 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669632917 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107182779 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227013402 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125802486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223021104 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127278587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17565704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170627921 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157937787 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177109434 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157347953 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228964903 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17536772 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165768756 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110372646 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152828461 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153977003 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137366654 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131198878 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171395168 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148609044 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143168619 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164501382 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126054478 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153528896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14732043 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202944715 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155551128 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191578273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193319446 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14643008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173977218 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183277967 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136864013 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.139704369 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208656457 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12108894 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159488912 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138490533 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.113504516 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187437486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132692126 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169568893 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167496286 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169849035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172804638 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113759724 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167951256 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151223561 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168440122 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104582008 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163563427 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16596361 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13962008 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105482819 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16405641 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166934868 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167607233 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134957381 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154555946 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195444962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133789317 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141017882 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.339784382 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166109535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201342161 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161687132 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142300905 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121870016 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163816584 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160336347 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168284988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136414963 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111140728 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139163215 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.190095635 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174130407 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166685185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195584204 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168698868 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19656046 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113518314 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275622615 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148143128 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162563979 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.108864436 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137038712 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149480646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113054494 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152843937 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260596644 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187380933 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158872704 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123255499 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134114681 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1336576 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112702828 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180120265 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161994678 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16639739 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150595876 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096272329 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151901733 seconds)
  done (took 82.285351687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16412805 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149130231 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157222001 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204006451 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175280632 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264320764 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213533976 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235249082 seconds)
  done (took 2.633413531 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.111079197 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144625548 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147782432 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132533473 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.098642211 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.37815775 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142915004 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10479611 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159410086 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141669442 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12340397 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.597131063 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129325252 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128892806 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118356394 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.097476429 seconds)
  done (took 3.819906724 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.405527774 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555311811 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.076559536 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.256486283 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237325958 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184938056 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.763104196 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172670129 seconds)
  done (took 12.727192901 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135286319 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147823276 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.147797027 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.174638623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.159480122 seconds)
  done (took 1.84557991 seconds)
done (took 125.414223475 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10585467 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131858519 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103568836 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133781897 seconds)
  done (took 1.537772676 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11886955 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08685489 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117713892 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086058634 seconds)
  done (took 1.48139086 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441931077 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117227343 seconds)
  done (took 1.67106179 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135261077 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152727203 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.121059597 seconds)
  done (took 1.489547232 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115609801 seconds)
  done (took 1.196493549 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117750602 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139422387 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121320594 seconds)
  done (took 1.459300905 seconds)
done (took 9.908228549 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121695083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440479938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391630382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14532571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730004305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386244656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053017857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166339696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17460271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097718417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146300612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676750092 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038694536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347069811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024749573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378727794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680991816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127126591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104216343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126823999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002184304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124719802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098792798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128184772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678037809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430959697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097264278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393141476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096621417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133388619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.41547709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098715807 seconds)
  done (took 17.127780693 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104062153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190284299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105223373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128029487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102447682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130307649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.13493877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112934821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187990685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126122563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118737095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126113975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103269667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12729656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119895104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126052364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100668885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129929789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10426589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128983791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14520792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097950834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127421407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101060717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125562068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112048603 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126459604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.112003722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126829692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103056987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131931586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097741447 seconds)
  done (took 5.000583614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151560747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201023256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136009809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133102106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182459797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128527234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212780658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167162079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191717244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098755081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146916752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098521343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165753529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098433761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149696188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097907557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132137787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128221936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106935479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12799646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118758052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126382775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100470978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128726789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099392158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141576485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099119995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140660576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125448202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10374133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132564247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098669297 seconds)
  done (took 5.360917008 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110804095 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135815625 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116080326 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144162801 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100697378 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134922353 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106900915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129379175 seconds)
  done (took 2.069230261 seconds)
done (took 30.642353638 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120703006 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.131555884 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.113707941 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.140486501 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108124552 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.163140809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097502337 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138353798 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.112366647 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135611155 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114549779 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127657122 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10061988 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124942044 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112264318 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.132231774 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.114852202 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.13644375 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.120298177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143975963 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099103018 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.140530279 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108426063 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.149641949 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.148287224 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.120195441 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143549574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103890207 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128174345 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099970766 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.144966243 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.124285312 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130501348 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.114528356 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134049657 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103163329 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128257698 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099707941 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142636235 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109101178 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133771698 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108898323 seconds)
  done (took 6.284206957 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.133962182 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.172468679 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.095820374 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125162868 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.096180631 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.168016817 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.163445564 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096632016 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.126002405 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.124411167 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154405994 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.124993897 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.097515388 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.096370093 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.127837529 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.096341219 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.152666869 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.152740275 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.129665247 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.160383399 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.174900082 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130902839 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.162783162 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.151987005 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.142214996 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.166409579 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.150140323 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.164264235 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.127653462 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.125199995 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.129687325 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.16113309 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095854688 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.125078763 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.169491157 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.136104796 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155771118 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.169752733 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.130488626 seconds)
  done (took 6.463017743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112837011 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147091051 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.130254684 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.270860968 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140599192 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.146108244 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.114270382 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.148020525 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158894066 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099913972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140537723 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131471055 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145623816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111772149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135877102 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142662934 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.119090586 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129555684 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108452566 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.148675524 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117895838 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142124661 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117252977 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140602035 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099893095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13911369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.137080735 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11535652 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138430559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110391904 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132754068 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103528362 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131330252 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148167797 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.105159897 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.136503282 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121668336 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141067632 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.114037341 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.166261531 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139959849 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103676854 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1520165 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.18095335 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104229398 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136578578 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110990851 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142319966 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100205601 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149177931 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116977237 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.13231642 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144938328 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.100138432 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129770172 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109929618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132821693 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10358558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.141478033 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105071572 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151022983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110152648 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140677183 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.133280847 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.109287466 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127911921 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099789554 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.134415502 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125565128 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13770393 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1651727 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102738384 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134148057 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110843825 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13764565 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111942199 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129359028 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109552194 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139989537 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107287219 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140202565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102241362 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134588314 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.146361136 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.115500828 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137567214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104963756 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135680397 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10249982 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132875358 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147147591 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101435702 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.133014598 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112990943 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131246867 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102705314 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134953612 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104599219 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12826649 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123488353 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135309523 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099845972 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.151473941 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.131419312 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105077329 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.138042214 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115494066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129139019 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104616669 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136406359 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099606837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138740413 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103812459 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130902008 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1136878 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145456603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.1069143 seconds)
  done (took 16.065323303 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.256887302 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22960188 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204220266 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315909677 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154087239 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.157757704 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.226841691 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.151219959 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131196281 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171114665 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187599949 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197749244 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.18643638 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196264626 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.1885376 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0993553 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.165014187 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183583058 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.230037445 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.312422066 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.16712358 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.113167505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172272893 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169619359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.148960315 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.146388162 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.12351403 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15166346 seconds)
  done (took 6.256368081 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121339558 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170776902 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.13759333 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.130421354 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157664596 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130944103 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105364605 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100550621 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146480112 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146297602 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101535912 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137477692 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106388527 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140064528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099487534 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139678355 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.109600297 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139910851 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132275815 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.105296985 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148640797 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117332726 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.138063646 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.105386995 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147523 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.136877687 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102741117 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151314131 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.140529533 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.129906246 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.129181062 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109534472 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146379767 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099572592 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138799836 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132778243 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10274688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101589163 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.134258198 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097215565 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.130143974 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090382711 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136479479 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145240535 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108139208 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131620936 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105828813 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.135523194 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101568253 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.1278743 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10286444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132447992 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105237098 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148005354 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103706219 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131400353 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.104542963 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130039494 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109934211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.132819987 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098662131 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.135756516 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107611411 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136244112 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109511984 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138483057 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105317323 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.133262241 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105400343 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.138440951 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102590553 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.143927052 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096676123 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.134470459 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111009872 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143794348 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133467171 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.106230778 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137934106 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099225977 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.11929652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099819397 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086347957 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135050829 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098884312 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136515868 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103351066 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136985604 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147543269 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109798736 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.139337716 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100651854 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.13766382 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103824358 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.128476422 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10457932 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149060437 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151031742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098866645 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.128304206 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122906117 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.132732844 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098297895 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119080237 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111646038 seconds)
  done (took 14.024019395 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135075726 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17071641 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101243366 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.150939711 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.167628438 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130390675 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.145820721 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109539237 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131977302 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120729451 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139269565 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109383643 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.139188077 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146406 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129112581 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144583191 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101003799 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.147421175 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105929505 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173834965 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151324465 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.127105525 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.164142503 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.142657561 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105959155 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155428975 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.132218054 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.147204406 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112935373 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163773106 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.145411091 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.133121038 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167606735 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136526253 seconds)
  done (took 5.819838929 seconds)
done (took 55.99942711 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.227700947 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43220828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.186583648 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.188970876 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.233247124 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.232363117 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191202936 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.383479725 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.942897653 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.179393048 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.188104027 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.190292632 seconds)
done (took 27.691739588 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.204898781 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.78431118 seconds)
    (2/2) benchmarking "String"...
    done (took 1.539009893 seconds)
  done (took 4.435052885 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.187647997 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.190970518 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.434877392 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.189792731 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.207149505 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.209813892 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.195453916 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.188712746 seconds)
  done (took 15.730903471 seconds)
done (took 25.669502536 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276436297 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.388253017 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.452065764 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.205306698 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.193243605 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.190115936 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.208543076 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.235598943 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.193976492 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.191402554 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.204032242 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.464558747 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.217265997 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.573592612 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.190678878 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.192814206 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.204048168 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.436893728 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.193891946 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.253177145 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.174186465 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.19502549 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.213550827 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.215174245 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205750351 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.19200177 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.209800375 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.187514427 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.411450431 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.193468855 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.236143802 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.18892476 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.211930143 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.20314847 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299710926 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.220839505 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.37898544 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.203746615 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.180578123 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.200935151 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.396702499 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62162733 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.196021803 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.20433307 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.203618577 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.192810267 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.184434263 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.02134 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.199299826 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.200166639 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.235346339 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.573960369 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.200771099 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.193188143 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.189862486 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.439255169 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.198385765 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.245771915 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.237313047 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.194040986 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.190959929 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.207812244 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.244216006 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.209911844 seconds)
  done (took 143.084170308 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.198685297 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.194831043 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.195260561 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216924163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.197966126 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.195648136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.194213687 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.196411241 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.195938324 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.223100647 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.196884478 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192657794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.198539104 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165179073 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197569765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.2166603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.198050932 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.197368023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.215536891 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.196441369 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.207221487 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198288356 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.209643957 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.193904264 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.202325974 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.278083689 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256867726 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.208575193 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.196807049 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198154266 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.193596779 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.208151035 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.835913461 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049234489 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.210577531 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229354878 seconds)
  done (took 79.977891362 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200498999 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200596593 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203287326 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232740011 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19955102 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.796413324 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800205604 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.928267495 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.644671289 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195213366 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.630037389 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509630619 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198550565 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296895927 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2069026 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197290562 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218857646 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226940096 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200382976 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204630508 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804785348 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213299499 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.434634067 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381581224 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211092889 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237039416 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599893041 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196023736 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23532465 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541175139 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24775126 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197105978 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.612761733 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.465283654 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315024257 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197944108 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233360589 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200630388 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491504758 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199822471 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203669184 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201266732 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203928222 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.914196992 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200047929 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799927035 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19952275 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.201124441 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201183863 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20370904 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.56724299 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.964218702 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217114479 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.201780614 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.2034194 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203480443 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20193092 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235834375 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.430135441 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320622986 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202057642 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205013554 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239484788 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201453102 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.417014068 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200835603 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.991755521 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273143391 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412191081 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801242122 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204332103 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300584123 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317423952 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197624252 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202642855 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199057849 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201197058 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315431618 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198696861 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.203496781 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.629236715 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375705527 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217279343 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.635583805 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307021815 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199114911 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622715344 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202862977 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204017412 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959341014 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295899511 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199453733 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.202106257 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204689653 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.628463138 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799900123 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468884068 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20417846 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.955107108 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19967423 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.637345244 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774097597 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.923107333 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204182259 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207707653 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318139803 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376941534 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218476033 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207081201 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.639362056 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206812488 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262822375 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203291384 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604965102 seconds)
  done (took 367.886571244 seconds)
done (took 592.059863572 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.929827683 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.868032 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.003748124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.902946002 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.862352214 seconds)
  done (took 10.690892002 seconds)
done (took 11.811190062 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406997416 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404265097 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26993475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405252462 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238628051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428616064 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389737791 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227862263 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311774573 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290213099 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314761957 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26205173 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245588794 seconds)
  done (took 18.319773391 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472776069 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.202300299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287545902 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459055207 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242141033 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477636995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502062241 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.201871638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342178824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218155837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21770795 seconds)
  done (took 17.752195424 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474324899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.202940249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268636556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457169186 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243182142 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.476337464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49273219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.20447533 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347894067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21989486 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216529242 seconds)
  done (took 17.729734365 seconds)
done (took 54.924434915 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245617766 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.374944928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233334817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218002988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212208165 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213555699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219746575 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212426109 seconds)
  done (took 11.056166636 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214124198 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20965578 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214724433 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213070248 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212349261 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213223407 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214680852 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209166546 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211595697 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208966997 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210722934 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207216193 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20932707 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209351683 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21155763 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207311037 seconds)
  done (took 20.503851539 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211991657 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206383625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208547792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209592177 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209001468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208106779 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208728051 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20799124 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207454257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208096838 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208446444 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207612262 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208600915 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209830392 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208660825 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209592106 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208943014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208032482 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213108427 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207647427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207868008 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208008397 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210161202 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.206595165 seconds)
  done (took 30.136886272 seconds)
done (took 62.820040802 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.20407731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.236084457 seconds)
  done (took 5.565371119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.272111515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.272804836 seconds)
  done (took 3.671521396 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212714476 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210629412 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211997438 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210297845 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211220929 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211528344 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213407988 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21150469 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210793816 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210886315 seconds)
  done (took 13.240243214 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211710554 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210149256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209052918 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209704966 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211557263 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209451374 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211169646 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210843592 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210797122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208405089 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210049187 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207710677 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210571117 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208228435 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212017263 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210950735 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208341206 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209415189 seconds)
  done (took 22.907064181 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.226489254 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231609573 seconds)
  done (took 3.583195655 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.349499334 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250786595 seconds)
    (3/7) benchmarking "month"...
    done (took 1.324756054 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31407533 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.248486744 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22871206 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.250311972 seconds)
  done (took 10.090990051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212136265 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.420541412 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.53440968 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771431547 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21165541 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214665588 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088025011 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216702031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217479772 seconds)
  done (took 14.013692328 seconds)
done (took 74.194359662 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.203608464 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.251841679 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.229766794 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.219906193 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.547162778 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.225530267 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.207553735 seconds)
done (took 16.009969425 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.195827683 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.190682999 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.195593986 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.204922536 seconds)
  done (took 9.914120762 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.205306652 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554935032 seconds)
  done (took 4.885444766 seconds)
done (took 15.926164917 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211386255 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212930129 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209319402 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.208571386 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211528293 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209175912 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210627184 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212369974 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210684505 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.211407436 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.211540689 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211939295 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209676277 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210354263 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212352692 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211019318 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208525925 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211305203 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208645468 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210803832 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208747741 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211448548 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209416751 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209029763 seconds)
  done (took 30.179292645 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212736673 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210031173 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214786469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212427569 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21096635 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213180582 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.214308865 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208263056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.212351592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211426641 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209545993 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210630483 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212404095 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209695117 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211482582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209001798 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212597236 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209475412 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213457116 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211804434 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21455994 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210124953 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209411885 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212722582 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211737511 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210216168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213102711 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20920719 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213731309 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212901342 seconds)
  done (took 37.474320857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219374059 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222992166 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215256504 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214201856 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2137675 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214490182 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215551498 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215243329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21339539 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215369388 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214117883 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214539164 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214700057 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216134003 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214297362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214378256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216318068 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.21615273 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216013235 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217400949 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216364458 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215379022 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215140113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21449679 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215609703 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215685111 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215860394 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215122028 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213996821 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216377693 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216096476 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215820087 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217581816 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215979011 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215051441 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217903068 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22015827 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224704335 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216994122 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217713258 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216128247 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216734602 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215653668 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217168493 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216666543 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.21625019 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216286512 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217323546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216944547 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217562823 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215779437 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216714839 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215819772 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21758054 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216475868 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21666311 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216814032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216517432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216905393 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217066309 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219181373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216622118 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218347024 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217625753 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218262398 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216290949 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218226238 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217649273 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219202379 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218549452 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217883966 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218745871 seconds)
  done (took 88.724179985 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217856945 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21534089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218382091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217163706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217040586 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220480462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21640843 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218895346 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216830676 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21959495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218673999 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216233675 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216787095 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21943875 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217578483 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214870391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21929647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214796698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219177027 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217987732 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220283437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217387131 seconds)
  done (took 27.922214365 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22123904 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219775707 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217400601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221834643 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218812175 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218829069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218926057 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220941319 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2207472 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218384949 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218330965 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220060177 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.715386407 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216267746 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216812052 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217182195 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219421514 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2194396 seconds)
  done (took 23.573771168 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218443712 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217428562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.2192524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217739046 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21719428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221387652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217965193 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220919733 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220769865 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218545577 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.219581817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221153766 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220611853 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218483864 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219796736 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218363062 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221611519 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217310838 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221210591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2181643 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220356834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220026049 seconds)
  done (took 27.959735918 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221270558 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221565825 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217157907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217468097 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218167155 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220494161 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221927071 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217601101 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222458379 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221381752 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21984288 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220580064 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217855913 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218777318 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217509035 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219620729 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220438737 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217335991 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220750331 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218172752 seconds)
  done (took 25.526272605 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224306003 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224056811 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223831964 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225140976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221018603 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222902328 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222871437 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224698626 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224819616 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224601566 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225894708 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224909155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224329095 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224669489 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224874494 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226354382 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223655999 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225745598 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226315844 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225187756 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226382142 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224101341 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225661585 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22340638 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225585777 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223433337 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225445693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225940569 seconds)
  done (took 35.425409012 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223299628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222056229 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22086105 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220728907 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221758212 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221350876 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22099029 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220131159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224368616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221914558 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223860547 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221972308 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223927 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220656241 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224649653 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2230777 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224584746 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221742348 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220635932 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22269799 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225651812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223432832 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.224907547 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223171874 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22230169 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225329053 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223604527 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224179608 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226518519 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223176953 seconds)
  done (took 37.825291108 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.269789583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.270631649 seconds)
  done (took 3.678725707 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223508103 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225897526 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226600375 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22299273 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224609728 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228415267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226752057 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223147844 seconds)
  done (took 10.941633378 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226656233 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225538925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226681588 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227277616 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227985045 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227437334 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234455114 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247252345 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226897229 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229035633 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234490315 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234167991 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228895007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226435866 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227447861 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228348905 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229049859 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.228603798 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229499395 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.229357893 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229606788 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23056345 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232702337 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226913284 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231731013 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239909254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.232942829 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230240245 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227184136 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231897732 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228764133 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226302284 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229293602 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229722574 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229109825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22954702 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2362163 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251018549 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235487525 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23162404 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230937278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225777971 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230772061 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23161554 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231403747 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232146396 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229732326 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225309475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229621795 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234488819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236741673 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229833428 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227774972 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232166112 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.230946537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237421136 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.252980321 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232767828 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239947972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240125675 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244476536 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.255689228 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232225044 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231087292 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241769464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258867837 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237591138 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.248557587 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22815703 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230445494 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.236295462 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244712273 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25817382 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23099505 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232209226 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23152728 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230578006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230324987 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237937706 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.254772008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232566638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231669703 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243491441 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256828904 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23058243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233136726 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.233753245 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234186233 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234786043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243799545 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.252585198 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234147329 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233241739 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233339378 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23287984 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234301307 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.232922664 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232656588 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232035396 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.234668869 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233332268 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238682488 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24371418 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233211462 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233689231 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240944609 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.234607421 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232313062 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237697808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.237065606 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234686915 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236833757 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240843352 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232516246 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238920086 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243102787 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235810996 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236841052 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237930964 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234447157 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246076543 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263701532 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234461913 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234548123 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241077719 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249184738 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236638534 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238174741 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237807132 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23204914 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.23175458 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23770979 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235510571 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237618197 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236426376 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237374302 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234948202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235285748 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235017274 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237938806 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238442497 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236666129 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.239375282 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239412984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.239423152 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239926774 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242205908 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.236941309 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235763783 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237996172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.233999994 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236354572 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23714559 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.237307328 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237120136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238998345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237404256 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.238289282 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239177116 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.237743175 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238816006 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238080995 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241901457 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238453467 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241873543 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23868792 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234925401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237269829 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239925834 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237897176 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23838052 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237136062 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24274676 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.248120804 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24076993 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238100632 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240563369 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239702296 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240834667 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240736101 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242538277 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248917228 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.241338742 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245530378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24177166 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239922022 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.241014852 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240524141 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240102555 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240945809 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243210284 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.249638626 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252200973 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265941976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241837845 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.243418472 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240372774 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.244791416 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244126269 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241179503 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.240650401 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242050207 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241148041 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242194771 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242009851 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242909765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240859437 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242170093 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241020282 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241886999 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242101381 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241093317 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242742113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238794924 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242313658 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241352676 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242693815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239875738 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239649758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239436374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242248486 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241382116 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249062317 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.240310724 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242556282 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244100625 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242352028 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240145734 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240460338 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244862936 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24450283 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249947315 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264125009 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244228087 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250387559 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261373129 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244674722 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245598525 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243824443 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24168785 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24617681 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252645111 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243542948 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244117214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243116092 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243809108 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244925899 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250867526 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242483637 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243961182 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.243716419 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245901718 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242494456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.24605656 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.247000196 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.24499439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247571778 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247128659 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245987018 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246072649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247226818 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246773893 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24491628 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24909818 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254820941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251994864 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.247705108 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247168711 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246519093 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249919441 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24556072 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.247857898 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247201111 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257546653 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271327157 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253790508 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265106441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246303 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252652345 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266979557 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.251080794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246834346 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246911232 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247879658 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247425896 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244967724 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247960388 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24712484 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247777991 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248299766 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252373865 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.246694655 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247224885 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248095321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247378342 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245565357 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247086643 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248615055 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250589549 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249093711 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248238613 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247562433 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255455517 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269206997 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.250643517 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249108952 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247607464 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248045986 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249477955 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.249254943 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.25263456 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258394951 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252502441 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258686898 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251065008 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261646388 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252377677 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253582821 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257674003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.248436142 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248415826 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249887844 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250812642 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255862056 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.271150576 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.252551178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.255511352 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252218298 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251085721 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.251820437 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.251425136 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250365658 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251300294 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258357571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275309678 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255979074 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252418231 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248703446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25136298 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250713603 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250712682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253333068 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.252508445 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250053907 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252590953 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250380814 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.252099464 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253188587 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.252205863 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249200981 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.253356855 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258406261 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.274318883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258530976 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25223359 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258293034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254915821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257973564 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.273720757 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252604745 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25298937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252233217 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.254342772 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.252755327 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25245941 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.254432188 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25448281 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257862724 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.25323144 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.253205785 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252953722 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254171809 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255315569 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265698516 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28292226 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256562686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258538925 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249554343 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.254985635 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259353946 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252626699 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252338343 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257708933 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268173169 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263864843 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.255845481 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256545288 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256064626 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256993984 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256442142 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253581728 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.255031167 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257781455 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257231602 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.255926251 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258142126 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.255433628 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255698082 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256253632 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256467818 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264811573 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259512062 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255793076 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255885548 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25697012 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256891376 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256315171 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256099623 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258188471 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254207868 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256118563 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265236037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.264231565 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258862478 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256703429 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256758975 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256153382 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256673747 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257305345 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258893022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257405492 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259211201 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.25665086 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.257649902 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256243444 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256325852 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255887341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257924149 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258769739 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266939272 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259809677 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254616978 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25693282 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257300707 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258293335 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258304103 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.265378822 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261848563 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268877188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.267838573 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.262077885 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.25834752 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261264697 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.267370846 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.258020581 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258215687 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258736127 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260328747 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258775806 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.263837777 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259424476 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264621158 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259789464 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25925551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268490241 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283330703 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260142959 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260098859 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265233362 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259064525 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258690083 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259040706 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259636518 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264567501 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280210693 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261313733 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26156059 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260312989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.262360114 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266994795 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259951843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261227624 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.257181119 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258816078 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260667719 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259048515 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.258428946 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259361359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.259233453 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263645285 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.267759791 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258267434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261142516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26401647 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261049705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261422475 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260897945 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.258676438 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.259257806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262314862 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261332439 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260729143 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26364602 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261121114 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.262243687 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.262657213 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261870286 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26518883 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.275021351 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271975211 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.259486193 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.26075841 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.262639677 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264881169 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262175932 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.263598859 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262070627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261286001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26226638 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262573585 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261826526 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266493604 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278433268 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28601521 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263326481 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.265101702 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266263744 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264973649 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260416109 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.264288196 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.2640953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266905946 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274341284 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263168517 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269024871 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283449716 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266296496 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267373983 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.266910619 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.272377854 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26569553 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263917793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261629854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269340167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28193021 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26639044 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274622014 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296517778 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283920673 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264557972 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266296545 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264010307 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.26462297 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.265657017 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265882044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264734432 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26511744 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265163093 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265601432 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273018444 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265949345 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266616579 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265025628 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267476987 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267293303 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.26409676 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26648817 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.266218302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264294664 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266914077 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.2666875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.266436614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276641558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292533235 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.265820875 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267335928 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265102587 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269733329 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269583685 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279166138 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.27557537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267295836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268286566 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268901459 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268117238 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267345634 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269679233 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267170903 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266765872 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.265563195 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28106022 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294327156 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272166179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270857675 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268308349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268558383 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269205642 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270200445 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269098569 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.269862451 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269523582 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275102286 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268858889 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268741547 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.271424182 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.27817587 seconds)
  done (took 746.622712447 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267159927 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266661519 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26721833 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265874527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266984417 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266845266 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265493807 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266731169 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26552019 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265893725 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.265745563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266983672 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265857647 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269275072 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266603593 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266501643 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267075113 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267702132 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267338753 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265517151 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267051232 seconds)
  done (took 27.77786203 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272330062 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267168867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26788589 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269659213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268067173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269581222 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266924459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269850605 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268682651 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267623062 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26947134 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270650807 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267444375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268028798 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267793041 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272669816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269616919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268157281 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27032123 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268559941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272241159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266814665 seconds)
  done (took 29.098418287 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271758262 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270773284 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272457399 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.266982087 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272579348 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270377738 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27315196 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.272158795 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.272871649 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.272236795 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.271871842 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.27405885 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.279924332 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.27843676 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.275358765 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.271889707 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272272314 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.271753444 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.27128614 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.270686596 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.278178175 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.288685323 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.268444712 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.270775168 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272912202 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.270269202 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.273591625 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273625945 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.273724295 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279549236 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.273466963 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270963559 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274838673 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.273615288 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.273559646 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.276068919 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273830103 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.26900645 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.273053148 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28297019 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.297377256 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273161002 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278224108 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.293309775 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.273156602 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279058623 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285231173 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271516952 seconds)
  done (took 62.376057439 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.917097082 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.940474764 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.911875649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.966591277 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.894684095 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.910766762 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.940225683 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.935030374 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.902814596 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.883974577 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.907489376 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.878395639 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899185132 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.902807806 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.898298885 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.942882278 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.877327644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.978107947 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.912392261 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.967918073 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.933727736 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.902843923 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.882657614 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.902713751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884048271 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881903067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.883607623 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.891085452 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.95050329 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.891785515 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.916085311 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882726222 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.907947503 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.899182059 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.911630639 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.925135398 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.927740582 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.920004202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891175179 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.905705719 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.925755069 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.900369155 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.93854339 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.923098451 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.934312491 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.907270389 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881713321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.923213345 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.914536129 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.897004588 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.903801232 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.884720416 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.94286605 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.88577207 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.959113086 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.962583057 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.922890818 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.923091243 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.885108718 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.942499359 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.902966475 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.922164502 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.914327678 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.935685084 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.896976238 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.887299337 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.883193559 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.975860268 seconds)
  done (took 131.321445314 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28165722 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283052813 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28184881 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284336031 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282212473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282425058 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281317011 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28304815 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280787152 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281771661 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281413597 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282494114 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.281801378 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281909344 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282332919 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28089273 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282524093 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280687586 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281197895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281663832 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283823535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282897232 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282277142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281943489 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282738052 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279949161 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281388191 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284456151 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283860183 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282994743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283212016 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285172515 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284360745 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282757568 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.285470195 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283291372 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285200153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283895708 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283599368 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.283203126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283509541 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283794399 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28281036 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.283614262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283086393 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282839645 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285199412 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.283653616 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283185888 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284139626 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.284541634 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284543703 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282888831 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284319036 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285252165 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283318692 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283587914 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283355581 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284503276 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285352556 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284289571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284090266 seconds)
  done (took 80.742617092 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283528806 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283567467 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280280773 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280053061 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282857496 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281674382 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283218745 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283974549 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284824803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283905796 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285535744 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281485586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283992537 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285185756 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282485053 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282943526 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283042379 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283595151 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283367427 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281977671 seconds)
  done (took 26.852388738 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281627931 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284021388 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282159561 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281250233 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285284214 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282183051 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283449851 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285699177 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283295971 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286873671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285477667 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286952978 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283777246 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28337517 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286999352 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283778293 seconds)
  done (took 21.737070593 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.283368626 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285553294 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285909209 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289904745 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.283935034 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28182564 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286187052 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282871786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.282225624 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287171712 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28623279 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287754001 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.28670966 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286840663 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286987742 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288874269 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285007672 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285006441 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.287944153 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28841007 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286306803 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28533694 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287413636 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285106911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.286642735 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287925171 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285419563 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283949668 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.28553991 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289846775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286291858 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.285519735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285440988 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285671542 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289128334 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.287333072 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.28898815 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.288568128 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.289013448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.289587598 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289830343 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285935764 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.289337389 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.291295767 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287216926 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289625232 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285681994 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286795848 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.287161356 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.287741921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288189551 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289883387 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290358366 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.291070598 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289791739 seconds)
  done (took 71.982904776 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292252713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292046136 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288479219 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.290120577 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290060001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288329477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290421109 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289560154 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288029648 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289450577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289367111 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291013901 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287647565 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292236985 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289088951 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291483902 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289662304 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290113143 seconds)
  done (took 24.415838568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289702832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288991151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291747183 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288973262 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288524372 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290948376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29027144 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291498156 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291853838 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290221477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288857566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291037748 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292659655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.293488127 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29079894 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290808648 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291768421 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290796557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290472236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290959103 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292169927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29267362 seconds)
  done (took 29.596956279 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.291774199 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.29084159 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.290671242 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30923605 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.316307572 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.294086058 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.29331356 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.29193493 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.314709634 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.351362837 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.347392129 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.315533016 seconds)
  done (took 16.905167468 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292113251 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294285565 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292038044 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295317564 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293250194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29144908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292949963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292309577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293745498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292693501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290741148 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294835899 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293382951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291911586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294544321 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293191364 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291451992 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29052296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292937116 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294901453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292991317 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293886131 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293982839 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294362439 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290919987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293823312 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296862845 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294179958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292744978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295450991 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295666563 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293024969 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295671198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294318503 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295734659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294994447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294130652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295715519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297560544 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295088059 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296244776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29620047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295162813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294186727 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299396905 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293041865 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291841249 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293698282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294320651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299340432 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29867306 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295572068 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298334652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297746321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297833178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299744051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295088151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296739882 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297836615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294781249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295280238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298401805 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294559271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296492792 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29847857 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294440067 seconds)
  done (took 86.653705668 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294367746 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294679895 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295452607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295874317 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295730366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29515614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296021839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295712493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293764152 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297114637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297955838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295263714 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296389767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296915006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297031711 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297122499 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297829409 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296770356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298085941 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299033791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297121654 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296876706 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296294514 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295616205 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29576462 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298434869 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295674642 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294917328 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296151319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296827405 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296812332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29671684 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296570647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295822066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299699965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297555565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29665783 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297089801 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297607385 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298669632 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297350346 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300298503 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29753871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296580681 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297642191 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299714908 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299600831 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298138421 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297535922 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298163449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296779449 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299233578 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299357323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296616594 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297835324 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2985932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297991758 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29898851 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300485347 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301041877 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300086991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298921559 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30315177 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298380084 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29915187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302247431 seconds)
  done (took 86.83939569 seconds)
done (took 1793.275095675 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466769487 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418671474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299508137 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.30973482 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298985566 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.324631758 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.307922944 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298444097 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301554016 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301840464 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302701731 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.486997486 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.295344826 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297257517 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.299939655 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396266344 seconds)
  done (took 26.613454888 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331725614 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305383925 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429070259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.323633118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33318572 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.502643639 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.362492597 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308036654 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491530083 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351964433 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.306312233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334429527 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305330085 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.304279628 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.327376027 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503793253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.577151905 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.305973471 seconds)
  done (took 28.912727967 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793139017 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.301583111 seconds)
  done (took 5.30074282 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326948734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.306704073 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308558942 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302425898 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.304215111 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.296376066 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307923603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.303335762 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.309424479 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43850856 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31063128 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.3201718 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330402953 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311798542 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304243116 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348208053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.475477449 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305592323 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304722681 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314108053 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309406539 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401743235 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.353597367 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.308172908 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.442514164 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.316307299 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307404232 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314739869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437888044 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305645713 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308699895 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309047572 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310986307 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.260392117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.772318641 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.302279724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.332998986 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316958821 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307460929 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.447678896 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312304947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317197829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.301889133 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.747433629 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.460552954 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435826147 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.319284926 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325300797 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311579464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381877823 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308921544 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314023348 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35639135 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.129290939 seconds)
  done (took 83.942282445 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.303960678 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.302136749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484357125 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326962561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301653042 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303707659 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.304093946 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619127441 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.319695693 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302287275 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606978639 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.905781835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319848145 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.34537435 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.224728759 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.357349616 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303016818 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.318195235 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.301411798 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.302820044 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872157217 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305082608 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.323482347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.401380604 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343446227 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847243021 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.30023059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314178823 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.302653631 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.301167372 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852582897 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324700132 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.361313773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.301685838 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.590576974 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705373137 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664186723 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.299936756 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347069725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305451142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.327365144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831671665 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69084112 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.304003416 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.303712758 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.85690334 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304908614 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.317643461 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.312120015 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559837563 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.305283644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.305347774 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322894686 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307040946 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.303466193 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.397010187 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399593636 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864486949 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306231022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.308168864 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351660216 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.309335071 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306221739 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309768637 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.326938734 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.707058257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507195011 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.307712842 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.708023352 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860400211 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.324038036 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913345091 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.323868878 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310446341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.492198341 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307072101 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.306877186 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.875001415 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.327299014 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301262663 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69024695 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307615873 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.616366739 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343884969 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308848819 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887999087 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.308697978 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.3962276 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.313846206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305990635 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309465448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309603194 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.620127373 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.35107534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.307016748 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.308511077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.351837392 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313670199 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.311410342 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.310193742 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919026595 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.333697852 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.308922351 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311093164 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32455426 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.31096254 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.310554545 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311327786 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57768332 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311122651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.318087309 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309519675 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.30612723 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.312235636 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402032633 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.312149536 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.662171916 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.314258266 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305994487 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.330746149 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319182873 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360832332 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307021786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.313562884 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.20791792 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.577517055 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333236733 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.312621427 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311914454 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31146667 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.336743742 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310430105 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.342496155 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.313489995 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102546457 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32859273 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.315543369 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.30952221 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318708133 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315561546 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310435597 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312051745 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612104842 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602038706 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.52470441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.31245489 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312453657 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.108866003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.335562689 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495390089 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.333321763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308978272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563768176 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.534886331 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.309028612 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.310637248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.311438174 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576100965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315448859 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6226796 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892295325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328962682 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323472064 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.109196795 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.051329411 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.315055118 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.318120412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612949459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.331955854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.312096132 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.312030631 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.314246885 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330576674 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.330220319 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.313318885 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.312647355 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.313558223 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.632167683 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509671381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.331203059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320660426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.864840134 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323532398 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324032615 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324995581 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312861809 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.313744591 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384268396 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.31215787 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.360304727 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.316502111 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.317288022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881092637 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314933464 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.316195684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50802004 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030421711 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.331825491 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.315650494 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332365428 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.206076305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886441723 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344199234 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.664295277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.319402578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356321806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316159987 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39678242 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88759557 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318985817 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.336218305 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.004526285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331384916 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.732521942 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.312602451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.316234944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956651111 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.333023298 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.318871551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.314207383 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342938372 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.6138236 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.319538027 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337204779 seconds)
  done (took 494.734314268 seconds)
done (took 640.707207908 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317869632 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.314821361 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30698742 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319148504 seconds)
  done (took 10.482983374 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.330513362 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325602177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.326047839 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325364959 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328799356 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327657679 seconds)
  done (took 9.194318947 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319742742 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321124027 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.320751105 seconds)
  done (took 8.189465835 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.54385038 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346695766 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.670623501 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342171744 seconds)
  done (took 9.134547195 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330736126 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329830279 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.329396064 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330871119 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33061629 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330529802 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329106142 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330618133 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330659681 seconds)
  done (took 13.199584171 seconds)
done (took 51.423755852 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.400286359 seconds)
    (2/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.400202812 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.207606608 seconds)
    (4/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.474595471 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.380569764 seconds)
    (6/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.339901026 seconds)
    (7/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.335451805 seconds)
    (8/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.370162731 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.334873335 seconds)
    (10/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.32355173 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.3361244 seconds)
    (12/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.336859793 seconds)
    (13/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329757335 seconds)
    (14/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.970575208 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.54050185 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.364277768 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.403646243 seconds)
    (18/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.352233191 seconds)
    (19/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.091140967 seconds)
    (20/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.470102267 seconds)
    (21/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.37494937 seconds)
    (22/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042062862 seconds)
    (23/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.031124887 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.405246621 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.526523092 seconds)
    (26/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.322291521 seconds)
    (27/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.311430808 seconds)
    (28/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.345192789 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 1.789925626 seconds)
    (30/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.439454116 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.343673278 seconds)
    (32/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.339733546 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.334953591 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.337261653 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.502825506 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.535481512 seconds)
    (37/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.33594382 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.542967958 seconds)
    (39/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.485737338 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.348555805 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.347073774 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.355970243 seconds)
    (43/286) benchmarking ("sort", Float64, false)...
    done (took 1.564439362 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.342201889 seconds)
    (45/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.403996345 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.412373141 seconds)
    (47/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.375867044 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.346220385 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.309741597 seconds)
    (50/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.391692222 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.352423029 seconds)
    (52/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989427607 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.341812238 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.340323962 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334599476 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.310710214 seconds)
    (57/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.335701921 seconds)
    (58/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340675918 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337862805 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.500049905 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.659728287 seconds)
    (62/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.342940693 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.465165825 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.484898403 seconds)
    (65/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.337974941 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.710002359 seconds)
    (67/286) benchmarking ("sort", Int8, false)...
    done (took 1.457225188 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.683297683 seconds)
    (69/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.452050071 seconds)
    (70/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087959508 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.56685638 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.398181188 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.326120047 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.415100152 seconds)
    (75/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.164167623 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.383675474 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.318974888 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 1.525320682 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.539261896 seconds)
    (80/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.337393622 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.335751315 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.426725308 seconds)
    (83/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000606091 seconds)
    (84/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.041563198 seconds)
    (85/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.37328438 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.3992571 seconds)
    (87/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.084620829 seconds)
    (88/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.435434247 seconds)
    (89/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.384222055 seconds)
    (90/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.340353025 seconds)
    (91/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.380439849 seconds)
    (92/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.329868563 seconds)
    (93/286) benchmarking ("sort", BigInt, true)...
    done (took 2.346387046 seconds)
    (94/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.315594237 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.573706905 seconds)
    (96/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.229998016 seconds)
    (97/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.38946197 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.443674635 seconds)
    (99/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.459414586 seconds)
    (100/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.360262273 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.545692011 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.353835262 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 1.672323006 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.440544747 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.352178703 seconds)
    (106/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.348115437 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.437703862 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.435066468 seconds)
    (109/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.348522349 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.342731769 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.462457868 seconds)
    (112/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.428233308 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.330224533 seconds)
    (114/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.360213778 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.507523126 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.363061236 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.339028416 seconds)
    (118/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338489161 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.358111419 seconds)
    (120/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.350412857 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.357469235 seconds)
    (122/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.547170041 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.335548444 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.341995507 seconds)
    (125/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.321329274 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.425966597 seconds)
    (127/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.344319501 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.36112737 seconds)
    (129/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.329728147 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.398744208 seconds)
    (131/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.460336173 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.457899706 seconds)
    (133/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.979174081 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.334722835 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.343578772 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.329546154 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.382660984 seconds)
    (138/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.344838937 seconds)
    (139/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.333456635 seconds)
    (140/286) benchmarking ("sort", BigInt, false)...
    done (took 2.3325495 seconds)
    (141/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.414914207 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.357256187 seconds)
    (143/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.394165675 seconds)
    (144/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.365654817 seconds)
    (145/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.482750401 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.443800233 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.346273905 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.346034854 seconds)
    (149/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.409268948 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991311763 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.340294973 seconds)
    (152/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088039382 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362902222 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.341600123 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.347948594 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.329298363 seconds)
    (157/286) benchmarking ("sort", Float64, true)...
    done (took 2.021032746 seconds)
    (158/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.406998307 seconds)
    (159/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.365070752 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.315984597 seconds)
    (161/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.487338971 seconds)
    (162/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.479450301 seconds)
    (163/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319045773 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.451546926 seconds)
    (165/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.405562246 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364094676 seconds)
    (167/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.382092904 seconds)
    (168/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.356367578 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.570903621 seconds)
    (170/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.360708585 seconds)
    (171/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.514307006 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.368908313 seconds)
    (173/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.411026929 seconds)
    (174/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.413029406 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356370197 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.513871907 seconds)
    (177/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.357765143 seconds)
    (178/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.411373177 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349954792 seconds)
    (180/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.412295207 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.3384759 seconds)
    (182/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.349236887 seconds)
    (183/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.236907398 seconds)
    (184/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.006750411 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.344793913 seconds)
    (186/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34830334 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.343991157 seconds)
    (188/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.34605549 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.46691087 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.467237597 seconds)
    (191/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.349379026 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.335655985 seconds)
    (193/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.485219167 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.694877063 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.097445951 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.463217782 seconds)
    (197/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.523082968 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 1.55777977 seconds)
    (199/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.36208287 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.343846272 seconds)
    (201/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.429867792 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.385620871 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.391397676 seconds)
    (204/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.468180704 seconds)
    (205/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.372386057 seconds)
    (206/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.422685327 seconds)
    (207/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10060413 seconds)
    (208/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.501835541 seconds)
    (209/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.50222689 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.433177534 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.360741708 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.410244492 seconds)
    (213/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.052352974 seconds)
    (214/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.387669272 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.430569593 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.361760909 seconds)
    (217/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.350563442 seconds)
    (218/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.092217766 seconds)
    (219/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.364742981 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.103371713 seconds)
    (221/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.444282455 seconds)
    (222/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.35121667 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.347866583 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.352040907 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.409030984 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.336585881 seconds)
    (227/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.394856915 seconds)
    (228/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.358245277 seconds)
    (229/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.354245569 seconds)
    (230/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.563462268 seconds)
    (231/286) benchmarking ("sort", Float32, false)...
    done (took 1.497646514 seconds)
    (232/286) benchmarking ("sort", Float32, true)...
    done (took 1.958710825 seconds)
    (233/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.409593725 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.359586204 seconds)
    (235/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.40340458 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.42963089 seconds)
    (237/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.51043479 seconds)
    (238/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.353504838 seconds)
    (239/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.44257828 seconds)
    (240/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.50687473 seconds)
    (241/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.438313704 seconds)
    (242/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.379456264 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.378301957 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.425541576 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.447515579 seconds)
    (246/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.343961036 seconds)
    (247/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.182660526 seconds)
    (248/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.444806204 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.389468654 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.470662422 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353594578 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.336753739 seconds)
    (253/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.443010638 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.377879744 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.423024853 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.367441974 seconds)
    (257/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.544039661 seconds)
    (258/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.362762076 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.450867162 seconds)
    (260/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.352289762 seconds)
    (261/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.356821032 seconds)
    (262/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353171804 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.3592525 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.491247577 seconds)
    (265/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.231350786 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.380532429 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.362952052 seconds)
    (268/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.520961585 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.542014472 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.420034447 seconds)
    (271/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.491914228 seconds)
    (272/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370652809 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.60920078 seconds)
    (274/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.406515431 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.441904329 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.365028253 seconds)
    (277/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.334753583 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.371621245 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.404927147 seconds)
    (280/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.998570903 seconds)
    (281/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.439982813 seconds)
    (282/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.523001133 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.350838967 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.347202913 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.495047306 seconds)
    (286/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.003389902 seconds)
  done (took 472.040812429 seconds)
done (took 473.269191156 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383741976 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393266809 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.346505418 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.380816472 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.459834479 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.525535501 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.358539202 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.386731983 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395928789 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399427917 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.355112495 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.526183639 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35059039 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350452204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351958237 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3913001 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.338228831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353149406 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368810829 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.387604536 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.366310664 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357142341 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399880224 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.524716779 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.355523192 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353815647 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35372219 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.369679773 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.463644615 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.353154433 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355368206 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361260508 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.341431618 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.356370594 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345572903 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371757105 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362555744 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.359197035 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.384983851 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462481143 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.339862744 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.360281803 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.35482405 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.35211311 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351385572 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.391313009 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351912127 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.409650963 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394088282 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395301305 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.338937868 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368329178 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362402088 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352852335 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361713522 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.351405049 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.410682697 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397210156 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.375434659 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400580901 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.356343114 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356394584 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.391669085 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.366402572 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.359760966 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.351672019 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348749366 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.390427954 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.344541447 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.35936159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3437194 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364360467 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.353543575 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368085724 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385679897 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.342412845 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350065624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352466993 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.360787061 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.352048318 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.402548968 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396649913 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.404115047 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354729064 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396491849 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530465721 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365226803 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353878204 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.392110402 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.373221665 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364291245 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.364260576 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.389418996 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357146975 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.402665663 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.411211558 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363825046 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36449409 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.404199562 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366538771 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.348565863 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402984903 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.353405215 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352344974 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355155263 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.47810817 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.346630327 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.355328321 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.390313708 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.405192808 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.416155553 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359534202 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.371022573 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403166633 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.367376693 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.417155853 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357255784 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361588007 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350636502 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.479348305 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360980135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.367807893 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403889869 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.417325423 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358018625 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.348595811 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35822226 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400831389 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.480989935 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36874615 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.46899285 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.355153435 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362312814 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.392532697 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403674872 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.390286295 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.41797175 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403000924 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.374000204 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.359393384 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371845937 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.370067506 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.359933391 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.418047279 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.355295813 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394510267 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400280284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402164417 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393740498 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.481872181 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361480325 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.363702147 seconds)
done (took 227.166347697 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424592199 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.357296209 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.463932082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.358217713 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461090296 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461476126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.355589642 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354985394 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357492652 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.739711882 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356786494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355308702 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.35714911 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.356940195 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.441031547 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.358767008 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356096738 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.709359819 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.361416264 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430824046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.358814668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.357961013 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.360195182 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749756087 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.356256891 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.353137765 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429625247 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360273442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.711770239 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.353824628 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.356517665 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.765222903 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.449739797 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376865807 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370639674 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368339549 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463334993 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381907696 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441130394 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.44424567 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468416912 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400843524 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.355537555 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.36009939 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362095982 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364966213 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359558539 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388895725 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.359533879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.3593885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.703831032 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371327572 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36916298 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360260224 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.359106768 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383229072 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.361785685 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36500447 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453094578 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365097867 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427081105 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.747747954 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.763957955 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.361002544 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.35857055 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358186626 seconds)
  done (took 106.373509101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.430619852 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437909773 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.484662316 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.379229819 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.414328784 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.488428228 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.379804013 seconds)
  done (took 11.273571936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368157234 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364303894 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412828744 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413880826 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362624335 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.581605827 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362489026 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374767496 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361743415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440176598 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.365389193 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364641345 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370300655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.359499196 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413368513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375445418 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478097207 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36504037 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365921817 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517729953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362571529 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370464809 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.444711746 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375078983 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.364242199 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369254799 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.326998312 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366288353 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361320251 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.362552266 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361526394 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473041967 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365571292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.361996899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363507964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525904032 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364921956 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363694838 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366165837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364472206 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.363710297 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364666201 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364777166 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361544395 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.364758876 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389748988 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.363544855 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.363728801 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.363606331 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367586045 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.44200659 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367568005 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.361746607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363771809 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.444133233 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371557962 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367531628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.3649801 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366883764 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36541515 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520229668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414610474 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36579872 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414813693 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366910284 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368484124 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366543847 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367033594 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459579263 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368514765 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416975695 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366671856 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.593333493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.391607063 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368827739 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.369612257 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369694926 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368305596 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.366210284 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373635631 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365925053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370160202 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375589495 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366513911 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36658262 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.551940108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.52596862 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.366436136 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379941202 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376234187 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366398483 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.44670952 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369692166 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.364938228 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420483124 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482693825 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.456327888 seconds)
  done (took 141.326238265 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372568524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37792616 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.372010234 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393414324 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.369601971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370224379 seconds)
  done (took 9.520035567 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372389112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368490856 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369015037 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372039403 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369515678 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371063778 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373267281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376311594 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372700765 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370743802 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369962697 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.372319153 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.371545064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.370823449 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374373496 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372994263 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368969222 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371293443 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372330752 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.3721379 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371568371 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373256136 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.37426445 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377422169 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374186464 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378100893 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372082802 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371635776 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376903788 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.391262234 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371923418 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373576184 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377857998 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.376008828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374889885 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376140847 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.374888691 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368550787 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374967325 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376673908 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373372908 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.373672219 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373009393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376268748 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37930029 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379783686 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381848501 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373399452 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.373855147 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375466174 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372398001 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374701434 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376149474 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.380643921 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396640535 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.378629081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.374016691 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.37494998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376130179 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.375366872 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374395169 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376610891 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380553702 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370422338 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376649964 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.376148387 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379034621 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375229404 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376625624 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375062302 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.37406831 seconds)
  done (took 101.25295298 seconds)
done (took 371.001498238 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.37946684 seconds)
  done (took 3.648722174 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.486132577 seconds)
  done (took 3.757024117 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.106876996 seconds)
  done (took 25.385449137 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.46063673 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.385086011 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.367111415 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.363304526 seconds)
  done (took 10.847013045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.721042171 seconds)
  done (took 3.992259399 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.368941334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.36608914 seconds)
  done (took 6.00817072 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.735261369 seconds)
  done (took 4.006841556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.868784422 seconds)
  done (took 4.147941136 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.380083468 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.387507589 seconds)
  done (took 6.050273288 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.360860894 seconds)
  done (took 3.632857144 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.262950369 seconds)
  done (took 18.534110717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.374310918 seconds)
  done (took 3.652321713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.393057526 seconds)
  done (took 3.666298195 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.373954595 seconds)
  done (took 6.646386911 seconds)
done (took 105.243849772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.370750961 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.368097473 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.367850709 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.367396685 seconds)
  done (took 10.745900337 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411501672 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410638293 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412699603 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.421093008 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416442967 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411319262 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410105508 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402525985 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420157577 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41435566 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421416513 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414921981 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.42038164 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.403572368 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.41516383 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415394155 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424601162 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412931398 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405007616 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.414234292 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38052885 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423742492 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416430527 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379970424 seconds)
  done (took 35.151941381 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.897354376 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.450885359 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534765644 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433619346 seconds)
  done (took 7.589660963 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.44017867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.448898899 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46258945 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.496967569 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.534541989 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457545987 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407760847 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.40311876 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.386096639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449154296 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.509474588 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441300594 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.548432313 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37968964 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.591731409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379970339 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.377941364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.457674171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.498418083 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.510704492 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381377462 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440225334 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.460152215 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44288637 seconds)
  done (took 36.178905403 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380568161 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39450727 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378931487 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.380801168 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.387330453 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381661896 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380623441 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.380341121 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.379449764 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.943416547 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.399891357 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392369405 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.924889719 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.399622992 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.387360842 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382177046 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.917209831 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.927556125 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.398562317 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.388511393 seconds)
  done (took 31.181344382 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.376789834 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.376660176 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.726528524 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632468201 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.374176426 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.371785633 seconds)
  done (took 14.134970615 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.460388749 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.636773826 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382663237 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786034306 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.856277976 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380658227 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381108879 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.661793734 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.02517131 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991788355 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.447792257 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.459656054 seconds)
  done (took 20.748902677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.379949406 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.376572549 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.376781201 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393756143 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.446705674 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.404153202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391063405 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.375913679 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.446021557 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.466958454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.406546495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.448755851 seconds)
  done (took 22.193687266 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473799905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377507653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378918763 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495405985 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378371931 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22863616 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482736047 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167605102 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400233635 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65241688 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392388624 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477536336 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636567859 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378508947 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380063302 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366739965 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61057013 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919576137 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379495709 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376135023 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414827726 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388862104 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381248626 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620610077 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381198956 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380076716 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642641352 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378331309 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700301182 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396718689 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392455304 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381368647 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654405195 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089192997 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498651191 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617200262 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388329625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376921383 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.386224956 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.384572514 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388651391 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383434189 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393642645 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381764413 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378969288 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384925633 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145786381 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401334138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.381012095 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382666813 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67477382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482214683 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385431183 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382144423 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472292323 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381092034 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386222734 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380474427 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966575119 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391734581 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388239114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.384339897 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382366182 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402833393 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062916431 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.384683775 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386292659 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387023662 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381218863 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37891198 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40012768 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381212734 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401424577 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380870823 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169350144 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37987002 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402092245 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978535071 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379248478 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.383726276 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616431737 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382897947 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382536537 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.382965824 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380750856 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182611039 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393223032 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.367553046 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382129764 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198900354 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639736407 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406297967 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416247639 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609593313 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.366498018 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385193806 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.395059312 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384554925 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402186741 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.144760723 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398484494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383975926 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646509861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.596063623 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386930693 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.374969766 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931032579 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403492662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.402588603 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387750129 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624529432 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.039113598 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401708836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384281897 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401168729 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384643842 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223735384 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385914392 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.509027541 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388319668 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709667932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.268123782 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387625606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454325885 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390529071 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388618566 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395265848 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388025353 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389605038 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.616566478 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407682725 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.39861178 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.389280939 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388383982 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.38706347 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385916618 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.388674492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615033503 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386163878 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678832688 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387984761 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384941373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383911706 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608336873 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.385318066 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.74398645 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654974481 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388313738 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38894141 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400824729 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408534504 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493286074 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412360716 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.386965815 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646844011 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392714636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392702861 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397674463 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390318563 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394264827 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394328772 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389425236 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041325396 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363727275 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393095259 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285177351 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.403692536 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45874364 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395790861 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632212096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397120695 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406595907 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39030949 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395402655 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616258339 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398942036 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.398028201 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464772146 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932663061 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066432001 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403708481 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.388406132 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.388115829 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.386379357 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390447412 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390019613 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390864686 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631433066 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407394275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41227956 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045595684 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390939941 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394648215 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398511511 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402459066 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398115794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390199585 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393898127 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391497454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396704879 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.402281 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536998794 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405313296 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389494827 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906744018 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396610977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390499516 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393665549 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427424296 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40191915 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252433453 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673932468 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419200705 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687340079 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399269006 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407345558 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391318323 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392407757 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40161119 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.412109387 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401168072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402762263 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402705195 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394758943 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970194353 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199836598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984657335 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404248689 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.399751841 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394156523 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202460364 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412083106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394172474 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657693851 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213096677 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410899547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938885151 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.411242816 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252373235 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692687053 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630876037 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409948624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.392769363 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693539514 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608599946 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431789294 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394681002 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396876957 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.377084057 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994897418 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428471814 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474343065 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176957734 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410127931 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396180288 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.399541449 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399098189 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852156791 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416413888 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397463103 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393582748 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395609749 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261893214 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417134716 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396012077 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078517255 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408612197 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.944480091 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415750217 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640765336 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.409760589 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403777714 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.395933817 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.399448117 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.6561992 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693718262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400855858 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411272853 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001343372 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268458397 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40487359 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399089312 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243157568 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400328299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741774572 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.401714244 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412781127 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40146633 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398290454 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398762995 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.397023667 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404446259 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371151641 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943822048 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.405014805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43301307 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418713285 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401063264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657444892 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413504384 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060050778 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630735165 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420167631 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418717108 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404696503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404919537 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.389496155 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40038373 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401356467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408061142 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621798491 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420449106 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.384981563 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.534498553 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615412159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405776937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40750608 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678153203 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.405041609 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.405416543 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226608436 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432967018 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411071042 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405133633 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447355911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417022917 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473562742 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646252803 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417146276 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.415207525 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86292865 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428092945 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406283145 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419935759 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49905837 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421024223 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400061612 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194679813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065083962 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209198935 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.057021979 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698609992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405700095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413786278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4023553 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561288047 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402639558 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677157086 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405561905 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.449147232 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42238728 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411413571 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409573976 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615805409 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681692068 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406172728 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405969917 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401987832 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.403841894 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418126875 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618519404 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955273462 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011928798 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401169544 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411361135 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177491213 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694142388 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405678437 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404255611 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404937244 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.408796779 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43245782 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412236577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417377389 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550820142 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704486077 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127643103 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437066754 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.432902549 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.17914178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424896378 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664716833 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403720418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.669281089 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065715419 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185212851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671724537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474767652 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649722093 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.409661244 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569517469 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.417332053 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408774213 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407266759 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40947686 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.405008293 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418275212 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066969368 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673089197 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.413043325 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.419140528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439853064 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.418361468 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633019654 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226365548 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636327995 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420276447 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411920849 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406522718 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067152944 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707882114 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409182809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409314828 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685065903 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410798321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428175176 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.927571302 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.405970484 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018178976 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.381345929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433627223 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409636697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190289769 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066505532 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404633624 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963022581 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406199579 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411805828 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684024296 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414506583 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411720388 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690442969 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.412917842 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414341782 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655444683 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.068167429 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275137677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.414342816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429271525 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.432590231 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409930093 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554885625 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410904503 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407775688 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.885309713 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428983988 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409483354 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417689286 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423809917 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411780301 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.407454427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410633727 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411290757 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.407150277 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.403520558 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418073638 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411362014 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020991535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426177784 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081725763 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740398446 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668098376 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423815149 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.396528735 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.417226197 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413553767 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413206458 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408929211 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424743554 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017420048 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.425634588 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.422030814 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417852687 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.628534589 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625447301 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421036166 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660880662 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424809981 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428164983 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.399891886 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41380511 seconds)
  done (took 995.187639131 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456974931 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.434080802 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.441444818 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.441886285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.471374667 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.52735521 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.487045696 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435800192 seconds)
  done (took 21.005700222 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.415670128 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.422725082 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.429221324 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424490044 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.420070582 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.940302384 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.423869778 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.420368718 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.423936921 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.425889282 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.415538712 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.416439666 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.423343605 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.43161003 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40439786 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.42542353 seconds)
  done (took 33.580614546 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.733393943 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.664946977 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.936649219 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.472286173 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.457077725 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.423982897 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.784279601 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.431435009 seconds)
  done (took 28.218866766 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429303041 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.427739776 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426359126 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427289272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.427873541 seconds)
  done (took 8.45130702 seconds)
done (took 1265.637500324 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.420943559 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422683273 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421437268 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.423732028 seconds)
  done (took 7.001321072 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.401726447 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.402637134 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.401787582 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41532291 seconds)
  done (took 9.934167582 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.219253928 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.135994171 seconds)
  done (took 5.670045389 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.973033733 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.958575552 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.942614809 seconds)
  done (took 7.190482676 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.731014813 seconds)
  done (took 3.045976748 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.382464645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.328872897 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.177184334 seconds)
  done (took 8.205476442 seconds)
done (took 42.35895785 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418403328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.667423768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.573026559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416770512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575152648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.573297365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.197179088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417104071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42853094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418420852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41350205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.57492541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.177054955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.672146929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.178484572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.672533547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.581704037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429022732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412596991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.429531204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.19219768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.434465058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423397487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423610015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.581710456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.594060628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.436638319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.690124284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419055755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416599613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.56099091 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419194476 seconds)
  done (took 84.132979828 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420514296 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.415547375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41866971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.434418117 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428147605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422241438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.438748144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414053398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429248412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416085996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420737238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423251156 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.430924747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.432986069 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.43325276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.430614417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416887102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415380973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.432784249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417163268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.426829956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416321705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416769822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415971481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419863605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436134316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.443052162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.427860496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416453783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.447724146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420515469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433721813 seconds)
  done (took 78.930650381 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422392676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.436818942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.420603166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419203452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.417426855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.440297494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417449443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417771524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416390728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419692053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420268882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432428889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420753108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417655237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.439233334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418664822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.43238352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420938256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.43359907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418313594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.421448735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418823854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418376418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.448138473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419591257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436096186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419309083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419031425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437896925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42155789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420602668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.444952875 seconds)
  done (took 78.927352403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.70474608 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430915262 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434131384 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.415351173 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431959077 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.432227279 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426671583 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.70843244 seconds)
  done (took 15.305681197 seconds)
done (took 258.610313765 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.424933031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.421293468 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.638822832 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.453354422 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.424667301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445480343 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452417602 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.676324707 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.441424372 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.690539691 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.444500115 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444492662 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.423607564 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.46086858 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.728468691 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.586749902 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.420936978 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.425824525 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.799033011 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.451534943 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.716027153 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.429100313 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.72445652 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.426373337 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.439943088 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.427996543 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.437118229 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.415542684 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.468153089 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.804728824 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.452317689 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.412783253 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538357546 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.537180893 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.652769004 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.60106937 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.436033803 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.519480965 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.66118422 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.427893125 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.420257975 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.24672425 seconds)
  done (took 85.773105407 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.431578387 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.550982478 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.434277302 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.436113511 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.43523561 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.552225788 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.532755788 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.436330309 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.435825214 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.435087438 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.435497527 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.434979794 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.434711796 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.436670366 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.436194309 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.43784608 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.438092215 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.438364192 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.436043727 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.480528303 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.555912264 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.460751167 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.42992216 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.434175084 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.539755915 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.569643387 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.435711913 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.430117685 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.478227765 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.439030886 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.439600391 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.481407615 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.439548678 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.436346805 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.550218144 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.53642549 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.459292017 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.435290574 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.557237397 seconds)
  done (took 58.523872114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438672376 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.706451434 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.907414891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435107388 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437962614 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.443433693 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.529650661 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438425348 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.443299005 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443868014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.61215122 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.442704488 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478760961 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.934134957 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44333827 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439412453 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.441787819 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442258277 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.719263374 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448745936 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.549758894 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440580006 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.531937858 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.449618245 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.462230787 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440765439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447292156 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.042614383 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.446599509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.609899345 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.342656382 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525163861 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.002886992 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.97078107 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.346250803 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443095942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444455787 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620898709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4430227 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.443061115 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.530619449 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.44294018 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.952432846 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124235982 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462534151 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.443025719 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.065346804 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.613977761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.725898328 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452210903 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941086197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441405514 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.441712912 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444625114 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.727464086 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444028571 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.443027893 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.087769786 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466005636 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.53062421 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440166642 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.442915429 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.722050742 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.443103345 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.710963149 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.446430507 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451674739 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.462476944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.92291514 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447828862 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.148564174 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.461228556 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.442054078 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.611986866 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.716177114 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.103978512 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.462872304 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.721819531 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.015471858 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530055337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450017774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.037399953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537850012 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448635443 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448314458 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447562709 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445612328 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498571304 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.533463812 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.08869503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138566663 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.111218856 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.556601315 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.454994008 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445553817 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.094379757 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.465870657 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447341375 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.922595442 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.153706907 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.465147072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.45246082 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.160030919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.467918974 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.539152324 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454139058 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.934815778 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44880804 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.525616573 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445760689 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.453214782 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46822236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.53597195 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.453895412 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.448535736 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.136681502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63714222 seconds)
  done (took 191.203668341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.440814844 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.436587018 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.440321541 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.451178357 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.440215225 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.448616031 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.438004698 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.444160382 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.452131128 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.443997882 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.442475342 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.442710477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.441384864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.469394982 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447896212 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449610897 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.443100927 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.443017835 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.444226883 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.441844666 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.444145145 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.446957713 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444253372 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.439517926 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.444653967 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.445731992 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.47064129 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.441100984 seconds)
  done (took 65.816186362 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452062889 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078170819 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446721149 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.599631632 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.474257024 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449887561 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.594849968 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510142981 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.449645483 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447705111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445786507 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.797585101 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444671256 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.055378489 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.667310717 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.607256816 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.051709504 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468382128 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447868308 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.447746479 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.603767291 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.462651475 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.80701597 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.114265496 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451978891 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.114202507 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.435784172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.454186072 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451092852 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.117172637 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.463245476 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.806530519 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.538832165 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.521668474 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112267055 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.058272003 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.072801583 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.618522745 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45245028 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45187738 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449928913 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440670648 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.120247245 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456729094 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.457049518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.113228235 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.473801083 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.456407877 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460981259 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.453837155 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52455682 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.524918099 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812937853 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.194714208 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.54324849 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468133667 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.607213785 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.854428473 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453662332 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061852731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.458089147 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.120698332 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471972408 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.443364646 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45528414 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.460096448 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624807749 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.603405554 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.05903569 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.468421712 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061436924 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.640201124 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.452493668 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.450917502 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453904859 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.125745227 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064471015 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640555434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.607408332 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.676731216 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444455745 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455480153 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442594125 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540443193 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453277523 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.124984968 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076289886 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467167592 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.45424002 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.455996682 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457136521 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.658043965 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.141155978 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.542346644 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.029828354 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.829033848 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.815960419 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458146877 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.524677455 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.466400731 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.884033829 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457649171 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.521163605 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.920586109 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.814179401 seconds)
  done (took 175.088779645 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724093694 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.468697733 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.554928133 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616737448 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.121931149 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.090637896 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451455823 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584480071 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.574775673 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.733804011 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.450725884 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543184751 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69773178 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541419873 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.209067562 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529633737 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55943904 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.608889557 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605419348 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.453552321 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.181552314 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.796301432 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.66154968 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.48432023 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.580554517 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291598555 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.077318654 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.045057568 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.645732457 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.469052671 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.019953591 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.461545789 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.45789352 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.205886105 seconds)
  done (took 67.84773291 seconds)
done (took 645.573663743 seconds)
SAVING RESULT...
DONE!
