cset: moving following pidspec: 22903
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.54719446 seconds)
loading group "string"... done (took 0.515114365 seconds)
loading group "linalg"... done (took 8.596291048 seconds)
loading group "parallel"... done (took 0.169051376 seconds)
loading group "find"... done (took 4.462094149 seconds)
loading group "tuple"... done (took 1.913583767 seconds)
loading group "dates"... done (took 1.371531613 seconds)
loading group "micro"... done (took 0.191308512 seconds)
loading group "io"... done (took 0.519101074 seconds)
loading group "scalar"... done (took 48.912251759 seconds)
loading group "sparse"... done (took 13.401766586 seconds)
loading group "broadcast"... done (took 1.647020335 seconds)
loading group "union"... done (took 9.142771586 seconds)
loading group "simd"... done (took 3.04452949 seconds)
loading group "random"... done (took 11.326779307 seconds)
loading group "problem"... done (took 2.211706984 seconds)
loading group "array"... done (took 23.71723407 seconds)
loading group "misc"... done (took 1.099547221 seconds)
loading group "sort"... done (took 3.718400861 seconds)
loading group "collection"... done (took 19.049469259 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.684655773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.206123435 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.195572528 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206381344 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.274663818 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165826134 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157151772 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.168572695 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.647362023 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208393228 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137547156 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430009929 seconds)
done (took 6.21619248 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260813688 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240485996 seconds)
    (2/2) benchmarking "String"...
    done (took 0.183070099 seconds)
  done (took 1.105694444 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077493322 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158135584 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109875961 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095529887 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097816967 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109107189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094302918 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109270177 seconds)
  done (took 1.461440638 seconds)
done (took 3.58918938 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.527569801 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865518342 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.491108794 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.177892378 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313763599 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306834977 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.262383209 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.218594566 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092770951 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.083845896 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176882658 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.41943496 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.38243334 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.95026883 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.067926024 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095002618 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.150882938 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777782474 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080559782 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108708411 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525872979 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210624594 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115123239 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105268873 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185818774 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135209553 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140707234 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102147858 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667883439 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133038088 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213856645 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084613021 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137922569 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16462269 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212235058 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109965514 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662893238 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200083679 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096226405 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101499479 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68110434 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116981797 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203539561 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105893223 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068703809 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.160469742 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114310877 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079755062 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094812322 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101600572 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156961758 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46643706 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10641005 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192702331 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094014006 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694089859 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097802221 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272273588 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125681068 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094174124 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091318561 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087835364 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157293678 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093020391 seconds)
  done (took 20.032752105 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.166741173 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184087839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078427664 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157147857 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122184192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097635531 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086491887 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080378425 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125969534 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182877718 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138307562 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.188573285 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076792957 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0898228 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.168970482 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229973502 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126917591 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105671267 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08943498 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107702256 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122974175 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112496502 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092262074 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090937536 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171797264 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204774846 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109606133 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122200651 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089755007 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095755204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143346462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144065486 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091954925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088600557 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186439966 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107497294 seconds)
  done (took 5.282219735 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241299909 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103873845 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250239289 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196766636 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151739061 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181943396 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173297722 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.291319991 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.294508148 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161951465 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127242395 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.114722679 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.0952722 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09721076 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081602363 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079374069 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.306107988 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149237032 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190945246 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185565231 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114481151 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082762435 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379283695 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085551543 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08684064 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113353919 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064436482 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.174488212 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222956436 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095900904 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.063465252 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085268264 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121265677 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115247494 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209727197 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125070517 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120983259 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112971663 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086126003 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221810004 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119622746 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07990196 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.114740153 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100203154 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11785485 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129282045 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093603344 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126143143 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221896053 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087537221 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128918299 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.011668753 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19404521 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.157134282 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085042374 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292098509 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127931082 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101981053 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111523929 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.780659156 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127857998 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082398484 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078907978 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113122039 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079302984 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455052709 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126342798 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.43130227 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082986713 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156639564 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098848025 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119879261 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086823791 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103816133 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111533294 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087174231 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096758093 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087638223 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080165253 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109967332 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112217008 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101892834 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08156208 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147907012 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111894909 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110201064 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123726147 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091502615 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086152317 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100981327 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113416343 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097436448 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090747108 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186226887 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099278695 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127801329 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1139354 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129544667 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104469553 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.245569667 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082680353 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122095287 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101606418 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127949833 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101368396 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081367638 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102231414 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080217483 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081902459 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16028058 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089388828 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081171057 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10465379 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094232754 seconds)
  done (took 28.666297145 seconds)
done (took 54.663377819 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413840037 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080577268 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080236808 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10012287 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080860964 seconds)
  done (took 1.517502207 seconds)
done (took 2.257180717 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310378955 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197800016 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087348534 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187378709 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087158692 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195054253 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181389155 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103044475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20699139 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084834296 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192084318 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085093258 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106869544 seconds)
  done (took 2.790083848 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10410835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107001214 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102161225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120025907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086374951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105597438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119977903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108862137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102061695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112646557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087332225 seconds)
  done (took 1.894293214 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102076008 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106087179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092110147 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116356201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085593755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098846455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116101919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106876553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099395424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112830168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086102724 seconds)
  done (took 1.863851013 seconds)
done (took 7.284408297 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.20076278 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.911364474 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190296792 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243966884 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351243794 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296159084 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.60324483 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200073807 seconds)
  done (took 15.867278122 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.120979093 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.18795844 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096420271 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09690454 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114192577 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091283708 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097104313 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110721415 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09643027 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092712564 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092604119 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108723778 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09554382 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095282203 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109179158 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097268979 seconds)
  done (took 2.506712097 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143213914 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142052566 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099134033 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099954066 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11316775 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099410103 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104303363 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.115910058 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094814602 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095358609 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.120344604 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099052566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09742719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109982831 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100312634 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121633612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.11187967 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098748726 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117640051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115730567 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101067008 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097800236 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115530884 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100039349 seconds)
  done (took 3.441315192 seconds)
done (took 22.556726725 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147348355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10247629 seconds)
  done (took 0.997131866 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164233057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181810176 seconds)
  done (took 1.098335224 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11361367 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090757211 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13800763 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104637885 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091703541 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108698031 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117159778 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109806785 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091943882 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092985811 seconds)
  done (took 1.817646317 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095017452 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096254941 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123177325 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166924126 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118440232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09456341 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095126113 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112358891 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096719666 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092284471 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114044485 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109058514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096184871 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127533488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09681922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.113490029 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102239229 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095608264 seconds)
  done (took 2.703884875 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092088189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093551898 seconds)
  done (took 0.945114194 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094602833 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092709277 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094655521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109256685 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091626382 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090830944 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108679446 seconds)
  done (took 1.441177415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523531218 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234476314 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369632011 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072026031 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122899719 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.445799996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104270279 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071859125 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090919701 seconds)
  done (took 2.829180372 seconds)
done (took 12.586520566 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091862496 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.240687013 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633389421 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112892875 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091016376 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162026585 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314935269 seconds)
done (took 2.408388249 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349905271 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163249623 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083494694 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092794127 seconds)
  done (took 1.446749324 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082720704 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10073648 seconds)
  done (took 0.949690748 seconds)
done (took 3.162225133 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090910453 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090109876 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089658069 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106646142 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089412654 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089186584 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089545446 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107591078 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.122676884 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.108166809 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.090188198 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090303678 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088734059 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108654151 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089900277 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089386974 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107902211 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090858057 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090619239 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088134391 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106341011 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09012583 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089486444 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106972965 seconds)
  done (took 3.110842992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111120693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091451718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110741693 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095683114 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095080158 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111211554 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095196027 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0926342 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112732922 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092438155 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094883583 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11243536 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091585075 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094410559 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108334742 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095950373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094896997 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091034246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109842641 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095069915 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093725608 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108622611 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095092831 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094637794 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11184501 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095654484 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091292865 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109041042 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094802433 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094210233 seconds)
  done (took 3.750738583 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096852826 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088852458 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090341863 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115645779 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087637128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091544749 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104551762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091814324 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092200382 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089526555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109502052 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090231702 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089030883 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108742212 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093337054 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094211609 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115872775 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092158738 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090117643 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091387551 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111835428 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089854528 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089178675 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108769015 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090147042 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087460338 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089975642 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108304023 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092521054 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090641897 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109691664 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093235464 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091975149 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117195857 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094196646 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091124367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094989365 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10472476 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091947282 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087773 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10472778 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090341076 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091088803 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113659098 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090536319 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09127955 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090192709 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108620322 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091704832 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093285782 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105083427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091024234 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092980869 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091371488 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110748612 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08772713 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090756602 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104206227 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091435757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092205309 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104534109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088266896 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094761778 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09082391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123620099 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096324744 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089981378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109580033 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092035644 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096416841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110385037 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10192463 seconds)
  done (took 7.75201697 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113749011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099230234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109528147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092609166 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091041229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090569273 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113870584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091867796 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093083023 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115238618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09153077 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092346892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110280085 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092878651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091854486 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110486961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097250729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091818793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090565716 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110358259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09121627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095718602 seconds)
  done (took 2.953472361 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238886392 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098542055 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140446215 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122117747 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108771648 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122064837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096264919 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096906994 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112853761 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101425409 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10167168 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113477481 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109373612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118361442 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101827929 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10217421 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113516708 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102251761 seconds)
  done (took 2.878921734 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105120205 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09325163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155208281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093685827 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093310909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112639736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098892255 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111633454 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112849644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093431591 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100854298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110701972 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094378577 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093686905 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11146096 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09490389 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094768501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110486377 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101537231 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098389293 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115946096 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101545603 seconds)
  done (took 3.079627158 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10641205 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093050768 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12869511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097104227 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093542377 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110448663 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098546472 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094635193 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119033725 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093535839 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094001975 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091759296 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125554678 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093648474 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097638215 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111254032 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095639713 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093483789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111398473 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093457025 seconds)
  done (took 2.824217432 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.193330795 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127086222 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10951473 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115978431 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128036193 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109042597 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135628003 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109542502 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108925539 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137588749 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112731775 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108884925 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135827603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113747437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126471805 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118073299 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115971333 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13498036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109121628 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126613172 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120048928 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108655003 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135400973 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109070392 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127396806 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111500339 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108028553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13218657 seconds)
  done (took 4.212725673 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091919187 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091924438 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09207462 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109414333 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091721576 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092748719 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091866197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109324037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092493281 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091707311 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110414506 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092802709 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091453453 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091023429 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109802559 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093688326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092386651 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10945304 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093331085 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091020372 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091239085 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109759699 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092234636 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091814209 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109753379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094025455 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092680694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090977557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110838087 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092196357 seconds)
  done (took 3.689940235 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105536533 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102480099 seconds)
  done (took 0.996020777 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099709791 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106317927 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091308545 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110706005 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099315125 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091796279 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1197106 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099647157 seconds)
  done (took 1.606698197 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.165705294 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.19040138 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097463104 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124279605 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169260475 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180462833 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129163558 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.117008262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092810314 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085214624 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182041644 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08422347 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112027909 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09048811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09236193 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119400146 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093772646 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101757007 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118802777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095566059 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098893785 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116551407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096861891 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103100588 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10642461 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096608284 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095799455 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123083889 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090853226 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094219819 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110847252 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094227466 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096033408 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.116270263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095412087 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.18980358 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101793257 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090367198 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113367388 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100013506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125382009 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113780853 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095827537 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091789964 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115387286 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098178492 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098108005 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.111376559 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08663734 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089896176 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112200077 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089925749 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092929111 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093888744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112791286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099993169 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094163786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109865696 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089651263 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089226361 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111298709 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090725425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096345096 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114159924 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095732551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094533894 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111221178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093873211 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095187235 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112697211 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093946155 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108966385 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112346276 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09889858 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098969312 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11291305 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091436345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099026607 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110657261 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095107267 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097461344 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140114217 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096035888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088563084 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108005295 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100454332 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094799763 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114667295 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087492905 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101846134 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.113478752 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09592725 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086809123 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091373203 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108857389 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09634222 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086289437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11349323 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095703841 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098322266 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119078706 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095044697 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095933543 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117505264 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09989629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093831207 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.178485838 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091528034 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109094053 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096926233 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098339467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088178235 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112966116 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093104526 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090621452 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108659151 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099032574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093358599 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115121511 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098678422 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095670631 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113720798 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096160647 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094187935 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108722928 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099101796 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102342586 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114993862 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096725664 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096388439 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095307738 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112664067 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098933969 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091008784 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117952677 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092004651 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093793585 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113796607 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100734858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095186316 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108351237 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093805006 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094105415 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112719048 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097022186 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095593034 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.109200655 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087577453 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095391677 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108854413 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096393214 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103122119 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108180747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097582729 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090812484 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10285623 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110297993 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099726221 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096588032 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.120160394 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100602603 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086916844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110992577 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09806585 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095382834 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110430431 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096295885 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094232613 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119520196 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08890762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098451787 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08566597 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110335683 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099963393 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094493511 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116658431 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090272109 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131181409 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124408052 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101175055 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093302595 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113560988 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098889608 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093308644 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117339435 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099873652 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098823165 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109991973 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093798787 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099485813 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109143541 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097837418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09324112 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113995825 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088292883 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095558039 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086501209 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117855975 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096182808 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099101639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120435597 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097615241 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093073233 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122216269 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091175098 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099166633 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106193186 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10056162 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104909569 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120222205 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10212689 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095887839 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111167665 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097518625 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103136367 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096784099 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114386926 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096103838 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087353406 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107842807 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101568441 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097461384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110174461 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09532328 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098099639 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11469773 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103221987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087174769 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.117988978 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101181121 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090299076 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113850304 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092344707 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092785274 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120990079 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089833351 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091260191 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116151101 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099776183 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094630379 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094036017 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117194525 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101000023 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097191134 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116226599 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093501039 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10192589 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112726629 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096531365 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090563072 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116196727 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089887961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09725142 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095186449 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111626986 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091717595 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097597963 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121454098 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10058622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093309067 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118729995 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111442763 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101366688 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112180466 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101713099 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090140047 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107633544 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093383468 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087847619 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115573105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092417516 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099110162 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092951262 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114829139 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098084659 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096150532 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113573672 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100330164 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12357239 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089947212 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088325272 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112669663 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096586328 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09155946 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09212811 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.116658888 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097341745 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099005316 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117078551 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092530738 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095990268 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121234196 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092135104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101179907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120048056 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101951742 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091755806 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118486807 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093378915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098797088 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108210365 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096706671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093892513 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114023261 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09341075 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093875665 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090723315 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.108428169 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092290019 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100438801 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11285437 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100163576 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094673363 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112698737 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09299738 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091431237 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.12114869 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094885251 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101755085 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11524949 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09007105 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08885465 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120105816 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098118279 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101609411 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091355807 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119341137 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101659223 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099464272 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116444997 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104520385 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102967322 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121486401 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101663651 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089412086 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112986949 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100213992 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096092605 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117326904 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099002129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08959092 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1173179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104015745 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097397006 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093010097 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108615528 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096498652 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101348982 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118113417 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099991488 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096954395 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115639094 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092629312 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09959516 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120190141 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09618256 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102299029 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114281046 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101096036 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092483376 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100555917 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116435607 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0897904 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089363571 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112643413 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102523073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092070695 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119196926 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101921898 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093249991 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114145136 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100939957 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092138295 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098463594 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120476008 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093592918 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105349194 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116662639 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093884392 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099930402 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120937075 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090158647 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09409899 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115404305 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103293978 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094063167 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120026081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09717662 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101566728 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116940564 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101331945 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100924558 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101513015 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109797214 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102165058 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099745479 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117418574 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093248053 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093802802 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110639285 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096419917 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10255379 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113689317 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105005042 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101499019 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113163896 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094977221 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102282358 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114414072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104045506 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092492453 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097486723 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.110920477 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097673759 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094172213 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122145203 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092446283 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090370975 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120252175 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100956705 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100612081 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118328043 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103135819 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089451501 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108741468 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101745473 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093079966 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125457448 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101169784 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093557279 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113268005 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09970868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097413934 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102372223 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110833486 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09318042 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095982106 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117038319 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094631853 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090711335 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119796383 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095830868 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097885882 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114507115 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091388729 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095058611 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123708905 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095133198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092676693 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112541475 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104745443 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094798438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093032668 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111215772 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101628666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097479923 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124541032 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093529356 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095861792 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113819602 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098934771 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102680103 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114674026 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096620549 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095031125 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122028748 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102223659 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088634905 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114143697 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106505493 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101413069 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117535035 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099575481 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095085678 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122267293 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104544525 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100158233 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090206954 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110882487 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095192531 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089436161 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119877884 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102498133 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094569516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114327868 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101373292 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099991326 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119374486 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100782398 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092569787 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10293931 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.114464163 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100628103 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088991207 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110430356 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099525737 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102215053 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116113305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09868494 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097588373 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118886293 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092410723 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093492769 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118823354 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101632803 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102259518 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115040907 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096401783 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102146331 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106437236 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.11932094 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095952753 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102404626 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124632303 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097467599 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095444899 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120470021 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102230968 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099283222 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094515428 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094624384 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123221107 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103452933 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104771337 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116046605 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091451541 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101227831 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114369538 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092362466 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101009221 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123623822 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104427919 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096429519 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.11299491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107597053 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101397183 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115900326 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095167315 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095103479 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100211256 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11564844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100782563 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092732995 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123692952 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104387093 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102917658 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126858843 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092557083 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102837099 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11973271 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104975571 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098134011 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110434892 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093331261 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099367724 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104140119 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123711277 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103629589 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100721302 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122517951 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097942224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097308575 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114537237 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104081916 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102348609 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118493114 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099912666 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095412284 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117410407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09966883 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103211621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104445057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119211229 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107283639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103074915 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115754521 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094615076 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097234941 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120634864 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098949151 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101783039 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114757211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093074583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102607243 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123842298 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098063208 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103863568 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124509161 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096648686 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100809615 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104676473 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.123931828 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099323362 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098020353 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.121416137 seconds)
  done (took 62.709583447 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146966981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105220668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11905475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099833835 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118297899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121291556 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098996856 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100224215 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121523535 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108492173 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101136994 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119654599 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114674096 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139447719 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118145991 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109203289 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120432539 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101017465 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099797702 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120012747 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11501157 seconds)
  done (took 3.235026039 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116674358 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113264889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131423407 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113050095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106217771 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131321613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109529402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130315271 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113740487 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107532151 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134750273 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110746695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126820186 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.1080607 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107554857 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130006582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11479344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105733707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130800989 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110768641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128724783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111598351 seconds)
  done (took 3.433239092 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131100163 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102378947 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0975027 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119449558 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102671712 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098966115 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12485482 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099842495 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108865395 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115498539 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091145216 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094830555 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097417094 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120017265 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094515484 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099618491 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130620832 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103718656 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10356551 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118890965 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092365335 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099592355 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099977159 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111649613 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104553472 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103709633 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119861169 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103343975 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090810321 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122083844 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100160298 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093385248 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090068131 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111546353 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091808572 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102001092 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120903648 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100973725 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101775849 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090776612 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120792469 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103080187 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090972407 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12092859 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100231378 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093137375 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.122596762 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101284517 seconds)
  done (took 5.902714792 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127700795 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.401902463 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103837684 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136720511 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137228671 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108870101 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12588995 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137347993 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102067233 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124908798 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115058743 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113652204 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126552366 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107445192 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126887352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104598493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105065083 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100951082 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130721635 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102098507 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125700372 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10551227 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112190147 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131872444 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105137882 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102196694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123613926 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106776041 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110021523 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130234427 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106182159 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126296125 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113884344 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10570854 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120699352 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104999757 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114772309 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124739007 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10388835 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101515658 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124472274 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105778844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105593594 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134980594 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103912642 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10484511 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124370642 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101226151 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110147471 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124425682 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108989307 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133117669 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106455633 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103218995 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12609728 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113089464 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103772735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123033075 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105346992 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110393718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.121118591 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105696706 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112116452 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125734242 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108247092 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133593999 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104944951 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10495227 seconds)
  done (took 9.061788332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1325853 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106857228 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135000096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114806164 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107494695 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127852652 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106773405 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105930204 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12834976 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112197023 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127207429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224137542 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126313641 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112220457 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128491269 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108517877 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106800484 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128751725 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107505157 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107097429 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128689417 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115943086 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107146692 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13622384 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118612014 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124812243 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108871532 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107002445 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135854005 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10830218 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117764272 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127942373 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106944585 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134134054 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122332496 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10623121 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122312577 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109650691 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107801397 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128894518 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104425035 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114770701 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128671593 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104327222 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107410715 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129879528 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115767216 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138757678 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112935287 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111813013 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129348054 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115266475 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127643638 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108609732 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11397736 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143482562 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115909876 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135629407 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10819988 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115349124 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136140563 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122353734 seconds)
  done (took 8.323498728 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102007793 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100345366 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099807809 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121019396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100930869 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100432991 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100106615 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123363337 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101539276 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099729698 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122673184 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100838609 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099831968 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100370601 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122444931 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101770529 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100026202 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121802619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102428034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099932279 seconds)
  done (took 2.976504157 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111197292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117711048 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124207459 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109139809 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10257874 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129147621 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103799904 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103006068 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101700777 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125491946 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111682494 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130202114 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104513106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109100158 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132224076 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11037374 seconds)
  done (took 2.682471511 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119699696 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117723461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210809069 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.1040363 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125611353 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110196094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102510299 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127545335 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103823306 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108122575 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128968787 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105547342 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102581902 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103726135 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126608748 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105059975 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100976526 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127909212 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103118021 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214613292 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106984797 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105126297 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127596905 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105755943 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103756124 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129757908 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110271192 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102513046 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126801953 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10422435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104334367 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13223551 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103324544 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107298538 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124984936 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105508474 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103551664 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.124667852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107675622 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103246995 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126051571 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10611286 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104131204 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104117846 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123566807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103814601 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101566968 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130623832 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10464437 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103561608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124503426 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109293243 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107951915 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132064106 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11124121 seconds)
  done (took 7.24068663 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11661544 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104840218 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136008928 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102988871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104855343 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104362354 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126525004 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107234508 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104172988 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123797939 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10524183 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106060875 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125508436 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105779534 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105718974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125283527 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103843948 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104535595 seconds)
  done (took 2.875226001 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109160528 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103549988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106981196 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125785269 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104010069 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103732894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123620975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103234183 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102294081 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124217396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104738873 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10348946 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101899966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12484043 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103943417 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10272028 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125607841 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103491661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103768401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122237708 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104817255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103240917 seconds)
  done (took 3.275070861 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.1160473 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.211212207 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109314115 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221411636 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.1003995 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12291935 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111782948 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100392914 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138771879 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100826421 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099275852 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121558113 seconds)
  done (took 2.4186274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132863556 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140609187 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126794168 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106055444 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11305631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131656281 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109407685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108128698 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137846695 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119674633 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130365918 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116844897 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114892196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136985324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112368585 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132821544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10939113 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107810888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126146955 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123736293 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107441565 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138257109 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109070868 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129521285 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110695426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117126383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136974863 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120182491 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108095947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137773754 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114864286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131438096 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117286752 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120500469 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12656259 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128979295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124455466 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113237363 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138568466 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104572744 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112229238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138645195 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11316258 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137723391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109829195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114763947 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131177912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108456214 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150087309 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113841661 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116098736 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134780993 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11674518 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137815279 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129463109 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141821273 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118163537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113859139 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141479789 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115757582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133558596 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117400907 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140366475 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114191437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116852783 seconds)
  done (took 8.973744457 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14268682 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10562433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13058753 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120013951 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138691609 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109477965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108749452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130574968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110127296 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105546351 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172602852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109429844 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138527665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118764923 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109385314 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130277402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109239834 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116554825 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126771622 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130095055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130099194 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117158565 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115344964 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138928331 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119554649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134547087 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109541422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108636869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131216433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109871334 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113392942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132030047 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117307323 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126284965 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118765781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108608091 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131177562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115495473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109904835 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134610817 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116992657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144111893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110733118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110768063 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141724862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111071816 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108079219 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131029393 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109445414 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10489571 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142333026 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121579303 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141956043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116889913 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130541441 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110140488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109254897 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13029642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110490833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114335794 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138311067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11005445 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150684131 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110030917 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109520482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139989396 seconds)
  done (took 8.934598584 seconds)
done (took 169.664008659 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174777283 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212234062 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.194992718 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158925219 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095555455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153680622 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129046729 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.196961611 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096203003 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094954254 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095030831 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121124204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163295374 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09515581 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118536883 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098324866 seconds)
  done (took 3.062318203 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183693024 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.331644047 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111228838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122072775 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101521168 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101296093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122298435 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102877068 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09984658 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129677146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102498969 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096503058 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129037512 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098904006 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09997234 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121757354 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109306008 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100938654 seconds)
  done (took 3.141865276 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121764288 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143139555 seconds)
  done (took 1.141868124 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131766764 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21369337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284203736 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171308363 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121723733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141148872 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149994434 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133715554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191283471 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13478398 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113187629 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098245311 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148820327 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106295386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137153478 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099393417 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129101757 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136406309 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114596363 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102673335 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145158935 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104194928 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104987764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136200168 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181443277 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134375136 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105750318 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103653889 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124773161 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11452528 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106675913 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139878575 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111937158 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180362256 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103882105 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17619346 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128786347 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102730368 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113913958 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121097731 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106157059 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10487556 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135666532 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098625166 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104351343 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129935694 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105410972 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103469565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130311355 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108615708 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129334351 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10786154 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174210375 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109579447 seconds)
  done (took 7.921941319 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.866892183 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142491167 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100397883 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.989004849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145486862 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114800486 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.859660056 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149138545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251017711 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.888159784 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116785145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108276897 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259565131 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257002143 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.286746301 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35765607 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.727656742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114019008 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13071368 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161869198 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108985785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145557779 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120785973 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514407119 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101261805 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100369182 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130895504 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10891716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176484137 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102509147 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126317042 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171913982 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291418707 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207672018 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100982531 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101752356 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100623858 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183509777 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272018088 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219266607 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191721026 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098761777 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100561719 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128597127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120655012 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098011585 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176659344 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19027388 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188815523 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106084827 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10989073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132413441 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107484479 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177370917 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098112722 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356256956 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380907426 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101201571 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109144608 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134148342 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266690045 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103646701 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233217238 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149181076 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215407206 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100751262 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826090491 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184447409 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100315753 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104722058 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130980811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10761108 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128195459 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167761811 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.495404099 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11166036 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105770112 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123652373 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233528118 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102657459 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099823879 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179760653 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101844192 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131250325 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112618082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130739922 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16536171 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272704228 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110587234 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13220774 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106142432 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135915872 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103000769 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231679633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228629028 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172105345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205661462 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129743502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157236668 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183095798 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126982528 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166163879 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130802394 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114479877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107825709 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245636019 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133686378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103041205 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129610332 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110224555 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157287364 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106052563 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109762014 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186086349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551935633 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185263525 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098627791 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105503118 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133401936 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15613466 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132027309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262664693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111205735 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185379473 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108282413 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120980707 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110545863 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179115614 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108994714 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131675236 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108922854 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110567759 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278650554 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222320771 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131758024 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249472896 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176564245 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127755932 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168353033 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131926674 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165214601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133583708 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108381728 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102526746 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838671642 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117155143 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108388654 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12883274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184257542 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122331488 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104852801 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100902724 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099206137 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806957378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129545317 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099408988 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103025351 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129548586 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109468412 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108902837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130233463 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175284209 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24489649 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109958185 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130054825 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102684378 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176245579 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104116182 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101481028 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123461491 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104165743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111289257 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127903682 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10572035 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187447473 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153331801 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.247588596 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.636494054 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10344782 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102230562 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238671474 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124885166 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326883265 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110949287 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236320433 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182815957 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098983463 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380000076 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162382624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20648997 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10448347 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189242462 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098735069 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132470633 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155431989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12494464 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108430776 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178004188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113794784 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13446316 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279065138 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102562 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250032675 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100475204 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189147497 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102980892 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129442304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32441923 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103137286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116375943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178589284 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129000666 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104309201 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.617279295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102686315 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113304236 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129680499 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230962243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18562562 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110380678 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133609352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112123921 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17801086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206082287 seconds)
  done (took 47.546232446 seconds)
done (took 63.685609257 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268700742 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177764491 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281782124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177964455 seconds)
  done (took 1.874195799 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.274713997 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161383724 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253610259 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099533918 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260261368 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09962626 seconds)
  done (took 2.050922187 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180027926 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171880311 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148582319 seconds)
  done (took 1.405523392 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200878657 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216524269 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330880122 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.235857044 seconds)
  done (took 1.973199779 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.290330542 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119838567 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127874271 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.233630631 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.249695013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211936824 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125754627 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178942566 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130300749 seconds)
  done (took 2.615750193 seconds)
done (took 10.822513628 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.14728736 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.433047376 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.303539481 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.418659983 seconds)
    (5/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136778893 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.231844398 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.136543947 seconds)
    (8/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121923591 seconds)
    (9/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.405839425 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.23391686 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.196397043 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.297827138 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.287942835 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115085612 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.217913727 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.181338894 seconds)
    (17/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13548817 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137796398 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.135709462 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.19461614 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.315624152 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107622809 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233107198 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.195003953 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.264883249 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121692036 seconds)
    (27/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.169249633 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109334919 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142046638 seconds)
    (30/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.145529301 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.15573883 seconds)
    (32/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209122091 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.277351929 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.366331645 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.175296205 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.229678217 seconds)
    (37/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.151179968 seconds)
    (38/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.099532084 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.131427387 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.146472623 seconds)
    (41/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080758911 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.270565449 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.150364158 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1030822 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181172332 seconds)
    (46/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126887473 seconds)
    (47/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087274123 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.127015308 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.132150645 seconds)
    (50/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110613773 seconds)
    (51/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106517463 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133811782 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113720335 seconds)
    (54/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112435993 seconds)
    (55/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.228981053 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109566632 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144455362 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109959896 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.145327999 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104999589 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105013003 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.109240995 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207354526 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194378147 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.223956444 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.322734566 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085358955 seconds)
    (68/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.136360976 seconds)
    (69/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.144651466 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103382627 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.144423875 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105143294 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080814626 seconds)
    (74/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.13413659 seconds)
    (75/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.217033447 seconds)
    (76/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083628407 seconds)
    (77/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.214796199 seconds)
    (78/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111866728 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119100777 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.128529883 seconds)
    (81/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078398247 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110967432 seconds)
    (83/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138289606 seconds)
    (84/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.137799365 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08621807 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102346128 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.142499759 seconds)
    (88/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088997907 seconds)
    (89/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079634123 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085665737 seconds)
    (91/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123143441 seconds)
    (92/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.172920003 seconds)
    (93/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078711943 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084814368 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103149138 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108857429 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142451306 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103466861 seconds)
    (99/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.160965239 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105940475 seconds)
    (101/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124104108 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130651228 seconds)
    (103/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126834904 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08114004 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.08046737 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123822707 seconds)
    (107/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085359122 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084904864 seconds)
    (109/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200438082 seconds)
    (110/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.104760081 seconds)
    (111/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102050148 seconds)
    (112/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110763317 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.165279693 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105663113 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079296915 seconds)
    (116/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129542371 seconds)
    (117/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15055161 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085782099 seconds)
    (119/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079728023 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085133167 seconds)
    (121/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171142272 seconds)
    (122/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079093096 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082003437 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085736602 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084262512 seconds)
    (126/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102693484 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103412522 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081462759 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144741412 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197956903 seconds)
    (131/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083632901 seconds)
    (132/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.133641825 seconds)
    (133/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102369972 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078954787 seconds)
    (135/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.138854856 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198254376 seconds)
    (137/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079372394 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084659387 seconds)
    (139/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.138426815 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104214197 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163460827 seconds)
    (142/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.079785748 seconds)
    (143/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084815848 seconds)
    (144/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.104522737 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125866312 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125134562 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.158605957 seconds)
    (148/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085851425 seconds)
    (149/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.130702674 seconds)
    (150/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079120422 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.151808878 seconds)
    (152/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113188739 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111243805 seconds)
    (154/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080276584 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127426802 seconds)
    (156/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114559572 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078554299 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078429272 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125616578 seconds)
    (160/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086984634 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085680784 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101021259 seconds)
    (163/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.102228263 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086360387 seconds)
    (165/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10487724 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086011392 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156058244 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112007895 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082218257 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147690164 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086957573 seconds)
    (172/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082122995 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085939604 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103700757 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126245218 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106318896 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082256439 seconds)
    (178/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.100429609 seconds)
    (179/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.087010509 seconds)
    (180/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11153302 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083209695 seconds)
    (182/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13431808 seconds)
    (183/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081012364 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125365222 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082300479 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128102345 seconds)
    (187/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082371537 seconds)
    (188/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085117057 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105065545 seconds)
    (190/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078818375 seconds)
    (191/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129272051 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114522681 seconds)
  done (took 27.214195333 seconds)
done (took 28.122807467 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225191499 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128720637 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112735531 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111237754 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.229518672 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11908166 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152948696 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113569396 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122094743 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137413253 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103570612 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125717198 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136412502 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203688966 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139579104 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104656119 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103622043 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148542187 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128133838 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127655651 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.230600388 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104957792 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.147593997 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104148216 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233841366 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105847046 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111318722 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139877324 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125579315 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112436456 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137823926 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104590997 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128736321 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151789066 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103651695 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111991577 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126533596 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086730253 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1130256 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136231802 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126410819 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113470209 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135516138 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106278162 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113330389 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13469568 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1046713 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116894341 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102230476 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138167383 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106212271 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127854907 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135104114 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102820358 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101503523 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127528308 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12574647 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104428488 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149596799 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104951857 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103942233 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126450486 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115735052 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103430317 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111390192 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127981184 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114245893 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114514566 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134372455 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106631655 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10336974 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135012263 seconds)
done (took 10.110804197 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108980012 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147827344 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.231398596 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.233388973 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132203998 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144880347 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118687085 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12703187 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141014369 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12250048 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140005481 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160446899 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.238579838 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119420583 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119330546 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141486914 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115428803 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112480986 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.23507351 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127505623 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1542633 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119831244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155953924 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12136847 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106554892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165071115 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111461718 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11560963 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131857843 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11797168 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151451907 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108913021 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112100909 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149675998 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127120281 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118593381 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.143713745 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116591885 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107872055 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131833085 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119846937 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122966311 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132313066 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12139737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116665347 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146097799 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115160562 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120147813 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132865483 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116083423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110137793 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157716045 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120671217 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12393867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.143811801 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121158754 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120494802 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144660743 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111360533 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120763273 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131454335 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108492046 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110242755 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152804378 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110983255 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120470575 seconds)
  done (took 9.77840139 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127776392 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138250423 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142078893 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11988217 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113086361 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125174353 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102502744 seconds)
  done (took 1.825036809 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104165232 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.240786459 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215014101 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.239389013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.238231913 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.25151433 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127964051 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103065904 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164312071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113680498 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.242042377 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.269163448 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113865939 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14450981 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.218542474 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129729879 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.244214837 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104443988 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119072157 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.244333823 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121291769 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161584619 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118121216 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104108362 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.236969438 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104598465 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.287561497 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147927985 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113947405 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117782718 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145092671 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183674181 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.238628734 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117309031 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138890405 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.239107839 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.21323249 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144563209 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.253757684 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109176166 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.239603411 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119071715 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12024256 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145433877 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119969048 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.228765117 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123782269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119425118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.144092131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.220734527 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141305133 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.239916909 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117133072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11894463 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14165157 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120660928 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125548547 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145144287 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22161663 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146557713 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.239804969 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.216181336 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.242614241 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.243333384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128083117 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242928796 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.229412934 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116998938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112855891 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146597582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244359143 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118804085 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115700662 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.233389313 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121664557 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.246509642 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.243903737 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115923219 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142464497 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109249344 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116724533 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.13032835 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.210022323 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143413766 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118780364 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123002796 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143506421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119396871 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109366789 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.155233365 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119027085 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117156587 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.147635231 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118860742 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144452175 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.221138403 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141029654 seconds)
  done (took 16.974748736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107331789 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107509851 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109704499 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130434291 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106188887 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10636239 seconds)
  done (took 1.64677422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142123738 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120515184 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152046303 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121577293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167017398 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.247916834 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.255435318 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112729048 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163988034 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130565845 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.249681898 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.251511781 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.250207839 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123742029 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.255589022 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121848857 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.257741505 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11789443 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154153482 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118301765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118516584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147911367 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117781794 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.260180354 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120381507 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120150017 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139350536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129894255 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127111888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.139525535 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123141756 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144002956 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112012137 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113264587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.254531992 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110939814 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140894918 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122644254 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121699243 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146100929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.253461777 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117692252 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125209297 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147750671 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11412386 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111261636 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149181931 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113405863 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.255955347 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121942548 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14828819 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122556311 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120533815 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148253239 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113090214 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113878913 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148227594 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.230790724 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149368483 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112146337 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120540826 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147970306 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113707014 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149015423 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120675249 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12278154 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136587929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122357753 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116925347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.145391428 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123226452 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120393098 seconds)
  done (took 11.764665978 seconds)
done (took 42.935789213 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.523197084 seconds)
  done (took 2.502028793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.939500642 seconds)
  done (took 1.919692735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.507356263 seconds)
  done (took 18.518842397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.433519574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484958093 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.120368111 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151409421 seconds)
  done (took 3.173514998 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.827416651 seconds)
  done (took 1.832593782 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.326855565 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.241669983 seconds)
  done (took 1.555348978 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.70529705 seconds)
  done (took 1.705528745 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.513679033 seconds)
  done (took 2.501535605 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28700237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241748893 seconds)
  done (took 1.533286703 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.638779126 seconds)
  done (took 1.640073299 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.143057316 seconds)
  done (took 20.148362552 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260480715 seconds)
  done (took 1.265159228 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286484319 seconds)
  done (took 1.293860857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.465146589 seconds)
  done (took 4.473389748 seconds)
done (took 65.055101896 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116040451 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118524109 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117771488 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142060528 seconds)
  done (took 1.489351221 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125974248 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120253984 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147472018 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120090683 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127073408 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.14422168 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120033079 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122059223 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.144272301 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.122283392 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11987066 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119623956 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147220174 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119644567 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117831199 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147548473 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123667795 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120781794 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14669892 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120677815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120889529 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147011059 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12323156 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122780494 seconds)
  done (took 4.100163262 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116301888 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110319809 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112818776 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134043376 seconds)
  done (took 1.484964532 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128647087 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131754291 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154112595 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127310956 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131308299 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155172431 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118343385 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116997831 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145450324 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129327686 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134698524 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158883829 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131899842 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120872689 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155919341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114768274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120674771 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154965761 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125355888 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153611824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121305505 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125447753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149295316 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129554541 seconds)
  done (took 4.243552533 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194318524 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.13182644 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175558696 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164966955 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177734397 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117449482 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147388663 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151106203 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125843422 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.146983237 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123803629 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165254029 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151947363 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121336087 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119908517 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151159637 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133033898 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.150559665 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.167309254 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124848664 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151528125 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131509494 seconds)
  done (took 4.240130404 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122912886 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110913075 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132107049 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11180569 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12299947 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137772872 seconds)
  done (took 1.755494766 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109055469 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104885886 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104583817 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129003966 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108599998 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105465775 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127790518 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10567784 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104941255 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10397374 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130419747 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103956767 seconds)
  done (took 2.348525701 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206137251 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147619014 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258487064 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.42830984 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163959056 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18956168 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283029159 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189240844 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204923837 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138638738 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214584189 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162654786 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181780785 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187254752 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168222026 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157695365 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193766687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208211648 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17094297 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241240527 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159132082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206921558 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18982536 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177953961 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140998131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190027969 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120117638 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15434087 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170108416 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193441695 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202681012 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151132654 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142070643 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219331883 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260009287 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207102045 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272161369 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136420978 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198143205 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191332962 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25781802 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1681183 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222029641 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152675707 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129992296 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211782359 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1816925 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184532942 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160336831 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144153768 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211459199 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180164706 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197669259 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136434591 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322306574 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159542424 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144138844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206799627 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188088828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229909172 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205004283 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123508449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201903627 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216360852 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214859281 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168729406 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165876443 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153581219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167433484 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23191564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210775782 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161144679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23721198 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159399652 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172530479 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196450458 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156734871 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232870035 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197490111 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121151899 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177483339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13735305 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126649615 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214753804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122835567 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242258257 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131791902 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.338974446 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206484223 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157354902 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189843935 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160025324 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190397291 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14879258 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.12735488 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143547358 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190183147 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158738298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155139987 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156181484 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14063548 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153824682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154644402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.150736074 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169383988 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159883225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16491583 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195756954 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132263464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20848414 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15064043 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190233938 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169670091 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219745926 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131761363 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159743572 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247020078 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173567323 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161677332 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174788035 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2219565 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148540166 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162268795 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165508987 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220206955 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142368788 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226243908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165628883 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136120707 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166405341 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173672134 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187477514 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160905441 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153272477 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165040502 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221656362 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127092403 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16813459 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181530791 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161432582 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12511166 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136621667 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163295555 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14314098 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.176170266 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139782902 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179177623 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166146517 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191792036 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158353463 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161342544 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173805556 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157495412 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169300679 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175986259 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120521951 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202254305 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195771849 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156180473 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181384947 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189943344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208934228 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172693033 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157098826 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182546719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1541127 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122606285 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160518119 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196200863 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191809466 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189101804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207244966 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193157058 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162904546 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177958251 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198203244 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185069297 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184910511 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143067575 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198804878 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172037253 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148562948 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126189856 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128609476 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164040183 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134573873 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136563687 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207504309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193474973 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203144598 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169385112 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165175819 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191981503 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.15196199 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16196353 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201163615 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139391303 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215861419 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19122874 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206041602 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140216945 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190785718 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122245787 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153919194 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134556602 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188719781 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138013903 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136468586 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170143367 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217141344 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174174218 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176735839 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216418223 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166955331 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229470909 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120629771 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.187496172 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169541834 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195364512 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18518412 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133834866 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185214677 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219727626 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142134509 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219905233 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167753749 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20703216 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224396336 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164365747 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157409945 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148245569 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188541684 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139300621 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19001003 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146914546 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129567297 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180212955 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138500615 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168004316 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215205189 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144279747 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208820014 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157795317 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198728403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125872927 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169592024 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172500123 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173515365 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104711793 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17286524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223072207 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176902794 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156331061 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201743618 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129601302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342760254 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187939813 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206544254 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135029847 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167126266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171097727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188683133 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188987336 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185212616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168900413 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206979552 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197867693 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141910203 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159500907 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14956032 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178639867 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140201729 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.182576707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163448275 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171502791 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188884819 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165207299 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168817824 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205506803 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144658929 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178894415 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138928079 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252549855 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19564644 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173294416 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191929541 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16675148 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211660522 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124714828 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155990155 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133484895 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212619302 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130439762 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177258332 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194362942 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210478955 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202042685 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163221827 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16727633 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128606983 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166294152 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176593857 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210982139 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136938015 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165605997 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19269861 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154882937 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131304797 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186694633 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28675795 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174485149 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174360359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133051312 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280112946 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156780501 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132745826 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187679219 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171679871 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159088639 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181309995 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174456902 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16715911 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162387999 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16408327 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205483845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18494556 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195108449 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20423341 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147578911 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189911782 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162385553 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204433746 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147677754 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1754886 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15874737 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22271301 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177150332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158884247 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170046248 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196081691 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170087946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203947159 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13908581 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212146673 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127719658 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193570023 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138223764 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153843024 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160587232 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191004257 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131128339 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206039991 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195745318 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133190173 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128354858 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174763045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166147875 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168686434 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130537264 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214609412 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129121573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210074559 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210799854 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15805097 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169432236 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173819578 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131794237 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165203733 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144785994 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131692117 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.200457785 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182189161 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158586939 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177450694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193852192 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191996318 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159512832 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14338973 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.292985261 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128942176 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219817284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150195001 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226142581 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178216689 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174748502 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196177874 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150872079 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193303557 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148254038 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.248219537 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165333219 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194844617 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132891165 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171650212 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139553469 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133189969 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18039241 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167666717 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17136679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137056511 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194754214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145798676 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174765771 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144145093 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228532712 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151716721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217818326 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215762436 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138165123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203050562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175893005 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157543987 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165709174 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200484805 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143593856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18121046 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134903306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164884175 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21451368 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.153468516 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164015946 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202307843 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169144763 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201028293 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13514441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205857545 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14229971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204688683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128247047 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179650491 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169013003 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161050818 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128803843 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171140729 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189307015 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162615653 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168736953 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174966758 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22164911 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123718845 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161419653 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284797702 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189193459 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194842115 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166524255 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137069841 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17452323 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158600234 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192402309 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173581426 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159002525 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130215632 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143880306 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185189921 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142607463 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195514026 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182388765 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188890237 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214176401 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134919025 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28231202 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143966058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169919147 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144605177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129709789 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16766218 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135804008 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142542184 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210441237 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242445419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1615097 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175450561 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135700822 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155721536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131357086 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163726607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.672701549 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193210771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148130237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103389172 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16939599 seconds)
  done (took 86.117883315 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161616633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151827939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168573549 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222632325 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194693001 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29086284 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228917462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244420537 seconds)
  done (took 2.758379412 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120293498 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158160581 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142769753 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142718508 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110916677 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.479352202 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159381529 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121955613 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162088614 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152327951 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137115299 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569399837 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117840655 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14572309 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122626941 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134832639 seconds)
  done (took 4.065941192 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.613498449 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525387084 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.826652421 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.274670376 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.26044501 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20328976 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.749573275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200313121 seconds)
  done (took 11.748338346 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.165260181 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.163500313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.44306875 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.303498966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.182726535 seconds)
  done (took 2.361273513 seconds)
done (took 127.709870691 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124329401 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12418322 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124627689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152367185 seconds)
  done (took 1.615895264 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191736838 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091464504 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093472894 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117861781 seconds)
  done (took 1.596046118 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.453070073 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091616805 seconds)
  done (took 1.674829351 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153842082 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13736799 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16947425 seconds)
  done (took 1.577806894 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13714128 seconds)
  done (took 1.2440129 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127369549 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12709822 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.268162595 seconds)
  done (took 1.633010889 seconds)
done (took 10.450615025 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120825345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926671812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432109011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135000754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71177669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426417467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422778558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175660571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175158815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141391035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133843086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690221461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.414098121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874932094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.364560673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900726593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696491189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113709503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145506992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113888048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.377524268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138662137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113053631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113981327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718989694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421936585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111287701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.91603647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111852624 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115759056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428254449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112713894 seconds)
  done (took 20.892546003 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113832655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169372514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145996033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113636428 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115706323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139982469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123561473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123998374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203405017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111067779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1621646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111391586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117087747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139639876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13752034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110492887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141731197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115527774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119486302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140339806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135134867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110784235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140199284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115392301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110999144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159313146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11276083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123689512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138760164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116176726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115952507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137835233 seconds)
  done (took 5.287012775 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160300711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178182596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147669305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15049112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187989698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114349565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225327698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150314729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205155841 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113444695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133802871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138113828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152942503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112428763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165031196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111993152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115426663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141477207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119867906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114576531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161498026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111445966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113536483 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141104418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113304698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135136535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140589504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124922914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136860716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118140413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11672471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138685824 seconds)
  done (took 5.600645229 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127124047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126852995 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133436338 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.1626688 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121708776 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125511098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154702667 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121929373 seconds)
  done (took 2.185754456 seconds)
done (took 35.074907996 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138027884 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132228952 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13250477 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155275015 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.251282217 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12061256 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130366817 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119151884 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.155632133 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132966614 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110975962 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.14926203 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132441357 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122250302 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.252491898 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127534367 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.257774575 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.25522298 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121619119 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125702884 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150271203 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228932123 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155346731 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119580418 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.245158807 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116048708 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249211568 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123370579 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123329833 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143201015 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.2256682 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154661235 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122124185 seconds)
  done (took 6.385764426 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.237387215 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152250137 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122292306 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120432545 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121849348 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.14879006 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.242357429 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150428659 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121413004 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119697349 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149589974 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225605606 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157384248 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11683574 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122539427 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110037871 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.274293947 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.151887982 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.114400204 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094085493 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116561108 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.149519155 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256421253 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.146894918 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121625695 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120094647 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152393565 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.126971433 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121842867 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120984715 seconds)
  done (took 5.612226742 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126795232 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134442256 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165817058 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189195953 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150160875 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162403666 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139313032 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136190154 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170999013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114853321 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128989584 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17930104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131307463 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12401306 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142599183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132996988 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137460534 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143501436 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12345982 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131629164 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164325177 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132396707 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137149649 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151279198 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114216329 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122357654 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153217539 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126725068 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123142669 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157474447 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116545658 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118211906 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144516121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150074224 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115235968 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156919144 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14096927 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126512141 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156982948 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14774209 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117552917 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145258287 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140609664 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168671866 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145904168 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12749083 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126150055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158513934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113969867 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133202843 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18543912 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11438065 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135918427 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14188988 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114344983 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123476038 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143521481 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118548503 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12979474 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.14529707 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.143297608 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123256894 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154044007 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11709689 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125986582 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112908448 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143487855 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119735787 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141178171 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151819864 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151704581 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114825616 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155099258 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128564233 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125402071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155292499 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115285123 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125709195 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154197958 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121841004 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128426603 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146014534 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119654448 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132473386 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163020473 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131009587 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126125506 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156006107 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119370793 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116354014 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16026575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.117139747 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119652226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127254718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144148171 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119136121 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127217288 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.154424826 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112609733 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140656367 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146456016 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115309258 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139674497 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146832574 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121683006 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124794963 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185032513 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114898954 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125907146 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156851174 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115934301 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122549785 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14617277 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115900199 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132808418 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158259962 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123640399 seconds)
  done (took 17.118607222 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.351518025 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.33917107 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.186732568 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.424839054 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129624726 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.272089033 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.33833351 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.34157132 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114843371 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180454478 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176053027 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.307155168 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14582488 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144431812 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.340817397 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.397004589 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17709827 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150517502 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180383719 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128386922 seconds)
  done (took 5.96680721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136122398 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151583456 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167490964 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143230989 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125541892 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160583906 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115406741 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13638354 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155850075 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12555947 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118194743 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16032314 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128247559 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131898266 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158952071 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14868262 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121980753 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149678094 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138428623 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118776938 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131451448 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140829141 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124651548 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166726184 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134584777 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12559689 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142410175 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121065573 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122031263 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151629579 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121332915 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133068946 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151442248 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106007723 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126607274 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158148588 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122800757 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118088374 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120387524 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.15014767 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131450664 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128507592 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153103295 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100042515 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134505523 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110053139 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157843147 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128919003 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106390276 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163534435 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129661779 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130721319 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149381374 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138524448 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122549867 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159761396 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127510817 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129587523 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147419786 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115736534 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113574385 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118411746 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154259008 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130693011 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127955255 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164691957 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131694341 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115480569 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149075314 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119628895 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118771811 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158299679 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13581742 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123523879 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15076927 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129331579 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12289866 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095089403 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.153363553 seconds)
  done (took 11.793405765 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141144069 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127073862 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160615287 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151603024 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129479819 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120492883 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154088339 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135994846 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129245343 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162948616 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130122446 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128555485 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165994663 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127143322 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12489029 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159636817 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130524786 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.180982889 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136673915 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142765466 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.15933125 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12089925 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128159676 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126081334 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173312311 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126519328 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171943364 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130620823 seconds)
  done (took 5.129408423 seconds)
done (took 53.123700992 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.301265464 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.453526782 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.241308538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.241334633 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.242912096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.270705852 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.240866406 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.241486346 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.753706672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.210543864 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.240175163 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.239364248 seconds)
done (took 28.821834047 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.308684148 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.22775228 seconds)
    (2/2) benchmarking "String"...
    done (took 1.533153664 seconds)
  done (took 4.895736364 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.23162615 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.231462973 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479079785 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.230675462 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.246699707 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.232415606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.247003776 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238229365 seconds)
  done (took 16.039410317 seconds)
done (took 26.611360353 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.25396543 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.419226124 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.469703936 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.213199978 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.236618266 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.23726391 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.23823284 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.253096139 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.236851016 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.214557642 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.620395856 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.498714667 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.233573304 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.611698989 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.213861957 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.259119242 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.232133161 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.483469382 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.237900795 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.27478664 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.21186551 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.23219729 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.269816829 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.233138737 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.237288909 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.24211426 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.24669035 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.236413585 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.431199598 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.239172216 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.263678429 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.237012939 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.258627591 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.235925887 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.238349754 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.250565252 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.4323364 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.242366348 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.216634087 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.254787057 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.427424792 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.251537473 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.233118183 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.234911929 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.219679889 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.270999972 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.224591926 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.343930632 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.249559694 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.25200016 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.312400692 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.622688418 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.253080092 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.247796332 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.241514665 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.473775724 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.247992728 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.293175283 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.260599189 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.244442911 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.234841051 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.249554464 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.258798163 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.248900999 seconds)
  done (took 145.682568002 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.234886135 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.235111132 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.23713742 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.281870526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.239744964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.233249683 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.233109863 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.233986674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.234877276 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.261948694 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.238419052 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.235657808 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.239553697 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182745526 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.243329562 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.255252796 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.239772373 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.233575006 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.259841412 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.233645462 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.241884366 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.238620258 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.234227253 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.235518058 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.276552183 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.306693428 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.253152676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.263419576 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.247322771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.233607707 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.270854021 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.241971083 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.804155477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.107919393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.240097027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.243676387 seconds)
  done (took 81.365295093 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233832106 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.232203634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234469266 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.264013649 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.235892775 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.757816228 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.762814202 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.200711374 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.753724397 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.431545604 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445436444 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.238322524 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.23166475 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319689518 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.245459716 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.233328212 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248309157 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.259851185 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237595124 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234160994 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750443873 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.250637591 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.390586169 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400184806 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.246738749 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260830982 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.62192778 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230657905 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232177299 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26092451 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55556968 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.275270598 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232052302 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.524680202 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.274336193 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341754604 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23371714 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25992514 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.234356873 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506411096 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.232225324 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.233608074 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.235091903 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.229982722 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.824982677 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.238085706 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.738974368 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236570418 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.143370949 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.239545137 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231146945 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.083988123 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.833141914 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.235603553 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.231757077 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.233501588 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.231763569 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.232672258 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.260536601 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.082692599 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325671168 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.231681669 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.234099911 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261640985 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.232320149 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.437879908 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.237360865 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.614205218 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.289923007 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.447589188 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723663077 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236438533 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32018464 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344137939 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.230358419 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.229008002 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.230665518 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.230769565 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.336676779 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.23090265 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.861337245 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394322741 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.245968705 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.376490972 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32855568 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.230167375 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.492620453 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.235963512 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.230978698 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.23081194 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856113327 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323180528 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.230811825 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.231316944 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23038066 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.862243018 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.72166929 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.407042557 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237797573 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.76814758 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.236502298 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.038402516 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.713837185 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801103123 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23704162 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336407628 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.393958259 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.247094956 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.230136518 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.373036636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.236690243 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.288087107 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.237818087 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627355822 seconds)
  done (took 374.954318445 seconds)
done (took 603.137677273 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.045870545 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.0006922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.143874435 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.013771211 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.994775462 seconds)
  done (took 11.333405002 seconds)
done (took 12.466777696 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409064666 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.413057835 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291874273 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414185417 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268148421 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424046619 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395394487 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256226916 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337605493 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.307929515 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337387525 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281027751 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264914652 seconds)
  done (took 18.535478669 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529080541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.244867492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300454181 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488787116 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282605022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559965333 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576796552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244449203 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404070935 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257520637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254459669 seconds)
  done (took 18.279408022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501617845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.245656625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302905636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503094481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280161074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513958367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.547332856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.246250952 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401295195 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257941914 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256693763 seconds)
  done (took 18.193198409 seconds)
done (took 56.141688429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273130658 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.328519946 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.273638089 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.253231506 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.252130874 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.251032618 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.254418157 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.252395903 seconds)
  done (took 11.275754824 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.249629638 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25072745 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.252269405 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.252605086 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.251700704 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.251614939 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.25156207 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.252328219 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.252118103 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.251489899 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.252544561 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.251127653 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.251490453 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.251360047 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.253632781 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.251664869 seconds)
  done (took 21.165926157 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.255087383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.251570641 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.25029606 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.251857674 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.251954783 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.250929078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.252724971 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.251409981 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25147486 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.25206229 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.25244131 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.252427784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.252797535 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.253186954 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.2528339 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.253973742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.253179131 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.251999448 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.255673927 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.253301116 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.252389573 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.252759642 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.250987507 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.252040016 seconds)
  done (took 31.197649614 seconds)
done (took 64.77545515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.24125254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.238445439 seconds)
  done (took 5.619306566 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.311029956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.31287003 seconds)
  done (took 3.763688432 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.25473936 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.254773582 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.25469667 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.25499347 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.255747099 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.253775423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.254774263 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.253258906 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.254881608 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.254393745 seconds)
  done (took 13.685567743 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.254540549 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.255517572 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.254100249 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.256547922 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.255933642 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.253656146 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.25428404 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.254223105 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.254155262 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.254615228 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.254922218 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.254683304 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.256458582 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.254215826 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.253241653 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.253708986 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256091377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.254317681 seconds)
  done (took 23.726184265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.270150582 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.274697664 seconds)
  done (took 3.685143571 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.383595306 seconds)
    (2/7) benchmarking "second"...
    done (took 1.29687992 seconds)
    (3/7) benchmarking "month"...
    done (took 1.361437761 seconds)
    (4/7) benchmarking "year"...
    done (took 1.35174601 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.296479244 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.277285357 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.296474082 seconds)
  done (took 10.404336772 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.242005858 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.525322439 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.699049562 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.392869889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232732209 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.254874606 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.21905389 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.258822645 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.256914863 seconds)
  done (took 14.22162987 seconds)
done (took 76.24513377 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.240755428 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.263269383 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.257616914 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.271416032 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.551317986 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.270150308 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.247127718 seconds)
done (took 16.244566932 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.229136197 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.237865899 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.232175604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.224324732 seconds)
  done (took 10.065281467 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.234179562 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566947401 seconds)
  done (took 4.942724191 seconds)
done (took 16.150844219 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256877607 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.257323704 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.258254051 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.258420274 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.257072917 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.25685145 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.257564847 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.25726857 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.258545427 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.258428985 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.25806667 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25716978 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257703331 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257692795 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256531979 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.258292401 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.25879893 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258081271 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.258506582 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258440342 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257531883 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.258343075 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258209456 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.258398202 seconds)
  done (took 31.331296232 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.259419512 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.258477662 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.260417581 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.258566737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.260262933 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259239602 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.259662712 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.258951812 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.260081632 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.258333074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25805488 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.259381874 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.260352923 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.259822118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259536379 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261298794 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.258661043 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259559274 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259824414 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.259502493 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.260029292 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259420386 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25994548 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260968459 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.26098341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2601627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.261769456 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.26060521 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261793571 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.26216866 seconds)
  done (took 38.941969212 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.264217563 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.264736776 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.260336985 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.261488833 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.259396122 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.260514893 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.261468827 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.261017185 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.262578533 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.259852131 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.260059944 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.260658641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.259022813 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.260469954 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.263199563 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.262486651 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.261019344 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.26095896 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.261524318 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.261213125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.261777573 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.26382805 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.26109411 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.261425323 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.261474814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.262473398 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.263335016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.262739111 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.262516408 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.262239201 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.26381391 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.262616179 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.262639099 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.26376508 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.261162376 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.261803192 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.265903937 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.267500414 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.263047129 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.261416478 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.262291545 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.262730962 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.263335323 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.262676866 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.262953381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.262360702 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.263070306 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.262117258 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.263457452 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.262913191 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.262680932 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.263451195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.262608981 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.263297502 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.263591934 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.262776837 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.263172612 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.264143324 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.263510828 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.264126644 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.264280004 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.264231167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.263146518 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.262905828 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.263987323 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.26500757 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.264061272 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.265169608 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.264033212 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.264396087 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.263535458 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.264304905 seconds)
  done (took 92.060262168 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.264771338 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265403683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.263649553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26362513 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265475742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264101548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263933255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264126199 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26450226 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265903655 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267546256 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265270129 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265188591 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265628119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265909757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265369798 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265301189 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265975435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.266813514 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268501151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265877281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266750497 seconds)
  done (took 28.989488388 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267387863 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267203988 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.2652991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267614139 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269723484 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268745708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.265736522 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269994523 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266728941 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26648956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265465326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26604632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269543568 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268200315 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267036353 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268891382 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26762395 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26905036 seconds)
  done (took 23.967787092 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.267490486 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.268715392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.266102218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26751659 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.266952986 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267769899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267237167 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26874662 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.267332889 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.26734121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.270039658 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267909 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.267992119 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266894543 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26851496 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.268657722 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.268736226 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267356116 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268302028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268205261 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268064017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26696874 seconds)
  done (took 29.04428546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270374504 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268243166 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269257412 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267852891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268467505 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26843593 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.270384205 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.270007944 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.271553868 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.270310562 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269573167 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270215756 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.271765255 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268450508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.270189029 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270447951 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26979235 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269982051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27020604 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26962802 seconds)
  done (took 26.548549355 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270604098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269618093 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27014924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270200102 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270620296 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.270523337 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27192799 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271455811 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270021447 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273484049 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271984074 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271505336 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27028394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271214625 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271330219 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271814382 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271479241 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271713299 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271878432 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272494862 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272894443 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271665386 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272276122 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272059409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272522439 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27258356 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272197544 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27466153 seconds)
  done (took 36.758771167 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271466031 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272950822 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.273003822 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.273269807 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.273181633 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.272561472 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.272852538 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.273902549 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273687266 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27184593 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.273881885 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.271858382 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272645707 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.274159427 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270705565 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.273628724 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271449443 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.273187202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273745177 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271827436 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.271738268 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27358722 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.268066795 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270043749 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267933889 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.270022874 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269374312 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26887827 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268487783 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269406182 seconds)
  done (took 39.308780802 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278281412 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278992505 seconds)
  done (took 3.703414233 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.260533516 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261026735 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.262852438 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260844908 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.251414061 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251733974 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252369717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252297819 seconds)
  done (took 11.199506873 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.243735064 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253348781 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256586435 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.245587534 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244039754 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.236624248 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245095282 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249801906 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238029847 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237794936 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241649185 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.236607408 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237677436 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236522524 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233526607 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237703538 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.244731768 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240542455 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.24495587 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239140511 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237872407 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232418265 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236173397 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241929928 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230860783 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24024611 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239610715 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245701793 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22937514 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235041068 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232239152 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.239069976 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237149905 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237312038 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237146232 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236056954 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234823126 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233765277 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233144295 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238387986 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235981081 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233707155 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228097405 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232502008 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231409291 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238263067 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.234498471 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232542465 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225430858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.228356766 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.237123929 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224931162 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233045675 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22829178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229620299 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234271713 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238457344 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.224493375 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.227820434 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233798127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.234901442 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.232293534 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225432437 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231543391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227112178 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.235223749 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231570616 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233350766 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2248673 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.223874782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.224416858 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232619969 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232111281 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228356465 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225585886 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.224274351 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215076997 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225279007 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223448624 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.226472998 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.227970955 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222693178 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221455548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228067931 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.216764805 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.226918488 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.222042247 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.223753943 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.214944335 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225799169 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.230125194 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22212991 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.2148043 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.219006229 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.218971808 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.225078078 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.214129583 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21952633 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225071317 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.224371973 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22276388 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215109578 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.222752368 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229236031 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223522578 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.223437031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229352668 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216119949 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228068323 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226538578 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221670246 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.21324038 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.21806769 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224036143 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214103147 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.22055465 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.225342374 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.214253157 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223854427 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218009042 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217222133 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.230320003 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.223725814 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218089597 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.213662642 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.2222228 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216830704 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.21405979 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221836718 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.216782324 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.216186608 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214308095 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222669527 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213649123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219247171 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209675508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.219407082 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.214353031 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.214593568 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.212809697 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.215292152 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.211885895 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214564687 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.217398747 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221904808 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.211863017 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.222896305 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.215821434 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.214165548 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.217629743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.221121663 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215998652 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.210242386 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.219463953 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.207996472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218721207 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.209898343 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.219212864 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216123212 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.217363351 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.217512665 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.208947862 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212267566 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.219793091 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.215890815 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.216652536 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.220030619 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.21779465 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.217563604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.210211821 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.220849736 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.209874386 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.212375113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.221984392 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.217484172 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.218657844 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.216130898 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226143048 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217335329 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218442531 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.212132705 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.218614056 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225291753 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.221735464 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.22755646 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21928604 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.218462664 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.211921102 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.214523238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220025383 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.213640852 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.225777739 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.224033742 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228784683 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.214930376 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.220964343 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.211317348 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.221864759 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220092754 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.225784727 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.219614811 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220915603 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213682562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223378013 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.214410675 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.223689354 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.211933444 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.221364435 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.220691849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.220112343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220108543 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.214444891 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.218111031 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.224941266 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220316207 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221555639 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.212808421 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223285118 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.211238281 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.215126177 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.224347003 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.221281576 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.222597153 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227798755 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.219073618 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224023108 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.221266584 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.215302309 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222785832 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220007263 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.222713289 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225646032 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.222490196 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.218059201 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227020313 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.223239565 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.215221353 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.221435832 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228879149 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.220404268 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.215340063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.225501441 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.222200653 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.222030336 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.222816281 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214662034 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226075616 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.225650782 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.231365415 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.215332304 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.225734549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.216251024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22547503 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.217967908 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.223625617 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.222333482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226081858 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230457031 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.223146194 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216818468 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228027841 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.222637148 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.223764142 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217316161 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.22652152 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.224654165 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.224063491 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.220185007 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.219714113 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.225742691 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.216845493 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.224481516 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.217623484 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232274741 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.240632902 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226195362 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.227949263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.226685281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226258114 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.226075553 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.218913161 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219076514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220587899 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.218801072 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.219272944 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.227607432 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.219411395 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.228559687 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225778663 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224987115 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.2254351 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.223772781 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.218288231 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.2285735 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.225004306 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225305815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.218771313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.224990873 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.219049297 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225204338 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224403692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.21888476 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229762353 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228489382 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.222537024 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.220260657 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.218664338 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.216633566 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.220540413 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.227775565 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.218316251 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.230717225 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.218982561 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.222324968 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.219397284 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228503511 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.232411952 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.216603724 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.228728238 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.223491447 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.214987388 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.22049829 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.224703371 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227577786 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235890733 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.216885195 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.225986485 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223946547 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224720537 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.223251547 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.225855024 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224839005 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223825986 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230564314 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.229494661 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.218547376 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2254734 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235523967 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.224325933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.224370293 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.216923103 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225850414 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.235743761 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.219807652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.223506089 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.219698275 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.227519982 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.226701144 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.224732293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.226151736 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.225115218 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228154706 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.229251019 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22842648 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.224500827 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.230238448 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236253168 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231581289 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237422404 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.219957921 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.231416152 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.226283932 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.220552204 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.221900555 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.221989052 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.229682351 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.21791616 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.22989423 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227408042 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.223095187 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227368485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.232880639 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.219838773 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.22833625 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240167297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.219431156 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2298254 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.2266633 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.219457893 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.230354778 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.227975677 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.217787458 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.221852084 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225431796 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231698321 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.220730262 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.232924012 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221685118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231508293 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.228164362 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.228059939 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.228133926 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.22837662 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.22193687 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230008981 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229466376 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23783047 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.223948666 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22807379 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.225198024 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.2343534 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.241138703 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.225133252 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233958984 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.229744134 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.224533045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.227134152 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.234403519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225041774 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233428593 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.222457579 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225902425 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.225536917 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.230992736 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.232174169 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.233023824 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.223422951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.224847431 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23191932 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.231366659 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23019066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.22612879 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.236246774 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.223627225 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.224382662 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231935579 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.224721089 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235730494 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223989985 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.228401128 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227094762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.232832642 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.229472577 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230944908 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.22380669 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.225767191 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.236374098 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236967107 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.229390235 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.226895805 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.233542722 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.225848361 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.227649786 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.230384421 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.22727404 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.228322285 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.236743274 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.225816677 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.226627486 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.225857298 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233918912 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.237355709 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.235361299 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.226669152 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24047461 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.241220741 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239956271 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.224593704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.229274237 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.228522209 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.234460491 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.233331632 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.225648368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23950846 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.239851297 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235706696 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231611435 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.234361405 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.224665026 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235942693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234076637 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.229821334 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.239821712 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.229763631 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239996844 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233483692 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.233662984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.226462226 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.227929624 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.228168003 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.229036372 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.235056777 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232669106 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236901246 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.233069049 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240190554 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232771022 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.234116792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233249329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.227714184 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236993592 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.22948942 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.235592851 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.237007215 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.228800619 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.237441345 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235067128 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227456306 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.232929511 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.238277744 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.235411154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.229172276 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233356059 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.240114674 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245851328 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23599665 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228599282 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.232359712 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.238475255 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235410712 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.235147395 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.230282344 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244083286 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.248576354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228107163 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.233580582 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239036998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.247627094 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235383572 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.237190942 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.23314569 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.235002139 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.241633345 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237202975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239013499 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241816752 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.231445826 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.239462867 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.231373724 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.235399098 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.237663527 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246946918 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.237057216 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.231386616 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.245405765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24873791 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236638709 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253669471 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.244467386 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.238241064 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.243278518 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229721771 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.240386388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.234151313 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.24401489 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.239317566 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237356189 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.239490793 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.230626359 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240130922 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.244772671 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.248865295 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.238061015 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.232227883 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.233911465 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.240038945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.240244951 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.240222017 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239345786 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.239882314 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.239917281 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.234217155 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250029846 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.25436074 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.244119552 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.238420862 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238896521 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.239926394 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.242180608 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237353203 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243041504 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.23965887 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.238962894 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.237837655 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247729081 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.241510112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.234624273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.235426417 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233895549 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241784138 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.247146765 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259190457 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24415131 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.244401883 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243055463 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.242036342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235587265 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245822031 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242052285 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.234815405 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.236987859 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243621418 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.242662484 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.240872064 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.236020086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.245332386 seconds)
  done (took 733.115505413 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242574663 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241025229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24082227 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242757335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241400924 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240437078 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241996486 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24274481 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.241512755 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242661053 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243165843 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242219318 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241862501 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242697496 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242196649 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242605211 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242975628 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241780569 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243106154 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242860933 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242984688 seconds)
  done (took 27.215428219 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.243009641 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.242799542 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244061209 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24329986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242664245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242309741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243669529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244003203 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242476959 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242557479 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243744809 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244351625 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.243773423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.243696434 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242991901 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242872964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245074967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243460832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.244706197 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244103176 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243663656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244319929 seconds)
  done (took 28.488753753 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.245013844 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.244920266 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.237664469 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.246593512 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.243588212 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.243947959 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.245284443 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.244155502 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.24425554 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.237104733 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.238176636 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.238448848 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.241054401 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.248252177 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.241346245 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.250506262 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.246040063 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.244433121 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.24511417 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.244669239 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.248797693 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.256983981 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.246402671 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.236928431 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.247335936 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.246476902 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.246199747 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.246388652 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.238894351 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.247798174 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.246181273 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.23867302 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.24785203 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.246871649 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.239517857 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.247360789 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.247095797 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.246373536 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.246713304 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.245412454 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.260570577 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.246582474 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.251583543 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.257738836 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.245677882 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.240722395 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.251302699 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.247335368 seconds)
  done (took 60.918963306 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.24710294 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.247482914 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.246865794 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.246895836 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.248101791 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.246742718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.247138584 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.248533195 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.247938639 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.246781167 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.249402251 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.24832136 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247742419 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.248260626 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.248486272 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.24787612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249858807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248260981 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.247204179 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248503123 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.247997728 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.248496519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.248860186 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.248074841 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.247385966 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.247372459 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249894524 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.248173066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.24912009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.248014582 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.24970104 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.249026682 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.249184863 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.249262933 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249102414 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.248464052 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.249257065 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.249285607 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.250495329 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.249696529 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.249768991 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.250077639 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.250185689 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.249043487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.250715275 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.250075415 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250167565 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.250713513 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.248994955 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.250653916 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.249334746 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249664644 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.251074863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250492538 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250777344 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.251263984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.250518344 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.251785711 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.250898605 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.250299643 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250898003 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.251688895 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251440805 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.251632267 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.2503896 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.252199201 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.249352181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.251183538 seconds)
  done (took 86.085712103 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251026147 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.252520034 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252739592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253584597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252746077 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.252604707 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253378114 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253657416 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.251996329 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251759358 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252418202 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.252688257 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2534994 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253608312 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.253962718 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252017997 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253931635 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253592208 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254130873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252413642 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.252966482 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.253759165 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254263355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.253418399 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254611493 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253859096 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253623738 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.253831108 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253512372 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25494459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253897364 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255175687 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25316978 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.253853845 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.25462853 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.255034988 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254138713 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253641527 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254354369 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255091015 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256001707 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25462235 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255619126 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.254647666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254514314 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254434647 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255396404 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.257081255 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253388744 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255822816 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255508671 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254567785 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256565938 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254517144 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255526363 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.256101451 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256279842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256678877 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255609275 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255470306 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256673938 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.256366969 seconds)
  done (took 78.90043496 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255917549 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255341137 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254391545 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255041612 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257176291 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255665193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256222756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.255922288 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256980878 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.255522099 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257267037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25651613 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257788204 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256500284 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257579733 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257254606 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257277896 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257524388 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256917372 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256904526 seconds)
  done (took 26.270559004 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256522723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.257111196 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.258427601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257296538 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.257277272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258531119 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.257414398 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259493164 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257888253 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257872773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258830301 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258376864 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256769882 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258704362 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258442184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257169199 seconds)
  done (took 21.267667284 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.258576413 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.257022117 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259157942 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258669182 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.258742738 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.258509124 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.25853302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.258615296 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.258240353 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.258676985 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.259123253 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.257702517 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.259065328 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259225454 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.258530672 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25868159 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.258006746 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.25815636 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260010196 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.258247164 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260104447 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.260556185 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259394671 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.258558985 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.259500054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.259432039 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.258660112 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.259897039 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.259104577 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.259930584 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.260299933 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.260415559 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.260635109 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.260285294 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.261738826 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.260239319 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.259405449 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.260332829 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.260348735 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.260132549 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.260963697 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.260372862 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.261534781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260003344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.260424894 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260525718 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.26120244 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.261418825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.259495722 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.260486741 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.260594089 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.260343619 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.260777016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.261439612 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.26274306 seconds)
  done (took 70.42704163 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260702249 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26175665 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.262079827 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.260620078 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.261286589 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.262101366 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261080125 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.263797562 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26151218 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262242874 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263145102 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.26289086 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263343519 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262000544 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262809906 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262373671 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.261797663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262294789 seconds)
  done (took 23.864011708 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.264255204 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263307268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.263844864 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262079258 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.263113425 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263641744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262622322 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.264549347 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263829513 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.262252965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261829054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.263326204 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262985797 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264097971 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2634516 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264034994 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.263578609 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262998762 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.264271175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262913992 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264171326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263987371 seconds)
  done (took 28.942729104 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.253862907 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.253417011 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.253289343 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.269106791 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.267027889 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.254905875 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.254606954 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.25354958 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.273539099 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.288639058 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.284099488 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.267475315 seconds)
  done (took 16.321511192 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264292432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265306854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26554584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264851191 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26534542 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265024605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264716444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265841751 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265974154 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26572036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26720131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265942305 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264844979 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264412465 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264966763 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265368786 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266527112 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265042904 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267243192 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267794718 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265535099 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266434753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265130625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266370755 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267150321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265773774 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267341192 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267039566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266897814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266151213 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266664431 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266313358 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266568068 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268044794 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267409168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266883724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267926255 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267996117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26722244 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26654173 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267523804 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266835588 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267837769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268247204 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267816514 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267212059 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267630041 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267783593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267407731 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268255137 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267801754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268363142 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268872964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268495815 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269031197 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268980543 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268381242 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268951482 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269300247 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268947796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26939987 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26953686 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2678144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26971665 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268964158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268492628 seconds)
  done (took 84.776615004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26845251 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26785831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268958251 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26948351 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269290968 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269643317 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270042189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269032862 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269194117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269263063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269787617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268719981 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269136094 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271039936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269744582 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268810876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270211274 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269960791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270171894 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269716511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270647715 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26916157 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271096734 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269720391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269778758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271126692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27028677 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269712341 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270001376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271028666 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270229767 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269775319 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270469317 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270058316 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271501149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272039941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271687574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271303701 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271926972 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271659413 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271002497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271821938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271756313 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271651323 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272852212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271668785 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273485727 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271675254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272585062 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271211746 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272942163 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27185639 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279548115 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271879899 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272868698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273043655 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271796358 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272699517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273435888 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272394086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272249226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271343565 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272888522 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272354426 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27348159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273997824 seconds)
  done (took 85.044188309 seconds)
done (took 1734.635909452 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.429221421 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.38472248 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.262939925 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.273302683 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.263853245 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.26839684 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.272149533 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.263707554 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.263899668 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.262663866 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.263403969 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.45559813 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.300638234 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.26374815 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.263626402 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.360540332 seconds)
  done (took 26.008935752 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.286938296 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.277355455 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.379904306 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.276859644 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.298821802 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.452404699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.330913191 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.276542462 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.432901586 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.293932306 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.277521785 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.295650659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.275897279 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.266935073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.308890482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.452217824 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515330208 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.267533218 seconds)
  done (took 28.122776377 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.684229679 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.302858239 seconds)
  done (took 5.150946699 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.294590882 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.276118053 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.279608395 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.274591731 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.270105187 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.266813072 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276339327 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.273898709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.280480466 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.39620435 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282335945 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.290457105 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.276613868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.277193606 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284318104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320284271 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.419741368 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.286804336 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284850527 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.283217719 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.275859042 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.370747457 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.316182126 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286655534 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39258226 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.271599505 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.285657698 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.284827189 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.396790202 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.288356585 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.276608602 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.277798795 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.279991875 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.253401708 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.810140208 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.274914694 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.301036931 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.28567482 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.287014328 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430292999 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280477454 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.284911726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.279733237 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.808606077 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.398463436 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.393191938 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.277068151 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.284582866 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.280795223 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.340748672 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.279210134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.280872563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.336627369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.087556148 seconds)
  done (took 82.320728918 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.31717184 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.272128487 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456572148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293269524 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271418801 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275721157 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.276423399 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.533920868 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.280099353 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272098851 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.578198457 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879503959 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27338925 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.337776405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.315215833 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.324106376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27487986 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.272959921 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.276957216 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.277243858 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829741901 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274170025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.276027736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.345134426 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.313588961 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809508151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.276880964 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.273690435 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.299449943 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.27304889 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.844933146 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.290935557 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.325532139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.272357952 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55508473 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661492914 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621426078 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.278086972 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.292797228 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.274551226 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.309377505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.810125998 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645391207 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.27896848 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.274971536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.809861233 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.279360384 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.273796575 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.282124401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543083599 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.275608085 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.274409326 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.275248901 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.280988215 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.274733129 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.333710278 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.333772138 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813061109 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2809094 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.274877458 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321893387 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.277804008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28285835 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.278780478 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278499364 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645809645 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507865728 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.279137793 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641934433 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842329565 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.293475911 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917576423 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.281563563 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282876466 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.304422588 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.27621957 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.294719425 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806148145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314159281 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277758961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621122209 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281841717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.575265535 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.296947134 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.277825067 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847599153 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.28542314 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.327411486 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.27756922 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.280244461 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.298342144 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.281815176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.562561154 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.319264534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.27831978 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.277579833 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.304478182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.278142977 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297750246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.288256023 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91538267 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.283597926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.278547524 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296421554 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277816004 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.283961261 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.278807455 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.281982567 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561347654 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.280722484 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.303958692 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.280445417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278843683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.277548463 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.363423531 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.278544631 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.575748741 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289454524 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.278376367 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.290504858 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.278461564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.2891904 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292890511 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286786135 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247867665 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.652385917 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299244471 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.296793639 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280674647 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.279414015 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304684853 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284413703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.331621878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.280626182 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065854868 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.290275193 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.298950779 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.280547281 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.290263711 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.281404744 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.306226955 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279630588 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580343009 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.563997108 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.50885371 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283600711 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281527957 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.084963887 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328661677 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466921748 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299346821 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.281526422 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581702018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588990728 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.283027024 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.282246447 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.285496204 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558290793 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.290874733 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597375141 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87394485 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286088838 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.281572432 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074143991 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.094911884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.287172561 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.281708495 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572934354 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.303665255 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.281581799 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.281955864 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.283697451 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281772644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.283530906 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.2902506 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.282409736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.284303509 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.582235522 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477993364 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302673037 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.285563187 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811576794 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305685488 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283193899 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.29488068 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.285447555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.28306427 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.343261125 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.287278068 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.321663017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.286448159 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.290992457 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901644278 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.288503996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287906239 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480078071 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01761863 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.289058941 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.285834911 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.283713879 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.348022442 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843659092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309923308 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.581049982 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.288949572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.326262261 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284832175 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303853191 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845740279 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294106331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284798592 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.015499394 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.289188619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.710782941 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.284002801 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.296388667 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935721983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.28994208 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.288004387 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.292832976 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291072038 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604634339 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.289963566 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.334567665 seconds)
  done (took 487.047128607 seconds)
done (took 629.805500322 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.285485 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284326573 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.290810095 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289801839 seconds)
  done (took 10.329350578 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308484036 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.292920035 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.302310635 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.292871458 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303087013 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.291953538 seconds)
  done (took 8.971067459 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.286760202 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.285914211 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.289749458 seconds)
  done (took 8.042317988 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.487668846 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.316601388 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.627037253 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.297505515 seconds)
  done (took 8.908248903 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303197781 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302488963 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.303028326 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.303297538 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.304176457 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306464168 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.304375933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.304243021 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.305636238 seconds)
  done (took 12.915243223 seconds)
done (took 50.345021507 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.318851463 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.526925871 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.378029981 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.768662714 seconds)
    (5/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.446468937 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.266566373 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.481644158 seconds)
    (8/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.294521047 seconds)
    (9/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.62621401 seconds)
    (10/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.272293016 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.355142197 seconds)
    (12/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.383708425 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.432425331 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.328347069 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.370240863 seconds)
    (16/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.286357571 seconds)
    (17/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.330499755 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.393302319 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.326865595 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.269148153 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.382845763 seconds)
    (22/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.364257616 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267568224 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.530044396 seconds)
    (25/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.566311575 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.417047443 seconds)
    (27/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.274022827 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.786408318 seconds)
    (29/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.303746778 seconds)
    (30/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.360719901 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.372930844 seconds)
    (32/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.268229147 seconds)
    (33/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.468302587 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.564079064 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.532507496 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.273970048 seconds)
    (37/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.497791621 seconds)
    (38/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.470597136 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.47006584 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.538646966 seconds)
    (41/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.393029223 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.46172845 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.407213633 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.416419247 seconds)
    (45/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.54015502 seconds)
    (46/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.378513081 seconds)
    (47/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268596023 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.397865197 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.384640403 seconds)
    (50/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.33260094 seconds)
    (51/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.407920845 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.327963513 seconds)
    (53/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4596209 seconds)
    (54/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361666633 seconds)
    (55/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.357362747 seconds)
    (56/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.326573945 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.392365335 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.406755782 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.301574329 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.531088231 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.40715696 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.270586551 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.274225835 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.638408653 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.40943105 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.445551894 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.529150301 seconds)
    (68/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.324276032 seconds)
    (69/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.319275583 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.407965778 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.456012545 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.447737099 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.379452253 seconds)
    (74/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.278076138 seconds)
    (75/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.639048588 seconds)
    (76/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.408837136 seconds)
    (77/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.298594887 seconds)
    (78/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.332404863 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.298965732 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.478524234 seconds)
    (81/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.278075695 seconds)
    (82/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.335112729 seconds)
    (83/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.323497861 seconds)
    (84/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.372006324 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.600980571 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.359396182 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.450768974 seconds)
    (88/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.277352403 seconds)
    (89/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.428422013 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.580481563 seconds)
    (91/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.390039556 seconds)
    (92/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.497191164 seconds)
    (93/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.276625259 seconds)
    (94/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.448169304 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.444558427 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.50681403 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.275642083 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.455305977 seconds)
    (99/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.324086431 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.294888931 seconds)
    (101/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.376539045 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.403850431 seconds)
    (103/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.379747319 seconds)
    (104/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.371939864 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.4434545 seconds)
    (106/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.404586681 seconds)
    (107/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.410848622 seconds)
    (108/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.40697191 seconds)
    (109/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.303476352 seconds)
    (110/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.468457265 seconds)
    (111/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.411035755 seconds)
    (112/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328514301 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.497919843 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.537298246 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.392363811 seconds)
    (116/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.383003332 seconds)
    (117/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.390341376 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.272774504 seconds)
    (119/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.283745623 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.298330093 seconds)
    (121/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.635022824 seconds)
    (122/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.273374205 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.468274791 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.273755288 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.609305694 seconds)
    (126/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.490274178 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.453776892 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.559229134 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.299595585 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.281978945 seconds)
    (131/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.47241636 seconds)
    (132/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.341948053 seconds)
    (133/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.396964208 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.274419991 seconds)
    (135/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.369660207 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.410120698 seconds)
    (137/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.281984825 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.634461683 seconds)
    (139/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.361308206 seconds)
    (140/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.587314505 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.608650329 seconds)
    (142/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.334082764 seconds)
    (143/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.500218405 seconds)
    (144/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.701642133 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.431111287 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.386447316 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.290957344 seconds)
    (148/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.541148109 seconds)
    (149/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.445803864 seconds)
    (150/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.373476765 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.384667047 seconds)
    (152/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.381677148 seconds)
    (153/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.327546393 seconds)
    (154/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.289167166 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.39584787 seconds)
    (156/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.370417212 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.276737338 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.278306602 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.401847065 seconds)
    (160/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.279558364 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.520329932 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.357320197 seconds)
    (163/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.36754041 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.295509927 seconds)
    (165/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.297614984 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.29257808 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.417017257 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.335942756 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.50659225 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.415904964 seconds)
    (171/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.451123894 seconds)
    (172/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.511144564 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.643889926 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.460986474 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.406146517 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.297976651 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.289912407 seconds)
    (178/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.311034697 seconds)
    (179/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.449094458 seconds)
    (180/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.330873471 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.278958291 seconds)
    (182/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341542241 seconds)
    (183/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.373283896 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.50057949 seconds)
    (185/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.567656963 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.30578904 seconds)
    (187/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.503809023 seconds)
    (188/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.461839787 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.312578906 seconds)
    (190/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.282218783 seconds)
    (191/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.310448574 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400579103 seconds)
  done (took 318.413981157 seconds)
done (took 319.59639679 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328842354 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.404797148 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.307890258 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.308276726 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308246824 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.298793938 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.333298713 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.308166539 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.322568992 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.322924708 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.299218379 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.321288087 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.322869747 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.319264186 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.342989746 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308511463 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.309242341 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.31938416 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.323296895 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.326271568 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31054143 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309498378 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337033304 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.309189515 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31708968 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318144252 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.315569005 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.305868504 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.316701702 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.324249056 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.303948868 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.31607057 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.325690512 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320435714 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31289464 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319177759 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310447623 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.406570653 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.329671759 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.320420103 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.317952964 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.325822864 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.315548752 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.314309508 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.322363951 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.338753054 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319938872 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.326183881 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.304976719 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.290942975 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336033444 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.323566578 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.319727947 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.283667002 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.301645085 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.326900064 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.320862619 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330713328 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.319810312 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313803827 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.344639493 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331959063 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.324019878 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321867126 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.318532712 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.327522982 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.321553949 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.327912468 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.318966316 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313295802 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313755135 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.321249835 seconds)
done (took 104.297718478 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436174374 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.307452001 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471886201 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.318173649 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47500522 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.433406895 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319816745 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321559698 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.319003146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.108001829 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.320250429 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.320368845 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.308299869 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.320633705 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431584933 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.319169976 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.320797068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.005097038 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.321631051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451751934 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.311039257 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321290104 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.322942797 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.119957378 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.309859116 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.303881169 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452524422 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321139378 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.025039094 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.303635585 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.308695716 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.019868531 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45394245 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.338979889 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.329386141 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330391621 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476157375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.323635403 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437604486 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436975952 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473790787 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.359564498 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.306466861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.310796605 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.322988093 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.322975124 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322250666 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.351499188 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.309554365 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.3226257 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.009343557 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332101733 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.334144534 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.323065482 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.324289609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.342889344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324017203 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.32485016 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457563782 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324724607 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439536934 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.123124631 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.111247154 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.325183924 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.309825754 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.324144158 seconds)
  done (took 107.206894038 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.384354804 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.390887126 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.421357891 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.31401408 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.36449772 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.424798966 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.315397252 seconds)
  done (took 10.81313322 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.32115954 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323666571 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362735976 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363350296 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.325727521 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.487333754 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323736859 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.325576935 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.323887326 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.366207302 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.324501988 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.325027174 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333850447 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.314557175 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363483241 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.326991781 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.435083053 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.31763024 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.325397226 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.472553794 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325346983 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.333944253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.366333669 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.327636698 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.32592385 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.323065002 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.106925741 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323158089 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325227775 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.325097741 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325854202 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.381724812 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324321187 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.315887116 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326919377 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430552515 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.325587562 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.326516397 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.326723649 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.319461216 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.327791586 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.325450391 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.327141177 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327524458 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.326375871 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.34315412 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327862925 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.327290666 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32620176 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327729781 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.367684583 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.326639989 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.32646343 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325984017 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.370677215 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335246477 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.320217845 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.320229823 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.321679234 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.321990843 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470403763 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359128458 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.321667851 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358830961 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319399701 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318850274 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.319227118 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.318604311 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401841643 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.319767483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360863105 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.316869406 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.488155538 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332191628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.318133717 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.311907729 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.311074866 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31631135 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.304463102 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.31533459 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.317903676 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.310230699 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314469882 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.317479772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.315912983 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466264463 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416011262 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.316654213 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.324075318 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.314759986 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3176181 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.359823833 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31567483 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.316532162 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358650084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.427481393 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.362367833 seconds)
  done (took 136.129054468 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.321321753 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.323188035 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.313402485 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.335448633 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.313867872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313145802 seconds)
  done (took 9.113747349 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.314714541 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325308736 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.323558042 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.321802518 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.323273591 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.323665055 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.322837159 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315824836 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.325402548 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.322508766 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.325533858 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.323840619 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.325163268 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.324006417 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.323914545 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.323830093 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.324795616 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324525226 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.324727445 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325385958 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.311844493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.323072373 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325641212 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317294068 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.327154435 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3254366 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340818045 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.32337106 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.324956761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.323121546 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.326778616 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.32704137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.317906504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.320475644 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.329018734 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318308748 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327175781 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.325675903 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324589415 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.325741044 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.324725342 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325700262 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.325020171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.325908116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.318389265 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.319394146 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.327926574 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340940763 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.326146687 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.324984266 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.327092886 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.325649004 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.32656461 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.326332828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.318399634 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319745617 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.328443933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.327011358 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.326470608 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.318412084 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.327583925 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.328828179 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318929821 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.327854995 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.328799443 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32743791 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.318724035 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.33052442 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3280115 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.325873846 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.326974058 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.326743671 seconds)
  done (took 97.56970071 seconds)
done (took 362.026800322 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.704031086 seconds)
  done (took 3.906494269 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.583990693 seconds)
  done (took 3.787980344 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.752593634 seconds)
  done (took 22.207965254 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.313007607 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.322191983 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.316599428 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.317467322 seconds)
  done (took 10.471956097 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.584389252 seconds)
  done (took 3.787860487 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.323768158 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.32713495 seconds)
  done (took 5.857199308 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.483103164 seconds)
  done (took 3.688968184 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.518555819 seconds)
  done (took 3.723841625 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.327116348 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.346287166 seconds)
  done (took 5.887025852 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.29423578 seconds)
  done (took 3.499814775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.505252208 seconds)
  done (took 20.711356904 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.345765978 seconds)
  done (took 3.553024769 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.346350965 seconds)
  done (took 3.55186856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.752890933 seconds)
  done (took 5.958108026 seconds)
done (took 101.794537822 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.316803431 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.318253191 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.317657274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.316689119 seconds)
  done (took 10.475455439 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394748487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395236705 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.406496582 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390973902 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.389813743 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399376707 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.358582742 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.358199931 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389201538 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.385383135 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400445378 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390839868 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.3991267 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.359251907 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.385081397 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399580192 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.388485919 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405379578 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.359698158 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390374086 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.334561152 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.391125738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386076862 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.333309151 seconds)
  done (took 34.397750717 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.818456492 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.394058107 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.47805789 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.375507584 seconds)
  done (took 7.273196859 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438138837 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440289325 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.455982727 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.493224088 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.53922646 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45112035 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.36043615 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.354710809 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.342364667 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439592333 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516590441 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437245252 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.654259659 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.333803897 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.652331829 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.333923553 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.33345208 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.437855152 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487786626 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516714245 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.335069863 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.437223847 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441696862 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.437254577 seconds)
  done (took 35.878152373 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.343183269 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.351416445 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.335974962 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.351050243 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.337779492 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.336230794 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.337635044 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.341310747 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.334602253 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.337738806 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.337141852 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.351107536 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.335314085 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.336540785 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.343682202 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.337930874 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.337848636 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.343765623 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.345586807 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.338517307 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.3362293 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.343982475 seconds)
  done (took 30.70404483 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.320811804 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.320255497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.672140669 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.576829757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.320700209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.326446713 seconds)
  done (took 13.747387004 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.392162863 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.525115112 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.328452029 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660841139 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.749318798 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334613303 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.328298725 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.562436318 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.845826464 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.842333724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.388295195 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.396215013 seconds)
  done (took 19.563421607 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413557344 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332739659 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335269609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370147559 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333146737 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332700276 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394721982 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014853882 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.339041783 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609829701 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336566603 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415491822 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.580948454 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343475878 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336863438 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.287895933 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563705207 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801710775 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33696698 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333880566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364893623 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337796231 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33580751 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535164177 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335245869 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334441786 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.59470576 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332789691 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60449247 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580726853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581215045 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336701923 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609464278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970922965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440768057 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5325074 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341366067 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336068038 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.334027512 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.336140901 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336196629 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336035239 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579112333 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336473674 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334708485 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348013959 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029957794 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.343250367 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.33490545 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336014714 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582452736 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418850339 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.342086279 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333402597 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418916471 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334354991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.340730142 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46142682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97319302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334452198 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358163081 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.339214877 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338080468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349813877 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960484484 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.344007381 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.340987184 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342318424 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336688911 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346472712 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35702431 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336552652 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.357394539 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335732369 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085675903 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34539643 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337888146 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859045386 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342227753 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.340964269 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563446676 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337946532 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338634669 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.337229707 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336752501 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050107322 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34453598 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.306909822 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376836082 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021566508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538394308 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357388541 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367545603 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560260639 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.307338744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339202124 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.337692146 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3417185 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359424265 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028466085 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337641521 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.344324157 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586357321 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.550161033 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347975018 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.324682514 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800800687 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341194871 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.364640816 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346830465 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542919925 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.935613309 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593264377 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340520785 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37359168 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339608461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103127811 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343162269 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.351024619 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341745317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614657881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.129325032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341012191 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413227854 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340868429 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340192228 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350217899 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341666985 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340517065 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.518270267 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352624341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590230655 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.345187207 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340503907 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.353507273 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349865326 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.343377162 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562069213 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34546759 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619712495 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340381505 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340886945 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342850322 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.561562484 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.348860921 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.348318646 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680846609 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349891226 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348608201 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593603298 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374657321 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454483676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3738766 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.348369842 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594116141 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.347657117 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.349300084 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354342719 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344214482 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348362335 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.353718423 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335185925 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942104652 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320892664 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347677638 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343629206 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.358683693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41655662 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350366104 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542522262 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.357171818 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344337685 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.365632372 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.344543325 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569723673 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590259571 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.345401982 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51672877 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.800639549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941994629 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35899312 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.343994586 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.343498851 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.343763589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34526602 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344355443 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345060215 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545374004 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602564149 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339746526 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947428933 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348066749 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345709911 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.35231936 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59098045 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.355427745 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344383427 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.346299204 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345781156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347965342 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597287044 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567897321 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.361827303 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345811658 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.86602179 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356936076 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348155806 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345875489 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373774659 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345291917 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173362193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68734863 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338445615 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594280599 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347876444 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.363761383 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.346860098 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358651407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352852687 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.370511381 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356323986 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.54804391 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360525953 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348818636 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986950925 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105051593 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893223543 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359937703 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.352125315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350362507 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042851377 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34811076 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346527731 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588342563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039693696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34677712 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80813977 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.34841449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089349595 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596086637 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574978869 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358396814 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.349080193 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599371303 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562374917 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375483277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361408845 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352730227 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.320873443 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881264995 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351288321 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52914531 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040889053 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349431411 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352207328 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.375146796 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349494079 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732670619 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349969181 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349527688 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356154632 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361432146 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176485837 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355370535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350422571 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978184305 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3524138 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.815951641 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349841971 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551836408 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603447794 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.577608236 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.363989279 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.34944152 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.611853741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600706602 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354508793 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353914615 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900740811 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.210395719 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.360324416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353172978 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121757247 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362040156 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630892957 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360941652 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.367142186 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355978065 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353507956 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354260783 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.351957284 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358892438 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326377176 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819601386 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.354192579 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358066015 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354019539 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37131957 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599016514 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36844112 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952240118 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58043851 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343416023 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401548512 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.358952842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356456544 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.324128659 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353389703 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353470102 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432907389 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574571792 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355735338 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.326415922 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423096394 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564163855 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353775261 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363517904 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566132414 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.355217853 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.358951398 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13381197 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387283449 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364606733 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355391223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34620182 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392082977 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427707252 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55654697 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.605684416 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608305318 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743781126 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366079895 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358043256 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.371718288 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43716342 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354273959 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.356440659 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.371078303 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956267803 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108490872 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.968932131 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609062096 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363310988 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36648422 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35613671 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596950105 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355002512 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632020379 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355319378 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.349981661 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394808009 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364848281 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369412037 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572152822 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631881053 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356480966 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369786431 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359020336 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.355560059 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612509733 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573181348 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830323133 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889608164 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361592271 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36798083 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058308233 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632160257 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357464415 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358505037 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356426884 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.37171085 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.374062065 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.36835218 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357384979 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584806039 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605556733 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017294228 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607230128 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.384412766 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.283586897 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356586317 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608438903 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189005108 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557846161 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970280858 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062914211 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609969488 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432283715 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559211117 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.364874397 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595857608 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.369144791 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36271879 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360317426 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358600369 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.356696996 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607955498 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971177388 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613445791 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.364408797 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.370407094 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392869669 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.560253741 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585636104 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072247343 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581826126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615224728 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367510539 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358307655 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970331802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615938917 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365001635 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.364874736 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57162066 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364657809 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39757836 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.246185921 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.358965415 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885935463 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.574641636 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380759274 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359775053 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069223508 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974185377 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.363189541 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853821537 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367119479 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361778527 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642728059 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.369354692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361297706 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64679263 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.367326769 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362358795 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569950438 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.967629674 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108981092 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.383230778 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390825462 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.365200956 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363868698 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422757786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362033527 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364351044 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.758195656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363753223 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363859922 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376087914 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.363205417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368304487 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.368010137 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363518592 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.371360075 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.33366798 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.362654891 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370358689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491076318 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901795141 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365854716 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.977838266 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.699485581 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611220647 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373285286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.338185767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.368994836 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363569852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363934345 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364179904 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364609667 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909573464 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.364835167 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.621110693 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376464416 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.576598149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575118512 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380293915 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568404492 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369501668 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391182515 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.334761169 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364703237 seconds)
  done (took 968.049564037 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362501527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.382075195 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.378351596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.420959113 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369332072 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3646165 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.367764176 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418503104 seconds)
  done (took 20.303865418 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.366766704 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.369010617 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.364805005 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.369534089 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.36000231 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.840651503 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.366869257 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.366976411 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.379112406 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.366904732 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.368103735 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.980197497 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.369690706 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.36515636 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.374092657 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.372292594 seconds)
  done (took 32.220940402 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.059164614 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.37095025 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.863503931 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.383857508 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.382594151 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.372868437 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.491393374 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.368767952 seconds)
  done (took 25.534449101 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370903739 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.371380149 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.37128113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.371821908 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.371822004 seconds)
  done (took 8.099643168 seconds)
done (took 1207.454594211 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.374048987 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.374594591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.374316008 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.373414239 seconds)
  done (took 6.737604744 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.338074712 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.337625369 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.338322699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.352953759 seconds)
  done (took 9.608508251 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025152835 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.879926472 seconds)
  done (took 5.148054349 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.886671992 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.875221218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.876168291 seconds)
  done (took 6.881078294 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.649934029 seconds)
  done (took 2.892888208 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.321925835 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.362338801 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.363712147 seconds)
  done (took 8.291189265 seconds)
done (took 40.800955104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.35922885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.12613054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.515919024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359892483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535278243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.515899036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.611220404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.369484824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.35929271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.374724015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360447613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.535789509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.597985805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.121514904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.598118401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.121816442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519837514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361554423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36603404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.610436334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.372034671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.366712045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.372757056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.520559103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.505873378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365381879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.124113578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364920041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367977686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505911856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.36126543 seconds)
  done (took 82.153826536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360240398 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.36294923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.368870254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361688821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.376933092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368896542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364331189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361179253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361057151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.374323351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374460712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.362521273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.364637885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372145835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.364868326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.361337665 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.381937645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.362168647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.362792213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376554252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.362821968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360776046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.36788831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361077625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.361690113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.375222888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361298647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377182495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.362059164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362011941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.389944263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.362156964 seconds)
  done (took 76.993447719 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.362333186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.367359391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.367727495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.367586694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.367838102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.366818383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.368772723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39489161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369945967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.373022087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368206131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365200191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362901726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.36454255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366933651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.363478321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.368831453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.368789778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368786027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.368812669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.371421714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.380263568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368730958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.368097572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.370245683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.377014976 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365056748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.365108693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.368431205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37056307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378097676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.36948597 seconds)
  done (took 77.072839877 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.60535663 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.380340149 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.383062249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374915568 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.383137501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.379311449 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.375392577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611719899 seconds)
  done (took 14.740637036 seconds)
done (took 252.204410242 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.374295418 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.847037716 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.409228291 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.375467022 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.392288507 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.404255265 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.571691627 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.406491334 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.565687779 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.379163541 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394479266 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.381064562 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.15158663 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.512816124 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.168938831 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.288371749 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.229344567 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.369097176 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.912379766 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.595276183 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.407412912 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374073195 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.165172398 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.241885951 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.351940124 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.435907949 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440604931 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.527921562 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.493692279 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.437410288 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.847272357 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.378110723 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.398133518 seconds)
  done (took 63.478082689 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.37349797 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.385541977 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.383466771 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.383994007 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.383478694 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.384101274 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.37412467 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.386454615 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.383535965 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.383455516 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.385768153 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.383033793 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.384190546 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.38570748 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.386273152 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.35796779 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.375408698 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.383994937 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.374874878 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.358828022 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.386029947 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.386376388 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.384865834 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.385417525 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.385225203 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.38652209 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.384642317 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.387013695 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.386499488 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.386474769 seconds)
  done (took 42.708665079 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.386027465 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.945169271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.098137832 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385713304 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.377301055 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.382236826 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.656260304 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.39035872 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380338033 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380758781 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.841827174 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.389686439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41082173 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1062054 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380640044 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.387472168 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.38671932 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.378256745 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.954037936 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388244567 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.654203253 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.387294251 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.654773202 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.38950777 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.381734854 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.379843911 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.384520979 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.157680511 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.398174601 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.842269263 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.12321975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.653784049 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.093083882 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.156471923 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.119403839 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.394510102 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.389380253 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.847871689 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.38181235 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.380324222 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.654030546 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.380058147 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.11374121 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.051164906 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396778063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.388592981 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.186814818 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.846271765 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.614309161 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.385943649 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.150090401 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.383873378 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.391750208 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.381690081 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613753327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383116374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.380926309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.214679309 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385393922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.656711256 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.39029474 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379839888 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.952144986 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.381220457 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.950178276 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.387635732 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.38905405 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382433219 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.114813377 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384839433 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.071309469 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398819943 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.390634873 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.847244158 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.95024413 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.235185483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.383681254 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.957412569 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.122813328 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.670358254 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385831316 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.133426643 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.675065375 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386308118 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.393397187 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.395533907 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.392947184 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.45710437 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.655535035 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.000669108 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.069360644 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.222041593 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.659732866 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.390338239 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.383238981 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219391367 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39279566 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.393148634 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.109359815 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.069088676 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.401700877 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.391881957 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.062261507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.402429745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.660513224 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393081036 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157801088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.385703957 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.457353713 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.395479485 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.389852328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388349238 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.661443837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391091732 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.393255357 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.057466108 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.876854811 seconds)
  done (took 192.782776732 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.379207002 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.379486017 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.378788234 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.379941097 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.376860026 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.387646365 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.379736763 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.379434233 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.383848412 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.377628428 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.379580738 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.388465258 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.385465484 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.378474037 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.390399652 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.379513612 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.378841525 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.394113153 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.381345493 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.379899933 seconds)
  done (took 44.898732591 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397316253 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.923369104 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.893522985 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.401929871 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.395963384 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388686466 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442184781 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.398156465 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.396410965 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.672138392 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.551933508 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.402854571 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.395981102 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.396755379 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.896848486 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.369289413 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67230641 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.923655007 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.397904713 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.923481296 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.369178459 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.396388323 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.386649594 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923384987 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.684408576 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.661512092 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.442388797 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.928191851 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397640953 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.397055025 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923519427 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.398862226 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.388746618 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.913690163 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.398947967 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.409538368 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.39654077 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.444157977 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.448817957 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.679662042 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.930687049 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.670519278 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412866603 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.559548555 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.399751306 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.371262468 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938113739 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398425559 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.370573302 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.400441681 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.403417871 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.909922612 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.395270681 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.908627176 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.403824732 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.399247636 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927080827 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.910100858 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.903362807 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.558712329 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.394766317 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.663278029 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.403426517 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.943348496 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404162766 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.399647185 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.398427817 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.554850808 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.934626998 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.668209094 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.684705346 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.682334044 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.402234469 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.456292443 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.403421835 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.681535154 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.459573721 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.817131782 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.681493336 seconds)
  done (took 125.698204161 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.651855822 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.503818784 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.756711198 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.953452099 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.879193871 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525069096 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.502174339 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.637303167 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.400376422 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50345982 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.029021712 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.483706525 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.131306205 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.452568072 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.503535023 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.523748076 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.778888784 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.34601107 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.021668692 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.991944955 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.405502424 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.489107136 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.904129761 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.595668284 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.385824815 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.936454621 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.305443847 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.894584151 seconds)
  done (took 52.757168505 seconds)
done (took 523.572042551 seconds)
SAVING RESULT...
DONE!
