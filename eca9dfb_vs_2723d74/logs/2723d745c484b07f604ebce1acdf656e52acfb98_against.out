cset: moving following pidspec: 27505
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.556681611 seconds)
loading group "string"... done (took 0.521950196 seconds)
loading group "linalg"... done (took 9.583454981 seconds)
loading group "parallel"... done (took 0.173027138 seconds)
loading group "find"... done (took 4.524678323 seconds)
loading group "tuple"... done (took 2.096907103 seconds)
loading group "dates"... done (took 1.41427914 seconds)
loading group "micro"... done (took 0.193853701 seconds)
loading group "io"... done (took 0.514615893 seconds)
loading group "scalar"... done (took 57.847547023 seconds)
loading group "sparse"... done (took 14.010780885 seconds)
loading group "broadcast"... done (took 1.727497171 seconds)
loading group "union"... done (took 10.536423754 seconds)
loading group "simd"... done (took 3.62483583 seconds)
loading group "random"... done (took 13.366930173 seconds)
loading group "problem"... done (took 2.234664592 seconds)
loading group "array"... done (took 24.28693814 seconds)
loading group "misc"... done (took 1.150869842 seconds)
loading group "sort"... done (took 3.807955015 seconds)
loading group "collection"... done (took 22.188620882 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.691606476 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.207508178 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.197518831 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.20435025 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275362327 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168358583 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156886633 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.168078055 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.626029067 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209172858 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135774205 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413108327 seconds)
done (took 6.220924183 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261833963 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240413824 seconds)
    (2/2) benchmarking "String"...
    done (took 0.185011097 seconds)
  done (took 1.138194905 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076366186 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156023019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109179992 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093995071 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095887538 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109163253 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093282332 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111007023 seconds)
  done (took 1.485669759 seconds)
done (took 3.679502166 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.512722733 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.888746923 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.540873902 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180089843 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31452578 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30705802 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263482499 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220185091 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091324243 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08537939 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176062006 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.428512693 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.385168799 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.964044996 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068431017 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093400748 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152484153 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.790512754 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078436759 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109174025 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531275287 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212647108 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114520027 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105843517 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184896643 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133395688 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142198482 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101954667 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672102149 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131961945 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216439827 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083642481 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139271549 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165431599 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21285525 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109828959 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677738162 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200206187 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09662772 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101744124 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68477297 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115092099 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203378504 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105380277 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068308923 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.165775219 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101311332 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093190215 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094544906 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085451993 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162492702 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.442015427 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106134679 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.190540632 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09262198 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694925879 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096117229 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27379984 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12444122 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09217207 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091569597 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087276095 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.1583606 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096174119 seconds)
  done (took 20.161119249 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.167594 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.185529366 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077237256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156935372 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119854618 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097281769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083698825 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077584933 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125477869 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18160417 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138368696 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172597099 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094604088 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090333565 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169467404 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230165282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125556233 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103984686 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088454028 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106706805 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121599691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09546345 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107836484 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090758314 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171966151 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203280082 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107630421 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122918493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088302567 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094091419 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142173695 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143246069 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092032643 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087928862 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169180244 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122534517 seconds)
  done (took 5.291467788 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242045052 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10341543 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249357923 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19704804 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152933258 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.1835743 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174398457 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295679695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.223777802 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161686481 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127544134 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095777403 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078194848 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079319853 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095143597 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114175829 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.326172377 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189734546 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149162614 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18695769 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113439142 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081454842 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084054704 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103431076 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095132601 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.119749525 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.329386476 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225347622 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093531102 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.069942714 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082271527 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12105713 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113735696 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212172552 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123032363 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120764779 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112356548 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084908023 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221510974 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117692735 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078749238 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11285902 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131759293 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113069096 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109893372 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124736618 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221690735 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085909714 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108864821 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.060914938 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194053802 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.143755935 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102447749 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292949658 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109031947 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09899725 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.177529542 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108946986 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.803012546 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111891524 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080046998 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096379962 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095332125 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07861271 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.47663747 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107593528 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.124283266 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083501752 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155255461 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097315882 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120426266 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08534351 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083486237 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128432452 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085616244 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096198252 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086570674 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079235033 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106088713 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116009046 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083491208 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096406623 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146441245 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09837802 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123707851 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108953511 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10531729 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0856547 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126659656 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081466094 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089192128 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185418831 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096312157 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102287704 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112627638 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11524331 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142368654 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089091801 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257253577 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097635734 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121983326 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098955647 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113314305 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114232505 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080567174 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083754927 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095137856 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08203142 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146868746 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101238219 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08424721 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087973322 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097530005 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092691313 seconds)
  done (took 28.322126629 seconds)
done (took 54.489195178 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.420103008 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081498138 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080343863 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102342215 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081318469 seconds)
  done (took 1.563217003 seconds)
done (took 2.33908016 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310145523 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199117322 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086574193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188056746 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086041592 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196744983 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181363642 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101407974 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207496223 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085485692 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192062358 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084996022 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107200157 seconds)
  done (took 2.821468776 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103793021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106530003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100795632 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120867753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085454168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10445885 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120031331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107110454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100962891 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113357098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086297691 seconds)
  done (took 1.922887459 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099875463 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102949786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090899794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11793851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086349242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098662171 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117559505 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10629458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097896327 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113702867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086135776 seconds)
  done (took 1.894115598 seconds)
done (took 7.4065823 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215646526 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.104254757 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164280112 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.241286387 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373436812 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.274382453 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.614916738 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202180036 seconds)
  done (took 16.094302691 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.204886375 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112000261 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090891056 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090269401 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114436455 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094866339 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090312384 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11083491 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091242799 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096382398 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095134422 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112108905 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089869615 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093142087 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111480098 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091990729 seconds)
  done (took 2.524913889 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142843148 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123101482 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117263511 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099239359 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093436656 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116597965 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101135883 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096632122 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112782767 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094663096 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101318278 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11404346 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096298079 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092753792 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114745396 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120678849 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092734353 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1155148 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115348093 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096800287 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115441412 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096571428 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11479181 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100037383 seconds)
  done (took 3.442648614 seconds)
done (took 22.838853279 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144317605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102611361 seconds)
  done (took 1.025156996 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162303914 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182973122 seconds)
  done (took 1.127377561 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111615365 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08936474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13653573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102738763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090567109 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108293701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115826039 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.090562746 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107631845 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091456103 seconds)
  done (took 1.832627518 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093742256 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094538424 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123459204 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167500344 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11798342 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09310194 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093990998 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11117481 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095852434 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08997503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11376459 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108429185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094979215 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127495739 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094624311 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095128583 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11649433 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094560405 seconds)
  done (took 2.714555995 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090741738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092552895 seconds)
  done (took 0.972677752 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093642969 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091622086 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091930285 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109972266 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089965609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09060784 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107434508 seconds)
  done (took 1.464597891 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.532839152 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236376849 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372794466 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073007126 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123430245 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.448650017 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104230637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071577455 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092998467 seconds)
  done (took 2.879615342 seconds)
done (took 12.803676557 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091031391 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241194935 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636067323 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113294372 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090962692 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161576162 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314128655 seconds)
done (took 2.442147561 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35053592 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164579868 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085683845 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091915067 seconds)
  done (took 1.482951585 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081617406 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099696863 seconds)
  done (took 0.978213836 seconds)
done (took 3.262175199 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089259563 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088868689 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088023243 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106476196 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088574376 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089070504 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087697647 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.124456949 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087944181 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087051588 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.109153318 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.088008743 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088678961 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1072372 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088366467 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087994461 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088654473 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108432121 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088358097 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088392778 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106676261 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089481611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088641476 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088252924 seconds)
  done (took 3.102321004 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111781139 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09171458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111088859 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094084677 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093966945 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110627036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09420308 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090598074 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11119922 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091137388 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092833887 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092228348 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109487881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093994023 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090956789 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112473743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094721784 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08976463 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108752803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093986384 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093280026 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110696999 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095127916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093445966 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111521582 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093931816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090334231 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110269228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094623641 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092510924 seconds)
  done (took 3.763813404 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096155141 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086847495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088752031 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115558207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08598445 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089469758 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104862209 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090462428 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089906265 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087871859 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110129131 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089366311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088162104 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107268391 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09119114 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091734972 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095644495 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108104745 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088804306 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090034481 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109495373 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089832995 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088663889 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088648213 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106660496 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085967601 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089497519 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10778063 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091180181 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088642163 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091043209 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110512255 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088961752 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098827572 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110046186 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090050275 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094647659 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104680662 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090051865 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087619158 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086262344 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107026814 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090210419 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095768804 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107426873 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090226058 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089759293 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088973861 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108128415 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092187669 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086446115 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106081366 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09252014 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090787273 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091671321 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104957623 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091048293 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086418601 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107567255 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090243403 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086200999 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08535901 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112832945 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090746349 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103561296 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114274325 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089415892 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091066752 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109867153 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097259173 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091688631 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117255982 seconds)
  done (took 7.703966565 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113406206 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098030354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109680145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091731157 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090014679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08873528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114136777 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089919631 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09058985 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114920109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09288214 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089435959 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108340191 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091568688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092124256 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091546256 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114528324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090563211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090085068 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109406544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091541024 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094346638 seconds)
  done (took 2.965524601 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237188464 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096732095 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139111514 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122335732 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108279308 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120660568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095853327 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094681283 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113593502 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100489107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099367775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112990147 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108091998 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09833756 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119603041 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101337315 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11232105 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101046598 seconds)
  done (took 2.894577496 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10513261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092337168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154236897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092715077 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092080481 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111737568 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098167762 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11039623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113070061 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093024152 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099446845 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110536016 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094023128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092303823 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091305548 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110601072 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093800712 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092132663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117943897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097911376 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096385541 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118540058 seconds)
  done (took 3.091722477 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106362061 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092679231 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128597428 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09666968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091042394 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092077155 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117510243 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092312752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097621535 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110837954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09351897 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091159821 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126581768 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092297563 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097348287 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112188639 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0927159 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092606867 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110239244 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092895528 seconds)
  done (took 2.838669892 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.193243642 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126960339 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108499824 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115351561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128273958 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108677287 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134450128 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108355538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108401449 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136846114 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111183157 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106465163 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13399455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112816241 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12573714 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117556993 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11580267 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134944502 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108419358 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127521521 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120864602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107892517 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135006999 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109661453 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106646873 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127186349 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108733076 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130915149 seconds)
  done (took 4.224546088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091325163 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090200287 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090146432 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110489742 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090371473 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090041806 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089842533 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109996399 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091313582 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089764661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109658744 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091597827 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089536766 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090643345 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109610412 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091194835 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089931947 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109574067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091577071 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090492794 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090798267 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109806496 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091032443 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090451128 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090086497 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110122452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091544741 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090473398 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109343865 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091813571 seconds)
  done (took 3.686782877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104154858 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101246255 seconds)
  done (took 1.022919095 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099160456 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104966334 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090534015 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11157757 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098217668 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090294038 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118190455 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09925964 seconds)
  done (took 1.631915481 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16637199 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.189778278 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096293242 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121711198 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169006672 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182289402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127529583 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11674087 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091148627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083889581 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185541124 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083494338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111475311 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089706436 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091722263 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119694104 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093421281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101253919 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1188854 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09563142 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097059381 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114643637 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095355085 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102370566 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104853548 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095346003 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094839932 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122459694 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090739956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092492048 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108763926 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092886994 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097220229 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095212074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112910141 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168598551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120075198 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089412978 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091337661 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118151471 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126007292 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091843744 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114097928 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092606597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095399578 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.11688979 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097488432 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091981505 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104021195 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088753969 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093240367 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085893117 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111695707 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093209573 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09184203 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118908006 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094348439 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087978382 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107953068 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088823039 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090645951 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108501689 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096023994 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0938433 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113447415 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093900769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090894705 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111534681 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095678863 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09262507 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109924999 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107844081 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093017309 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115470385 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098599024 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093753241 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088882825 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11689376 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091316495 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092033139 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116482717 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120697633 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092950656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108847622 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088619318 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097470005 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113316219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095643743 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08536898 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120458596 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094845805 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09392955 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104740635 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093471105 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088005057 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094350681 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105737337 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092949705 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09190034 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115839924 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099295104 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091240263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113548923 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098224571 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097867721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111010564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157091016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108671124 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089708335 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09531605 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096909214 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107321928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092675313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090794381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109948902 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088685262 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097305133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111471016 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095607117 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096305462 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112789983 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095693936 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094217886 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091767908 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108471578 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096705974 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101021899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114238066 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094196231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094072745 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113383652 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093013739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095694514 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108199697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098004927 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090528771 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09214902 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113749435 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097965302 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092940602 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10873802 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092044357 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094060129 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111385051 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095554796 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093906426 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107687615 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08565263 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093630259 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107697798 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094929593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101113095 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107619132 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09664654 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089766314 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10120817 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109817145 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098573703 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095674124 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118503363 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098568413 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084277139 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109528635 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09584802 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093565623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10891267 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094118739 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092908696 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097559952 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106742045 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096496402 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085613641 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10979973 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099366942 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093594154 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114973015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091445717 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131106455 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125461141 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098533559 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09233387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111469355 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097756273 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092414566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09736338 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119337384 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097877257 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089223605 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111030112 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098436808 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088001552 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116463422 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09219807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094876561 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105015049 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095665106 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085548474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096258408 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115892836 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097225471 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097532676 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115760591 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091965861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10196917 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109385875 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097570729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085855665 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116348857 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104526411 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099139793 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119491327 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09684082 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090846241 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094238304 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122301247 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095868305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092621414 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.115356724 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087901161 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087618154 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.120022068 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097572369 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089507138 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.102433032 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118066291 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095421696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091264445 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.107516672 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099375105 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096819359 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.110434258 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09512187 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089578739 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112809494 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100208753 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086259445 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109569879 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096560247 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097552042 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.113134391 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094254978 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096046978 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098777788 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.117722116 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095815294 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091571399 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122263468 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092933514 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093981339 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108901312 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097170505 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088289443 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095651366 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115331293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091293963 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088977978 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117654318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100067483 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098379022 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113836609 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09864716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099950757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.129406571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092082484 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098796179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108256317 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088622559 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089075189 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106362415 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097553317 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089650959 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09798888 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112602802 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092309917 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097918539 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116514802 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091323357 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098773669 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124103898 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088539802 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086204537 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112263481 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095187047 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090141011 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109610131 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095832517 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094813605 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118471928 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096495356 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090915267 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094103487 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120729083 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090091766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099256225 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119940425 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100579371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089266202 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117418618 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0923499 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097013987 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107244413 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093584332 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092313768 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112059194 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092760654 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093131141 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109934916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088856609 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090311389 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099502085 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113021213 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098680508 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09285192 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113575579 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091437919 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089721939 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.120517376 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094356668 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099540773 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116666769 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088950708 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087974236 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09825626 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115488817 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099687532 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090745648 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.117854376 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101374427 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098133546 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115491092 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104521445 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102909722 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09903095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12039836 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087581277 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091718943 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119879577 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095135469 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096273537 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.116430392 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089090358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09728885 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.121158365 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096902378 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092371642 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107196324 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095984597 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.1007977 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097719329 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.119064528 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096696605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095402209 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.110232411 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098000241 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100752103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114222407 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103629329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094553988 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098767006 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.11258087 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099856684 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094723282 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.109044697 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08816667 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091131595 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.121258447 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088734916 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099540897 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097910128 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112503092 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093201733 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097784969 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111977631 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097661546 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098631735 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.1119972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105047474 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094739927 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112930399 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099332928 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100296803 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088183661 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115201269 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092721453 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099845222 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114156998 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101611676 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093790441 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120933262 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097191983 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097949041 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119006716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100240912 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088337395 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099530653 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118956436 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09666882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090405088 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113354354 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089154727 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09303351 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.121420904 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092183151 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101497305 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.121802572 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094148967 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092141773 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119189303 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094983622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100463706 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090556273 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118454666 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088057703 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095593261 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.11441444 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100827171 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090362487 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109874796 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100467417 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098650295 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118655624 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097995483 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100394476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10918292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09001711 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09759127 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091638058 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126479891 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098242239 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092449381 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114580658 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098189173 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096035134 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121151197 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090979548 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091137233 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114432981 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097059057 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092409183 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088769135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118724115 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09431441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096083315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114390865 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089576558 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092595005 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123483174 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093685465 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089889481 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111979864 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102802509 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092810178 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111315938 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090138185 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099176096 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116273217 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103440541 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0915663 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094577761 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.114178596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097102035 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100129524 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.113590132 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094965087 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091782551 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120680529 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100465056 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087838701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111285741 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104376561 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099837473 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115735112 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098317044 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092987526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100619087 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123330459 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098730434 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088049503 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110080082 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093258954 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089396906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116628754 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101052185 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093815994 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.11292553 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101688285 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098596773 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097036442 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119049674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090055356 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101402765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113352406 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09816243 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089262983 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109606231 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099337218 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100250598 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093293433 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116874481 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09734001 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09712558 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110865521 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093642609 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097813303 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119145174 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10105221 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093622812 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113174643 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10257049 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105204728 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095172952 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116946178 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102613844 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101027541 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117372675 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094428744 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098607984 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122321598 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099283731 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101485093 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113404005 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095214325 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100501943 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121476639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105192314 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093052489 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109100043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100614265 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092852358 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089077155 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120302242 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103393685 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100765643 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117751285 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09281987 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103171738 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121974363 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096711213 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092243075 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113839841 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100066039 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092166438 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.11936154 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093629137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101681524 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.120744004 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102403319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104952692 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089062837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122711992 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09921967 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102521491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119406537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.0902055 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090088139 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.118417124 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103352327 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101246357 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097606415 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120919855 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099564091 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096554224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116480119 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093553791 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101424049 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.12066295 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097969217 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09706664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114262912 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099527468 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096789355 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101287114 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124467025 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096871149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105639869 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12388078 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09581263 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094098163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117833329 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099426652 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095073235 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120859894 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094713122 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089925486 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100664993 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.125067644 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095519462 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102536424 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124000855 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0958762 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096788358 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124465054 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101737274 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096324708 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116857781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100319996 seconds)
  done (took 61.944537547 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144475133 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103173131 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118566378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098894586 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115848375 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120983706 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098355147 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099846559 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12000619 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107444766 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097145779 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117844038 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11386018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116751854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13478252 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107067579 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119243834 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101342679 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09787456 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098281808 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133526906 seconds)
  done (took 3.237183777 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114509826 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110901145 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129280819 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112127022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103769409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130323056 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108000703 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128224219 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111846409 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104943405 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132853732 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108620879 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126028967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107412887 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105040611 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12710379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111222393 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104017352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130743922 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109202252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105844734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130251104 seconds)
  done (took 3.421963064 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129514372 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10068768 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095253372 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118811593 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101968211 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09754925 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122923716 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100255598 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107718127 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093421106 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.11150111 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09465688 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095777941 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118512145 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092905026 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097735977 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127508342 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103021444 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102681734 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097545034 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110922942 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098257472 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098890783 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109810002 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104818459 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102157377 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098581777 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123906439 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089805082 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100810108 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119118908 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093526271 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089704219 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088272322 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111356408 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100992736 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100060541 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119807919 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100217773 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089163259 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097979517 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123968838 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090757409 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09772664 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120227181 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094823665 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101101795 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098065323 seconds)
  done (took 5.858639527 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128988127 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.412593885 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102428992 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136018063 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136268267 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108511875 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100862318 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137304122 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09948356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123947843 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115301133 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11227217 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127300418 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104695148 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10112017 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12586887 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104849323 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099630725 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127216368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101623129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106316828 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125031485 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11007089 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132077835 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105517678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102381482 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12213677 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105175007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111562024 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126798555 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104988841 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104938595 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133074857 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102884586 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100571628 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124711373 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113478416 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102274541 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125214417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100164728 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102106982 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127127407 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104136826 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133496553 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104303888 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103964158 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121466744 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10044443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110725894 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122340813 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109554282 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111005282 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124765486 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103512492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104602752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13363642 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10313228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099835817 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125611649 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111296786 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099127421 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126251643 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112502866 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101530106 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128909794 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111517846 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12359697 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105466112 seconds)
  done (took 9.047030369 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131910647 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106321313 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134721308 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113916507 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105430939 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128298612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106603545 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105195642 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129002523 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110547896 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126596346 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224128339 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12563284 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111151272 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105300455 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129261696 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106267685 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105745171 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130263024 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106440073 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105026063 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135456409 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106000592 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135311318 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115967488 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102017724 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126967646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106692289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113397198 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128120499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115112206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126658344 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107021922 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11281122 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142500022 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105772306 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099925012 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127955064 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106769936 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105953615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125192518 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114491955 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127684065 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10501552 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106214721 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126832584 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115963769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116533681 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132865119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111266693 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106091292 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137667544 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106099856 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127315566 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114718896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120822671 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135761162 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114426843 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127497095 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116412863 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114297751 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143310756 seconds)
  done (took 8.299735449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100351439 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100493646 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098357131 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121556272 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101355796 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10034796 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099061062 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122076556 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100686709 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099856977 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120115585 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10062317 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099450422 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099680595 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122716171 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1001744 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098630658 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120787794 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100896842 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098983807 seconds)
  done (took 2.990926098 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109420635 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117273086 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123384667 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109043262 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101602184 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127805746 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102879658 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102927398 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10159641 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125290828 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108494648 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109010256 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124090161 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1078654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12953418 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109111713 seconds)
  done (took 2.699206766 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12020553 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116365322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211158441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103542602 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125503594 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110376766 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10134012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126522167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101401369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107882145 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10458763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.129484945 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10236034 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101840486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124702614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103420223 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099660058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127220665 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104072776 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.215426233 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105313852 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103294328 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125304735 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106444665 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10303506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129665084 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108325429 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102460729 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125309929 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104463725 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103333759 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130943493 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103338703 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105885859 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102731026 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.1260098 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103021668 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103021072 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12639577 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103379851 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103143577 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124717277 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103413262 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103966934 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100486949 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.127064799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100598316 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106183615 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125090047 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.1048821 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102140596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129724579 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106962305 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110228931 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131886926 seconds)
  done (took 7.231588247 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113467372 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103878942 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1349734 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10226342 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103648261 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103049739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127069534 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104557725 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103824148 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123651581 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104727654 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10461751 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126191461 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104568489 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104876539 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103684278 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123091528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104125139 seconds)
  done (took 2.890421015 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108232768 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102951489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105656687 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125765949 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102900789 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101673709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12296386 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101091959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101472891 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100826441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12578473 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103965769 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10036259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125098194 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102793382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101795841 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123422713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102492585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102792215 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099751198 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12633163 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102085679 seconds)
  done (took 3.288138063 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113635028 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21307141 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109395206 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221027942 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098967033 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121326467 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11035433 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09947076 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138153662 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100476426 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098330341 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120203769 seconds)
  done (took 2.443029655 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12979548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138929952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127152325 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104461603 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11111858 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129607085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108690485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106937106 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137592446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118864034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12893803 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116416126 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114848682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136525239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111853615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133231157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107935031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107416156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102736258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14497185 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107502663 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13804393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108890454 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106711486 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13039343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115386052 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137204949 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120124495 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107014019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139046033 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112714237 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106650442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137867836 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118763425 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12547452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116830494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106369999 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144472121 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111639592 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13649078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104766701 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111800445 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136875604 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114072728 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114543204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129819468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11237238 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106472383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129707821 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127937658 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134911904 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116265195 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132661896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116733007 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11518733 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148975057 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117523642 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13832011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113634936 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140540811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116467382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111735551 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139088332 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119317269 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135399016 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117848069 seconds)
  done (took 8.947306769 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141870211 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103746681 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129960829 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120364178 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114071192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132116241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107206661 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129287883 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109501736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104202219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176133532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108192952 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114729958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138948271 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10844705 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129218027 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111149706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115800392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126284761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128872088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107141854 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137705532 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11527206 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138209044 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119537915 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13423682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109985309 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107189939 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129178629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109107296 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113125845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130076904 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116915515 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103557038 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137748806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108600123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107349918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136185107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108577286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112822271 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139009697 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122376432 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130379546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10827024 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117608237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131719845 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107507372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106514058 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130812171 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105492424 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138860405 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120300683 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118666543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138881779 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10743844 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130447222 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11095249 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107966157 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129815758 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113719524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11524421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131372994 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127675627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130119924 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109253613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116039165 seconds)
  done (took 8.886802597 seconds)
done (took 168.910563002 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173643798 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215212605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196363338 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157485458 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094072261 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152310701 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127913085 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.19803073 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095805303 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09435774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094345382 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121260327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162254756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09463458 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118113136 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097600918 seconds)
  done (took 3.093179405 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182555871 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333868303 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109427258 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121723894 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101678963 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09864829 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12195854 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101950306 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099619357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129681381 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100470784 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095784487 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12913976 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097442331 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099177481 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121353954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107962706 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099182069 seconds)
  done (took 3.163993916 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119804796 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159571474 seconds)
  done (took 1.192768939 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129664606 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211775439 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2845333 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170375172 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120166188 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14097331 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15015197 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134448283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190008194 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133267862 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112542485 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097001651 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147076646 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105620766 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11497238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121658458 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126720181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113659398 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136761165 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101897507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144409963 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105218143 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10524685 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13579468 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180625468 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132669343 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104130841 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101702844 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122682956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114580736 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107008562 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140037488 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112855573 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178470591 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102774261 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175098289 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105657361 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122171998 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115476298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098803296 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125925992 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10386923 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111826874 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120302126 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103020472 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106586222 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126380174 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102862865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105758228 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131165592 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107056764 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128581569 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152310435 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130249563 seconds)
  done (took 7.916807586 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868934256 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140590705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099060828 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.014385576 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145053707 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11300502 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.836230545 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148587819 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25130209 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.888896568 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1156355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107023061 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257918163 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255354918 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266738473 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377594161 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.70020579 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134791223 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129795322 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162005041 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107886729 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144634289 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121496126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521352613 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100645694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099598085 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130420495 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108385576 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177693499 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100342269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107392114 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192550082 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29074422 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209931456 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099346921 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122410333 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099969933 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183541248 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270921432 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218761886 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172155151 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120507529 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100177054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10704773 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142154539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097262289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178161933 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186831393 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16492423 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126944519 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109490579 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109145035 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130595011 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174292865 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09942758 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354930876 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358094942 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121508399 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110882473 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111793973 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265114276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124382226 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23513007 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127367174 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213152473 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121828398 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83976812 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159905594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122895764 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105404387 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105847669 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129369731 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10633937 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189188674 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479139751 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133736941 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106164784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09907365 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233889629 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122251464 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101346039 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17797068 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101805737 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107832554 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133796027 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110123655 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186649693 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267309717 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111291149 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107895746 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127523456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114613351 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100904162 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231455073 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22498503 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17452706 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22667059 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108132589 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178009314 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18086466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106193637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187993297 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10780293 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111802456 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130584647 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222579388 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153879624 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102835796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104670653 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130476723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1350998 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103619826 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132776554 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163243197 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556707754 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183171704 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09646202 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12846298 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109001432 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180061518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106793368 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261438623 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132517514 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16135272 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130077538 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099438752 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109170428 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178120149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10789929 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133007567 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107027728 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132095326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256976684 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217775964 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132371233 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251407644 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175246038 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129333489 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164687303 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131959299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183770409 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111718785 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106111753 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124506879 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828558345 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115866212 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107776189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129210976 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184197016 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123599979 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103083596 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101656423 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121112543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811771772 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10775828 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098099786 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101958102 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129469947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10889632 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131127049 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106977063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176849813 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2420552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109502735 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129311845 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101853479 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175804563 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102258987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10066009 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122645343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102405964 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109733187 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12770214 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104118767 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185939355 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152260755 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226174475 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.653125433 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125112224 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101000087 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237828661 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122656122 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32434524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10954747 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232055628 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181208072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098369937 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355435267 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181787533 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207678924 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104326751 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190243847 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099259279 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108555088 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177813482 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123258485 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109210315 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172867939 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113564691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110038271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.296559374 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102457483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248865099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098712002 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18740167 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102139358 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105400765 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324095398 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124892022 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115884064 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177531807 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105314953 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124152585 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.651521519 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125698404 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114121445 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12814635 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23160121 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158069847 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133043633 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109254175 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132973882 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153758082 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227743955 seconds)
  done (took 47.50556505 seconds)
done (took 63.782749691 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267534458 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176611706 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376058012 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152326236 seconds)
  done (took 1.973189963 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.268104191 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.168011403 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253619848 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098333547 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.259484602 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097739678 seconds)
  done (took 2.081824405 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178079463 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170363744 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145800544 seconds)
  done (took 1.43259174 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20077051 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216367826 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330405775 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233112434 seconds)
  done (took 2.002992731 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.290646146 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116657463 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124578113 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237233406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252999527 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206576213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123193609 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174403939 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129343914 seconds)
  done (took 2.635189535 seconds)
done (took 11.059141011 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.154208925 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.28066217 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.23799861 seconds)
    (4/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.24540571 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.141845039 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.197170683 seconds)
    (7/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.311052182 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.427744858 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114331876 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.390345137 seconds)
    (11/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.097210967 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.402387021 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.211711445 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102580195 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.292604696 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120271244 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.402765402 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.223142578 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.24023055 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.24403095 seconds)
    (21/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109747052 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128508319 seconds)
    (23/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.196920024 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.395366194 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106890507 seconds)
    (26/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.310132314 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174015089 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.253635865 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.097733145 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129026642 seconds)
    (31/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.232997792 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115715192 seconds)
    (33/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.162550438 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.105599502 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111876233 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.264677203 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11696461 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.304187916 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081137678 seconds)
    (40/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109661727 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134302396 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128520832 seconds)
    (43/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.174184047 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.221987729 seconds)
    (45/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172371148 seconds)
    (46/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.130544957 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104835982 seconds)
    (48/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.136104683 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135115258 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.130083911 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176495269 seconds)
    (52/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.132670722 seconds)
    (53/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.202464507 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103476856 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.186334499 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.16432571 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103419903 seconds)
    (58/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.177998063 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128473477 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086708877 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084670946 seconds)
    (62/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07945422 seconds)
    (63/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.170629019 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131403734 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113674556 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.130033359 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112347112 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184485388 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077810619 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.198984954 seconds)
    (71/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176151978 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083921564 seconds)
    (73/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205164647 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100040491 seconds)
    (75/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.145233603 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147699921 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106494103 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123215453 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128919547 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101484526 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111033701 seconds)
    (82/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131442335 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104232417 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.130381501 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175221687 seconds)
    (86/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111497098 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106647956 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126145178 seconds)
    (89/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087803063 seconds)
    (90/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112428924 seconds)
    (91/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079118392 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124128941 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107957764 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110355396 seconds)
    (95/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109636354 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.160576561 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116267058 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101750334 seconds)
    (99/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.103261617 seconds)
    (100/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.176627699 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.219379295 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127657215 seconds)
    (103/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086519577 seconds)
    (104/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085259157 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085615409 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204220202 seconds)
    (107/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079604649 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078484449 seconds)
    (109/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081192003 seconds)
    (110/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.168790837 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082792794 seconds)
    (112/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111561262 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.162538018 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079228813 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155271716 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.132316083 seconds)
    (117/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.107907684 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110163552 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10663595 seconds)
    (120/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112535983 seconds)
    (121/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.106433611 seconds)
    (122/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079307236 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082689361 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102230404 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.105452667 seconds)
    (126/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.200148012 seconds)
    (127/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109291271 seconds)
    (128/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157392464 seconds)
    (129/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079419205 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082131049 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103476762 seconds)
    (132/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.105095273 seconds)
    (133/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087720296 seconds)
    (134/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176709024 seconds)
    (135/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176607074 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124277386 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122081304 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.127211569 seconds)
    (139/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110467732 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082970195 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080080918 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134575916 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105596941 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080454132 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100684289 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109500654 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103118584 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079220986 seconds)
    (149/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082085312 seconds)
    (150/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079382895 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.11765862 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129633982 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087258181 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080477897 seconds)
    (155/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.108494483 seconds)
    (156/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148370286 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086102761 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102991307 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.105610781 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10278802 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100967534 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07921576 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.126113952 seconds)
    (164/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080929468 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110056756 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100798614 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135476824 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080758052 seconds)
    (169/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083503401 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124528561 seconds)
    (171/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.106243381 seconds)
    (172/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112708906 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110298364 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087060811 seconds)
    (175/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128265234 seconds)
    (176/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088313479 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103754102 seconds)
    (178/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084945195 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.112114091 seconds)
    (180/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085951583 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083766188 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079527296 seconds)
    (183/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080288277 seconds)
    (184/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.110294361 seconds)
    (185/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083567682 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124312251 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110422732 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103833509 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105658561 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081219732 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080422348 seconds)
    (192/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086340089 seconds)
  done (took 27.322078183 seconds)
done (took 28.264898632 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225702926 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13022129 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111309543 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110402229 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232745344 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118575377 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153325089 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112173284 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121256726 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136612598 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103033076 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123933212 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135778623 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204461262 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139564127 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104541574 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102174227 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146954075 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12702301 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127770393 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23378201 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104399327 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146091739 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103962281 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234459348 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104858573 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110402258 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137901128 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125298385 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111529482 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137701105 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103855798 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128581374 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125581402 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126743829 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113114253 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102012777 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110229355 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112875492 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112793505 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.147172123 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113539932 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11130706 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.1276685 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113434257 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112135661 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102364563 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.14036855 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102284851 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111635028 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129051519 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128803391 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110652691 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125551272 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102697505 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.1031548 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147091337 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1036747 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123775137 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101921975 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128647506 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103983807 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112864995 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127173756 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111091866 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102246172 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136116199 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115492016 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110195823 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128415296 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10503465 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111286922 seconds)
done (took 10.085279861 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108317906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147603761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233043846 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236171071 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130493216 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144680016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11738467 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126168996 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141868013 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122485568 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13857196 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160060023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.237496982 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119043422 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119856612 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141653139 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115203779 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111387926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237692408 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126593052 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156498807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11918442 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155610705 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120295131 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106695039 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164156771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112094528 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113987762 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129663298 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117010278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127153233 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131204977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110644236 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124543693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148199235 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116521462 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118122386 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13891857 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107614996 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107172412 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139446668 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123011998 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10753512 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144340069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116266845 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12095544 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138399892 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120360722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108049264 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13909374 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109151482 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131273188 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143786527 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12476774 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118270971 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.14437466 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121064853 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120304202 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13494377 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12002036 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107068426 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131872842 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109347811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128123232 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135038937 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120517938 seconds)
  done (took 9.771224876 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127179529 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13608027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141194755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119266224 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111260938 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125795227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102026428 seconds)
  done (took 1.851587522 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102457598 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.241059995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215637825 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242695052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241118378 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.253470724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126495319 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102099667 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164084958 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113284626 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245028708 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.271445433 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11388736 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11802498 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.246803139 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127697757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.220863407 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.1292899 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117613487 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24906654 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119864474 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160953242 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117379196 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1039088 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239787627 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105297005 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.291269102 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146680887 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113965896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116804182 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116434271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209522307 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241310515 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117478951 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13601396 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217151415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241569779 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116405237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.256220739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133827041 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215431913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142712633 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11856669 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118246792 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144958124 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.20616601 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148199452 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118008276 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116513935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.249739419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139139759 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218037229 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141508247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117857759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114227001 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143822846 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125307406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11847387 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252615513 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120075022 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244822359 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.244453662 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.245268688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246038614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128431057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24504698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204021338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144444196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112437732 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118424414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248148622 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142572644 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116077035 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236780474 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121095729 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.249711342 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247171903 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116316536 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116808745 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133365636 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118036045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103032763 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.238465547 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116503013 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115497 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14869869 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11608446 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143955651 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110178856 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127143887 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143583508 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116316056 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122806005 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143349724 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120496448 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.251040964 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114515519 seconds)
  done (took 17.017621039 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105715945 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105381395 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109456866 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130445853 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105388972 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105979904 seconds)
  done (took 1.68033842 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140593603 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118420316 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152583704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119048452 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166377846 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250902112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258006008 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112860461 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.16366714 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129450734 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253136352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255671916 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253039497 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12207637 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258753622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120375726 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261607552 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116006723 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126169479 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143886507 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117882694 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121480788 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14308808 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.260927616 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119445968 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119998777 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138942781 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126717564 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125662734 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140398211 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123028827 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118341576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135446988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112481129 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258739896 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109535765 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140697893 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122162397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120665673 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146127412 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230664476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142717748 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126076574 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119967909 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140741204 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111793399 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12145493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138952273 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.25767284 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121265729 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12044885 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146889273 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120003623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121151308 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137957625 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114240232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120803135 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259662888 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120715863 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139273065 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119465068 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120022829 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140206963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123149711 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118832959 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149782788 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110481986 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144586255 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11638768 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119542855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145041162 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120729984 seconds)
  done (took 11.783791658 seconds)
done (took 43.090138116 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.673247549 seconds)
  done (took 2.688658931 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.934512644 seconds)
  done (took 1.948743271 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.025403589 seconds)
  done (took 19.073279765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.432096572 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486832479 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.117921703 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148903575 seconds)
  done (took 3.201301116 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.827617009 seconds)
  done (took 1.863251612 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296197964 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263302188 seconds)
  done (took 1.579426492 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726061589 seconds)
  done (took 1.755635731 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.524796776 seconds)
  done (took 2.545590602 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.282015847 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242734258 seconds)
  done (took 1.561768277 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.646754891 seconds)
  done (took 1.682536274 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.303273586 seconds)
  done (took 20.3426107 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259046579 seconds)
  done (took 1.299383677 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28373215 seconds)
  done (took 1.323365617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.575876151 seconds)
  done (took 4.614407341 seconds)
done (took 66.509326954 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114584617 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117164446 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116879265 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140661806 seconds)
  done (took 1.516449993 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124155249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119781664 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148592158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119908612 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126197324 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119978813 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144076673 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122916847 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117607863 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147748913 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119049632 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118529685 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14816769 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118952629 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115737403 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148826474 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122917614 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118353841 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146189625 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120399818 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119603849 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145250971 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122667067 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120997022 seconds)
  done (took 4.117594509 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115490079 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109913699 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112502903 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133551419 seconds)
  done (took 1.513831251 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127521685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132263383 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155911379 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12626186 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129423998 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155089932 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118002772 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115259467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142933722 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128114142 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133762042 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158061651 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131125972 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120909243 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155506895 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113300776 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119112985 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156323609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124643834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129370048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145826037 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125521513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123963611 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154580345 seconds)
  done (took 4.259560016 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194859646 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.13031867 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177359305 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163919144 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179338783 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117220606 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147672419 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150913432 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125839674 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121027028 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148423541 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16534335 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150379257 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121872555 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11940216 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149736014 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131093627 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124834228 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193007687 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124919013 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152965301 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131215515 seconds)
  done (took 4.261231587 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122259424 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109393167 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131088557 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11012306 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122520748 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111303169 seconds)
  done (took 1.752359832 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109001406 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103411017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104923173 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129670877 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108572091 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103591287 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102902607 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131277674 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104600873 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10365067 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130205649 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103829363 seconds)
  done (took 2.382552062 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204892471 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148202145 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255442218 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.488714866 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16189964 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189301731 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.303748042 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163862992 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206413581 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137487833 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215100933 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160865288 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18228155 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186300226 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168480762 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159660109 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194464138 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236694807 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143197225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24314946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156984606 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204305739 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218455835 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149727966 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166630724 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162983684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118736803 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155848102 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166675662 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192485069 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204150655 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15021265 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168249706 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191736836 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260410884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206439688 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271037283 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134088495 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199203338 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215400098 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232817654 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166969386 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220235984 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152520676 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155934725 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184474152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180943513 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.182398424 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161155198 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144287191 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214470908 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17853929 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19998282 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165169548 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298372584 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16127995 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142113329 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244004029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216573436 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201787937 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206821004 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122584122 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202232403 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217834507 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239430715 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143286198 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191916536 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124989396 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19170382 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206201819 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209734043 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159350344 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237400609 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159786661 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171107064 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197791761 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155642274 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233538567 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197775092 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119535731 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177787796 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134468799 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125839464 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.215299846 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122135508 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243673058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130357922 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341466771 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207858217 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154806543 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188421886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15958762 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189152255 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147702747 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129825939 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142286626 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188964741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159385216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155498663 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155282195 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138731371 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152464122 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153287067 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149325312 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168818607 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161101132 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163362356 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199646497 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131239582 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205376013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147055181 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191032251 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168614087 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219633275 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130063687 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160146093 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246883992 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169653945 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136230926 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20018967 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224195372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149829521 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163840827 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165873242 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221622429 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141920642 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228015105 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137232352 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162816815 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140745705 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200560317 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185815818 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16000583 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126195123 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192704001 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221357166 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127101099 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139159412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209864505 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132163227 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153006929 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13644824 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162552516 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143561542 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146810131 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166513761 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152891429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193989857 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164018602 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185494777 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133827605 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201980023 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130440365 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.195828631 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148525213 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146906635 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173549363 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224165262 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128617417 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209700212 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160604019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211476971 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199728423 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129425475 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211951168 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127712826 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119304965 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188791424 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196970537 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163559361 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217445396 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20438015 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166165517 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19145952 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148592696 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198429625 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211430464 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157222637 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169413076 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175673212 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19794156 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120424997 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123265344 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15526344 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136186432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157145546 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137725644 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208884622 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164127681 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205859653 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193105923 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137596585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21612216 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124830662 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188138005 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174348003 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137629374 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216785061 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217496101 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176487993 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168584779 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162974517 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148786222 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125565476 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132270086 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189525585 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136448645 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163044438 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14036903 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218649339 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199491613 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149694735 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218450354 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191790556 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199681813 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119765748 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190669464 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167891346 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198086506 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185912206 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157754896 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161221184 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221282558 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140187096 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220784715 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195289473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178733185 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224699506 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162433938 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158838703 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146597334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188074966 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137995617 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190639124 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145076887 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157996918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152899807 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136052577 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168277416 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216359701 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144529299 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208610849 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156783375 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199187902 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124109744 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170534543 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173748673 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174152217 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105740508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196469347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19407879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176449102 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154480935 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202276573 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13025898 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.342653105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187146532 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20484526 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163332944 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138650814 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197286994 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1614732 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190885269 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185029872 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169435114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20655066 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201365291 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141226486 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159628099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151698893 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179353372 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14100418 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178426438 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162544698 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17253045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188492302 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16516952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169265879 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206311374 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143606696 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178073948 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138036213 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253616184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193119974 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174078463 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191532107 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164563081 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21210065 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124328582 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126009311 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161875015 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185696412 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156914352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176808488 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193440579 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209555024 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174229542 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189612912 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140107992 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156679462 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166440892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176993821 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211566161 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136779125 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135438962 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218003577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128573059 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159664946 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161323673 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318038856 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146879969 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200871335 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107141044 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310131674 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129188335 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158691417 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161613673 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199156782 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132395323 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210425892 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175264177 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138694085 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190155479 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134511839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20927662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211355913 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165863653 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204070762 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17284274 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1625949 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189698944 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17505174 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174384846 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147291847 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186533236 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194844158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206512104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130094539 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19830036 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169108567 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199214121 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173994198 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167245832 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181991197 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156617959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164893853 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166308905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124444187 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190100621 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.166317639 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157875125 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17570916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199809058 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130380787 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15654896 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146775063 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191994596 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140588759 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129076295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215461662 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155750024 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182999929 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241043299 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128432808 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195331694 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146136297 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130152881 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167923186 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142710462 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159279093 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17346429 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209061697 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13145046 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205180077 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165259111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193632396 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158013987 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173259543 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26648691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.156058115 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190454159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17867298 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196318278 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179307484 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17576467 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197737357 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150645651 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194501231 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147273706 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249099799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164900733 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195652129 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13179035 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173255776 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137746352 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161822125 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152683507 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19540017 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142267034 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13607363 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196649744 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14387647 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177175612 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142586904 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229052928 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150755759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218401946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218049136 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138423622 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204896967 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175207859 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158586796 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165227048 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202332443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14296432 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18153105 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133633883 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166895128 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215140196 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.153395833 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161169882 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203708372 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168723181 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200498956 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134500047 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209751751 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140895873 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204589546 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127130067 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180080813 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170508788 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13477575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.156352891 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171676757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191050949 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164453598 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172684484 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174916591 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222832815 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122920648 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133053037 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314898711 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191699572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195582302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167027452 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136248015 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179947557 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16086154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.190891597 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171572282 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129023483 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158879532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146035752 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185815498 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142526007 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196065131 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181410721 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189978065 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184167564 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164127978 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250598866 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171401546 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170839347 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145731855 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1302647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141105183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162963512 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141499219 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209383419 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243739194 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163357837 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175318687 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136338559 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12606311 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158825907 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162968581 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.686870667 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167028693 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176170607 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104731268 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139760238 seconds)
  done (took 86.11090767 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168963896 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.161800858 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.177378611 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.233194092 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204150831 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300979616 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.244457737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257380596 seconds)
  done (took 2.884313137 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119393298 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157804008 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142451114 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143046625 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.1096625 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.484561966 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159979231 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121628241 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161359367 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150954883 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136404565 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57189595 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116937808 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144742136 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123828534 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136599506 seconds)
  done (took 4.111317351 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.723608226 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53751489 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.064456461 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.280921338 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262444716 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205480874 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.782696091 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202348683 seconds)
  done (took 12.188935022 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169903669 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.165206812 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.451756549 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309601505 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184226927 seconds)
  done (took 2.419889262 seconds)
done (took 128.548913388 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124393773 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125288957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124719414 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153751259 seconds)
  done (took 1.656709095 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196186011 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092656939 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094207307 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120716106 seconds)
  done (took 1.641376098 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460226603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092499269 seconds)
  done (took 1.720491376 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153680106 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141192658 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16686439 seconds)
  done (took 1.616421009 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1362515 seconds)
  done (took 1.277062124 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127796162 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127131852 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.272250258 seconds)
  done (took 1.67326893 seconds)
done (took 10.73370981 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121051385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.929893075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433256795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134108231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710955392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428130587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.425487377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1753948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175953398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138229522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133424269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691470242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43910085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879055729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394839889 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908112106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695289578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112332213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144748217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113436489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.405952668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136936942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114118425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11302563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718816979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422314384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111024665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.920691455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111130941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115295595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427953357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112476534 seconds)
  done (took 21.027435008 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114053812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169725885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147204335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113382674 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114369318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13983527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122903362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123559702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204301069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110870974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160587455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111084487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11649175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138183722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138118709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11138415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113823823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143953424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119386823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113016137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161256387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110884963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113167814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143364608 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11210248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133879535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140040155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124366325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110840806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14561559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116913011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112784792 seconds)
  done (took 5.304145816 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160828742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178852849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149853827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150417614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190139744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113327185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199740555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178382533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206115411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113241805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13377812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140193538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153933914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11284339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16550424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112737759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114950339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141980427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120695595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113702546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162937662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11192207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113385587 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141604118 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113778372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135522369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140904381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125429827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111469307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144002469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117160173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112425715 seconds)
  done (took 5.634696136 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127733686 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128035792 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134548603 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164068967 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121515362 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125065355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155585123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121890976 seconds)
  done (took 2.233384115 seconds)
done (took 35.347700258 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137713579 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13059267 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13202607 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155906643 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.225670273 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.154482342 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130530314 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119251791 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157522006 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13343352 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111321245 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149595811 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134770551 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124023469 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.257261446 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126702739 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262024239 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.259299898 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120072541 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125847768 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.149255381 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233658552 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15719942 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121009135 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250229729 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11657098 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.250297239 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123463544 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122909449 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113888408 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.258968253 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123998635 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.153357185 seconds)
  done (took 6.465930475 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.24162896 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154333315 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121435204 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119588644 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121204934 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149583243 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245749016 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152542474 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120625724 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119798819 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150682338 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226631272 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158044465 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117347457 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123564333 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111499696 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279409895 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12208178 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144629033 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096430126 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116393023 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119413676 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.291593287 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116643257 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.152263454 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120909334 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123206971 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156092327 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123490568 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122034361 seconds)
  done (took 5.676861375 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127499007 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134975041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139112143 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219002608 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150651013 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164089663 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14083729 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135263214 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172426875 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115039783 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12940304 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180403494 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131152049 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124931521 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144046739 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134324963 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137276944 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144574063 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122899182 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131647003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165443818 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132599924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137957431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151426391 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113900765 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121607463 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15302306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125458833 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121903119 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128741819 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146132298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118117713 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116154174 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179595085 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115655837 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156903955 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141502371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127419978 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126975817 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.176444884 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117820499 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115228968 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171965403 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168617179 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114449247 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.158595257 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125926279 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129673246 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143455757 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133758574 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156222137 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143186539 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135489671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112201784 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.142812058 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123530769 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114439709 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147081635 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130066121 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116797818 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168601008 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122699075 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124642865 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115041375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155546461 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114093993 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112207993 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148902051 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140689578 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120987463 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.181378179 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114898965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125712639 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158473395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12654196 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12622106 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142607648 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127419405 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125255271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119233933 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.157730302 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117079076 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116107624 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.161523478 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135166633 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127654757 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155062765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127227313 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117355385 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145973532 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132598818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114786919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148498076 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128264822 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113932479 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145734114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128781053 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125243761 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111717604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.170487741 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11814942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113785332 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.17090758 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117725047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118552972 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154446089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157924 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114410856 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156484388 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127455602 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113118799 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151905571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118947833 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113670701 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13151916 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160854572 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122367771 seconds)
  done (took 17.123138168 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.358907505 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.343715053 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187512959 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430298408 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127529061 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.275247013 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343863277 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347178275 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11477726 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179553328 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177080239 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313135361 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114658491 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175298874 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346538665 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.404067851 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177801286 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15147548 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181411928 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129007872 seconds)
  done (took 6.058730958 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135477063 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150054145 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167210957 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144383744 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124412731 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162067669 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114463313 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135867994 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155966041 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12535397 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116730516 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160684196 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127905843 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130878762 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159905757 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147804904 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122073597 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150203571 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138268346 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119770118 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133141617 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140763727 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123498496 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166864732 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134210908 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125473185 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142249371 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120892189 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12079741 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122986055 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149726866 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133185891 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121504909 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.135349503 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126362907 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129476564 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15114621 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118486082 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119651547 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118083696 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.160952602 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128962738 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121806743 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130729475 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135257044 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111876962 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.130461505 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.15698607 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.10846536 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.1337949 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155968037 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130545153 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122346805 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165727004 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123078126 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131392223 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154547386 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131787144 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119697409 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112875504 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.142560359 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118957873 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122788858 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158363066 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127013584 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132993185 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160453196 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115644638 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118680581 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14807321 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119855459 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129030967 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166138716 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124269771 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120752136 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15580174 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124196244 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09645386 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122547426 seconds)
  done (took 11.787294522 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140121199 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12512195 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132757529 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179533451 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131524786 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119612212 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154301807 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135040386 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128959142 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164626059 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13078815 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128017004 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167498241 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125978258 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124229849 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159950689 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129693945 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151938617 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163180452 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142728357 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12889553 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150466867 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128346432 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125893998 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174517829 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126212934 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140945409 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.16026268 seconds)
  done (took 5.167657379 seconds)
done (took 53.43771206 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.306449275 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.532342253 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.293702986 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.28933073 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.300891834 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.30896462 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.289291885 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.304196079 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.738804405 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.259065136 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.290731748 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.28870533 seconds)
done (took 29.392105779 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.439682391 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.290263814 seconds)
    (2/2) benchmarking "String"...
    done (took 1.588702988 seconds)
  done (took 5.066736615 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.282851761 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.279005432 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.528481851 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.278856567 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.278424246 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.279534714 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.279714142 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.298075752 seconds)
  done (took 16.399932422 seconds)
done (took 27.371098859 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.273697708 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.570272947 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.526567494 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.259730521 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.298874326 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.300499965 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.284725716 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.331635755 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.280494465 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.260767058 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.691780179 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.563403751 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.281840034 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.698112562 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.259815699 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.301478988 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.297661822 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.616411292 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.281722071 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.311311471 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.260503 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.260287135 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.308394218 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.295054512 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.288035688 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.283509727 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.30424838 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.291347396 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.568008902 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.314185639 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.260458946 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.301501454 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.296862579 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.28625615 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.286231417 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.293878292 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.557871335 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.290511586 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.266825212 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.307018855 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.556560029 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.287425586 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.286520249 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.289076795 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.263107077 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.293928735 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.267740345 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.417936749 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.30512166 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.296216308 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.359884073 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.666871849 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.291688206 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.307550502 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.286283971 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.612885537 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.30295049 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.357662923 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.328192399 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.307209269 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.285007607 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.293397697 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.320386485 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.286188938 seconds)
  done (took 149.46221385 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.284045282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.289125006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.283297281 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.307660923 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.284400405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.288257164 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.284714985 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.282879065 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.284692895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.31647532 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.284837134 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.284646728 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.28970847 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.313356504 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.294677265 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.302291875 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.286428254 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.299835571 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.295728316 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.285403448 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.305542513 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.284597604 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.305900896 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.285708583 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.319533215 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.359541029 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.314995643 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.309573974 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.297352195 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.284668226 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.326009342 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.330528732 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920696464 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.160203885 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.297783965 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.303230426 seconds)
  done (took 83.43197258 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.286321258 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.284405716 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286519903 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.318521034 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.286314135 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.863405881 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879988945 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349369976 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.291888553 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.643307023 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514559175 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.28728887 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379105379 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.301073366 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.287487592 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.286907071 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.302114527 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287750258 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.315296667 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28686284 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880941896 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.304853316 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.466635978 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.303879049 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321967665 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.678891352 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.304910834 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.29317738 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322066183 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.62154904 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.33910518 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.287266055 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6053382 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.339057723 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399903394 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.290694637 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32097853 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.288256357 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.571626191 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28801261 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.289533072 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.292295175 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903846622 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.289061941 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.866460509 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.290051999 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234533822 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.288413754 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290751346 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.228448556 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.917620288 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.288891825 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.289681179 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.291658355 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.289536061 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289716199 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.289576588 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.322099212 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.161158691 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.388932358 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.291042781 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.293601079 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323609758 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.290022606 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.327449965 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293447296 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.906178489 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.349891231 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.382149546 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.885113307 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.29493324 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385395837 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410726063 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.291696065 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.291402508 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291133281 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.289792481 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.403175896 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.289637037 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.993068272 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.470032328 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.308883687 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.650883792 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.38836255 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.291272256 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626665228 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.29081288 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.291690146 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.0094248 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385819875 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.292060681 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.2922442 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291945045 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.291576526 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.998340786 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889207814 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.543462901 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.292782899 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.713755981 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.296743274 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.16872798 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.865972936 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913159401 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292421778 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.4043194 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.470381097 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.310325351 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.29161051 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.65470634 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.299771003 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.292597634 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.292114031 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.353564124 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.692561647 seconds)
  done (took 382.860537182 seconds)
done (took 616.934870112 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.169317025 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.117948898 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.272796404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.127072056 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.113962761 seconds)
  done (took 11.992049425 seconds)
done (took 13.182785769 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48719828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488483294 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356861789 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491865451 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327509124 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506076805 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471818327 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.313772264 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409533569 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.379103717 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404860215 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347681008 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.329450068 seconds)
  done (took 19.50590587 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588896836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.308773322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360557405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56433799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345052658 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.600715504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.625088618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.309543747 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468902584 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317563287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31658707 seconds)
  done (took 18.998012877 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588771945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.308149535 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.363381913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563278523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.343082278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.60407063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.627022582 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.308658832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.471305459 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.319408538 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317770696 seconds)
  done (took 19.007013363 seconds)
done (took 58.704231883 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.334863481 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399828408 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.334261074 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.315431431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.31340565 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.313953371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.31766677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.313409808 seconds)
  done (took 11.836454681 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.312801428 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.314003101 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.313933784 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.313252632 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.312762968 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.31402275 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.311996457 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.313316746 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.313234365 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.313173145 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.314409411 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.312182491 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.31431185 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.313908611 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.315166984 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.313057937 seconds)
  done (took 22.209476878 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.317320902 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.313172001 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.314039773 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.313690281 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.315407385 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.31437285 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.316382839 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.313485449 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.314061433 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.314331489 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.314330619 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.315224395 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.314631515 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.31529233 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.316024596 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.316209333 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313811145 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.31475268 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.31814441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.314665351 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.313915413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.314820406 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.314041797 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.315011248 seconds)
  done (took 32.752987288 seconds)
done (took 67.993731055 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.298836757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.29844717 seconds)
  done (took 5.793221359 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.377163168 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.372889451 seconds)
  done (took 3.94704841 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.315276939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.314756515 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.315555733 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.315441253 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.315368396 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.313979566 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.31577555 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.317113082 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.315118407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.314667741 seconds)
  done (took 14.349146145 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.317517506 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.31778286 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.316209047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.317070977 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.316094934 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.315844417 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.315998329 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.316350651 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.315659647 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.316474379 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.317241844 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.317171342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.317540017 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.316135836 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.316399147 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.317478716 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.317409121 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.317358868 seconds)
  done (took 24.899133653 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.332270238 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.33519021 seconds)
  done (took 3.865153811 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.444396141 seconds)
    (2/7) benchmarking "second"...
    done (took 1.357821782 seconds)
    (3/7) benchmarking "month"...
    done (took 1.421122926 seconds)
    (4/7) benchmarking "year"...
    done (took 1.43055641 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.359433238 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.338214758 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.360530338 seconds)
  done (took 10.910345798 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.30472806 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.600619229 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.78177234 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.461829098 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.296301758 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.316141382 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.2816827 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.316879974 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.319241915 seconds)
  done (took 14.877919181 seconds)
done (took 79.839666319 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.316645139 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.341241968 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.329821943 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.319447625 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.660347812 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.328214795 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.303019685 seconds)
done (took 16.800335095 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.295441926 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286861332 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.301702561 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.318265253 seconds)
  done (took 10.399449354 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.317172429 seconds)
    (2/2) benchmarking "read"...
    done (took 1.630209255 seconds)
  done (took 5.144546401 seconds)
done (took 16.745587504 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319556469 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.318926681 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.318148252 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.318760695 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.318049545 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.320587915 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.318956973 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.320654773 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.319186634 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.320197151 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.320072489 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.321134974 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32011934 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319990245 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318803652 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319884409 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.319760489 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.31872323 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319308307 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.320918644 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320562451 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32064836 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.319537584 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.320098524 seconds)
  done (took 32.873504735 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.320986487 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.318563645 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.320408429 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.32030304 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.319797964 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.322771612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.320484295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.321032325 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.322148655 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.319971416 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321258909 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.320949702 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.320940222 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.320962081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322523381 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.322028358 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.321418549 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321828934 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32244607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.322593584 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.321601314 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322348645 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.322083138 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321824967 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.322413462 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322361344 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.323453514 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.325712295 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321861278 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.323845879 seconds)
  done (took 40.85298262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.328267592 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.329715919 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.323174284 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.323505765 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.324314427 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.32319098 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.323086591 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.324953755 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.321997451 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.323130417 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.322752127 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.322575566 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.324523922 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.322894986 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.32315016 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.323544693 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.322777177 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.323886978 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.32249013 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.323009618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.324117496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.32369723 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.323576847 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.324435677 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.324619642 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.324062096 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.323323633 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.325215037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.324806139 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.32511065 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.325713586 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.32436062 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.323896095 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.324695253 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.325952745 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.324400522 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.329358169 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.331410817 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.325233483 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.324039925 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.325062585 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.324378612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.325530172 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.325770564 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.325199994 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.32510641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.325310603 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.325634785 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.324520545 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.326371358 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.32622928 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.325675145 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.325892826 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.326421091 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.326128243 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.326266952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.325461573 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.324535756 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.326748159 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.326981123 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.326163494 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.325792601 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.325999967 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.32614887 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.327447825 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.326299743 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.32641286 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.328947081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.325616659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.327498964 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.326593498 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.32675385 seconds)
  done (took 96.617496508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.326696962 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328213168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.326611377 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326141765 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326686383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326436655 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326825102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327402736 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327538508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327878852 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328250446 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.327861948 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328070886 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.328532111 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327855451 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.32856355 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328862133 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330127141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.327590649 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328113212 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328658743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327458071 seconds)
  done (took 30.417561663 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329567205 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.329284697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.327973845 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.328951737 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.329493007 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329211639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.329341721 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.329488272 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327708367 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330662011 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328942352 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32882431 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.33067395 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328006426 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329502042 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.332926376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329135816 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331180067 seconds)
  done (took 25.139955268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.328893946 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.330343449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.330281458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.32974158 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.330613883 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.331107908 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330374842 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329553491 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.330210067 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.329918479 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.330312329 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330806974 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.329777098 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330258571 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330671341 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330994321 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.330162541 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331174739 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331377514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330539281 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331521268 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329740055 seconds)
  done (took 30.477464116 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33070673 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330682741 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.330082216 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332304147 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.331532882 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.331921964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.332874623 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.330915463 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.332549028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.332142957 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330713977 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.331801796 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.33353739 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330798286 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.33231349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331886075 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331802631 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331762034 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331421401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333157785 seconds)
  done (took 27.846351517 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333386545 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331651229 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.333315723 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333410595 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33344178 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334674641 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333775855 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.333970018 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33367147 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.333559416 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.332053141 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.333923217 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332812953 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.333821103 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332939039 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332854047 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33454492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332493776 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.333237939 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33168797 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333137015 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333800577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33423326 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333077108 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333409408 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335170041 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334657072 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334815025 seconds)
  done (took 38.548903999 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335227919 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334276739 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.334659859 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.334155779 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.33460475 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.334617073 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.334963736 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.335604519 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.333916844 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333340926 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.335080987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.335478659 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.3347319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.335222893 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335125971 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.335398516 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334500949 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.335930628 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335418303 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335597167 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.336768232 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335123792 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.336845832 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336668944 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337274684 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.335017045 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336273417 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.335814388 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336961322 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336652335 seconds)
  done (took 41.273864207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.356312229 seconds)
    (2/2) benchmarking "in"...
    done (took 1.355888558 seconds)
  done (took 3.925417738 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.336760897 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337147535 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.33501123 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.33846491 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.33681298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.336067648 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.33660173 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337237771 seconds)
  done (took 11.908264494 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.330142683 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.337792402 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.336562467 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.337864699 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.337479657 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.327463215 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336227666 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.341758024 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.330527275 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.330996906 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.335708937 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.337443238 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.332849345 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331732018 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.331747374 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334155655 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.341023635 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.340197147 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.340219556 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.338817362 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340094165 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334235935 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336404121 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.34390973 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332221993 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.340817737 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.340433569 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.342769614 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.331944477 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.335369949 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.334531518 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.342007197 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.340679925 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.339980254 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.340320002 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.340721085 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341119926 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33812398 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.342354984 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345406622 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.339930385 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.341068786 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.333839798 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.337935666 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339505515 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.343868695 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.341860953 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.340941364 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.33224296 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.337811527 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.348383562 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333098781 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.342809466 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336959452 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.3389663 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343974838 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.346408784 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.336535531 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.341362879 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.34513878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.351734599 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.349806792 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341693998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.345810619 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344456289 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.35822786 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346105616 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.348308897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.344327064 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.342646205 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.342640809 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352774243 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.35487568 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.346801234 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344456274 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.342300156 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336555643 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346425073 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344556872 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.347160291 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.34795013 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345237325 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344784232 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356190499 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.338573928 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.347883335 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.344224178 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.34359125 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.335135437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347880962 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.352431637 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.344155571 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.335198097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.340631546 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.340579526 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.345719803 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.336547437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338765736 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.34784034 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.344037928 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344885122 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339004386 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.347239923 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349926607 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34522549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.346566882 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.351044743 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337393999 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.348629065 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.353192505 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345229268 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.338945266 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.341898524 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.348725647 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340971526 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.34615337 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.351168499 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.340478356 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.352357348 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.34565376 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348578669 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.36398351 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.350784435 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.346010622 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.343183489 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.357076955 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346798679 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.343648509 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.354121312 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.345974062 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.345385922 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.342892463 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.353951278 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340942566 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.351522525 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342412573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.352304024 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.346164172 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.347597333 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.343964271 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346118618 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.343682195 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.346780344 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.350754374 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.354659776 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.344252932 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.355024591 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.346926651 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.346105966 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.348511011 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.351867816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347849182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.34164877 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.352202584 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.339684776 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349929677 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.340682318 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.352816892 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347692942 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.348697143 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347947624 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.34110655 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.345420753 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.352056736 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.347363819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.349996527 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.35237788 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.35061116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.349653741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.340299249 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.350924349 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.34113272 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.345865986 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.356042101 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.349159985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.349250937 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.346238147 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357429991 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.348134061 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349302673 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.344058792 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.352153613 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.355900948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.350781739 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.358401645 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351292728 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.352870714 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.343203732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.345987923 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352571875 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.34476329 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.359277422 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355875807 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.363445126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.346083543 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.354282215 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.342558194 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.355611174 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.350392534 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.359098313 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.351582749 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35196678 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34709045 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356429652 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.346999647 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.357059398 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.343761248 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.35317044 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.352234259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.351116292 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352015169 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.3451126 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348948326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.355021903 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351200406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35189252 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.344911084 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.357035791 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.343036061 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.347282981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.355584929 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.353155983 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.353850704 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.359623819 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350734156 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357687548 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.354700823 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.348123198 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.354862587 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351397906 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.354185449 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357689577 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.354757528 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.350155826 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359425615 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.355495343 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.348096581 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.355021767 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.361675841 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.353152495 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.34716633 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.360841431 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.354483267 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.353896895 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.354524064 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347852997 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.357843836 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.355189061 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.363700287 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.348410235 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.35770953 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.34887122 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.357467679 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.350401327 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.356918426 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.354744915 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358542256 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362834245 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.356274485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348171324 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.357617579 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.355224107 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.356784254 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349203132 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.362181793 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.356420749 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.357279569 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.355259586 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.3532838 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.359213039 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.348230571 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.35790891 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.349249186 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367627373 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.377167053 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359309391 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.360714157 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.358898798 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357178143 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.359553516 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.351077475 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353055581 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353773124 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.353219909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.351917261 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.360756664 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.35244424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.359891762 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355370781 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.359100869 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.361771645 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.3583241 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.352231184 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.360048478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.357441196 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.357801676 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.349381952 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.360280473 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.353273242 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360695864 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.359583458 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.352687365 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363469432 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363025491 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.355931799 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.354729218 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.352715062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.351571294 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.356510021 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.363839847 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.353733818 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.364583373 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.353247061 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.359386609 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.35632536 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364326534 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.369050097 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.352294151 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.366508863 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.359109326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.35128798 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.352847959 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.360241042 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362815873 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.371077605 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.351464686 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.363534167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360388227 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.360299342 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.358981247 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.359463515 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360028887 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.360213703 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364571871 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.365290316 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.356760941 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362844343 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.370121734 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.359610656 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.35943988 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.351600784 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362501546 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.370191334 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.356519539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.3589346 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.356784079 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.364131857 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.359348688 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.361659192 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.361863961 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.360989565 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364547916 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.368319743 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364577244 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.361284059 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.367878812 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373311786 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367883297 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.377442403 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.359235674 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.367777962 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.361106542 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.357878118 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.357842721 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.358536683 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.366501993 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.354636704 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.367266811 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.361453891 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.358321596 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.364386347 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.371103373 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.355621755 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365557698 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383602275 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.354740851 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365138051 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.361987194 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.354948957 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.366572506 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.363728486 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.354312265 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.358676868 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364250649 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369997819 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.356834188 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.366311112 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356436919 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.367746966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.363477636 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.363336447 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.36325688 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.362069745 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.357303786 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.365470852 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364182963 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.374059961 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.35878524 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363856015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.359142891 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.370893419 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.376410997 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.359433836 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369945836 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.367490356 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.358043399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.363029656 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.3704191 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360344212 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368935431 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.357485924 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36297136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.362867089 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.36510664 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.369174473 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.369451444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.358839531 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.36065084 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365911669 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.365689623 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366108828 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.36043189 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.373345867 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.359129766 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.360565804 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.369138186 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.361547044 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.371536977 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361156086 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.365282767 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363994823 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.370426043 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.366376366 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366974277 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.359434796 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.359706587 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.373364607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374434557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.367333664 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.366470315 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.370756945 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.359775848 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365952438 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.367964207 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.362078918 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.363841742 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.372237947 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.361722487 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.363530399 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.364904842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368466641 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.372205619 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.375047591 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.361943368 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37445984 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.379146023 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.375209928 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.361355396 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.365378858 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.363884545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.370002407 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.368198753 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.362839406 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376690833 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.375333701 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371730823 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368470379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.371273197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.361044394 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372646205 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369074883 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.364976377 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.376203798 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.365734739 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376118605 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370808943 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.367928411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.361817776 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.364024976 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366007347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.368337655 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.37173628 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.370227979 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.374456073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.36758549 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375925708 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369065435 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.369046033 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.368452645 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.362605221 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.373576104 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.361817861 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.37054171 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.374742487 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.364421327 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.3744383 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371739421 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365782246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.371867577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.378204732 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.370028253 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.364495623 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.370384214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.377884058 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.38325254 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.372476227 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.365212545 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.36981254 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.374845625 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37228289 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.371455959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.366333311 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.387143036 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.385922403 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367576227 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.370912474 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376607387 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.384005466 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.371130683 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.372250945 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.369259528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.372761283 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.381047504 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.373100474 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376709531 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.379424558 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.368127824 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.376285585 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.367960273 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.372780107 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.374110942 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.384004701 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.373913463 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.36980424 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.386251524 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384966444 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.37674681 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400157455 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.382777944 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.372821842 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.379615519 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.366381255 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.37590607 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.370462182 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.380967114 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.374641728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373282368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.375412339 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.367925526 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377835639 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.382548392 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.385102057 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.375171606 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.367119207 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.370287349 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.377654607 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.374895794 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.376710094 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.375212186 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.374698357 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.375409691 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.369796632 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.387761978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.394696459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.381167936 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.375293426 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.373837733 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.377030968 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.382566471 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378964123 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.382851688 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.375694221 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.376173053 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.375547916 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.384451369 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.37824558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.371063896 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373665243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372486285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.380562124 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.385438856 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401924066 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.381515132 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.382606271 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.379958071 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.377338242 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371531665 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.380103305 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379694239 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.372595613 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.374563393 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380404439 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.377671426 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.377643926 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.372929444 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.384221959 seconds)
  done (took 810.746833867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.377726044 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376840348 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.37793045 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.375601384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377663822 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377107619 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378941123 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.3786202 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.37654966 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.37762882 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.378416634 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.378020751 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.37792753 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.379036079 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377522444 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.377809632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.378308557 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.378191311 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377745363 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379071643 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.378127593 seconds)
  done (took 30.184816695 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.378846357 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.379182831 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378471123 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.379230463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378982035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.380655856 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.379355186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379304547 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380012928 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379543005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.38051685 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380626148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.380877468 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.379517533 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378578435 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380659339 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.379464213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380737774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.381969325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380620006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380184183 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.38039163 seconds)
  done (took 31.60829081 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.382214214 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.380733406 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.374324335 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.38358025 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.380846389 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.382106559 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.380526933 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.382190653 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.380759162 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.376604498 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.375760705 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.376553193 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.3805244 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.388582532 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.378586424 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.386772671 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.381115824 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.383111853 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.381722337 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.382063264 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.386522453 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.396154462 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.381969676 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.374477546 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.386125923 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.38380231 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.382100357 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.384081257 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.375635015 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.386337776 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.382588747 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.376864895 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.386929414 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.38579751 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.37674071 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.385746769 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.38146757 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.382235851 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.382978751 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.38318317 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.405485723 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.385158654 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.389254893 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.396163265 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.382183348 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.379099404 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.390985633 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.384289612 seconds)
  done (took 67.643111446 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.385796378 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.383963761 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.383254644 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.382796742 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.384818831 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.383858602 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.384640699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.38304451 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.383922 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.384338896 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.383431289 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.384650659 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.38344305 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.385066721 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.384026158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.384551932 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.384825389 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.384469418 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.385366286 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.384647525 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.385096539 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.384867094 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.386635358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.385043824 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.385343866 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.385532349 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.3842914 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.384894716 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.385127663 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.384603515 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.385803918 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387204681 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.386285952 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.386173146 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.385715924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.38787508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.386580771 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.386134914 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.386016077 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.385864184 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.387539131 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.386408983 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.387962866 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.388102385 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387056385 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.386909941 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.388368719 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.387007188 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.386820514 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.387054139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.388428102 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.387282139 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.38694477 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.387244058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.3869051 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.388858989 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.386525232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.387515042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.388073397 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.387836344 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.387831845 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38750664 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.388999669 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.387837617 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.386963975 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.389929291 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.38816426 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38849498 seconds)
  done (took 95.510372934 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.387815975 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.388749287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389022066 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389200999 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.388057583 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.389192071 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.38814891 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.389181956 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.390268027 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389041263 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.389470287 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388893969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.388928398 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.388798122 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388861537 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.390253865 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388525168 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.389901708 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.389141463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388399649 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.389600574 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.390605159 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.389386292 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39030557 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392050475 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.389956747 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.390702009 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.390262297 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393093114 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.391730924 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.391384021 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.39242123 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390445437 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.39071916 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.390743132 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.391449152 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.392351091 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390342701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.390293118 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.390725512 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391560121 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392029663 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.392200582 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.392932154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392051485 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.391709921 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.391827736 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.391595128 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.391853122 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392315764 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.394635718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392216568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393496699 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.391776102 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393973807 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.391733998 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392345192 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392930671 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392629905 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.392272019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.392911358 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.392666447 seconds)
  done (took 87.491775705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.39175087 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.394863276 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.391801079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.392234362 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.39370812 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.39333444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.391743101 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.392823107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.392303674 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.392480767 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394263469 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.392716585 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39412102 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394340718 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.394347283 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393952099 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.392792332 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.393907868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393320738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.394084578 seconds)
  done (took 29.126635449 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.392406867 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.395093898 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.393932844 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.393621581 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.395003576 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.393384653 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.394457861 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393882961 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394500655 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392860167 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395408954 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.39541234 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392951981 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394792302 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.394517627 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396847691 seconds)
  done (took 23.570460486 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.393814925 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.395899822 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.396575005 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.396061273 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.395723372 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.395199997 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.395042845 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.395959578 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.395491433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.396704587 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395868927 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.397038831 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.397349367 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.396690143 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.396857225 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.397144789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.397615329 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.396440302 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.396684625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.396935231 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.396659361 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.397792802 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.397625328 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.396024499 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.397158394 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.397159213 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.396064113 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.397605006 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.39535678 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.396613812 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.397763871 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.397273784 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.397455857 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.397798255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.398225352 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.397357082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.398245561 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.39671572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.399245918 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.397194992 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.397980208 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.397391543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.397685263 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.397543075 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.398813034 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.39821709 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.397615247 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.398809101 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.397617538 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.398049168 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.399263467 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.400010946 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.398559792 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.398743016 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.398474095 seconds)
  done (took 78.110100232 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398359069 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397928387 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.399138732 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.398452239 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398978978 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.398905319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.399291212 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.401266491 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398791663 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.398495594 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.398224009 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.399531047 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400185772 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400405268 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.399609621 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400898593 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.401562291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.400974603 seconds)
  done (took 26.458215723 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.400094503 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.401750829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.400652782 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400915361 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.400022655 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.40138395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400165943 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.400322146 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400315017 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.400842483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400291317 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.401430066 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40158277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.403547206 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402028015 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401849339 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402169468 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.402349716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.40149756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.404380286 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.402671924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.402696705 seconds)
  done (took 32.100084103 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.392888631 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.391381226 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.392022782 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.409564675 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.410458283 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.392534774 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.391354384 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.391752587 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.416547524 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.439711971 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.433410049 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.409947441 seconds)
  done (took 18.140249049 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401887757 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402172326 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403241123 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403566439 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402173188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403361385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40278252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401532976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402458474 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402664052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403945462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402910421 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403919048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402882493 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4030206 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402938534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403443108 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403804857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406259679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405271588 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405252946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404060294 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402786479 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404723873 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404626962 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40418206 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40471398 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405379922 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403529045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404919379 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404783705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402119737 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406181347 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404107339 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404219197 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403817012 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405450313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404995518 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405497741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405386586 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403892134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404623711 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405154918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406452943 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407771316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405531874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403264935 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405526693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404264246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406564225 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407471954 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404751453 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405459523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407702802 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406334436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406731761 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405135684 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406911468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405963891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40677375 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406981328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405584077 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407457843 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405992986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407191871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407217488 seconds)
  done (took 93.983394783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407464607 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406603914 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406573408 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408244019 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407597878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407114565 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408203317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408610739 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407148254 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407415847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408888349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407777694 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408668423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406431258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408273495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407376997 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40794351 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408125537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40771482 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408824489 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408394991 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407410944 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40842723 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407487767 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408879459 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406729773 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407256604 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408909219 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408393762 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409369718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408445836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409334225 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408995022 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40819431 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408977153 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408662918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407790573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408876943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411207273 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410237845 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409213989 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409822304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408913988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409368923 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409897721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409922412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410468572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409671005 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409801657 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409716334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409030491 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410009143 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410438691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424961513 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411175375 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409943402 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409502927 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410309613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410732953 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411149462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410123642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410170995 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411171199 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41054586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411022421 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410882474 seconds)
  done (took 94.281017683 seconds)
done (took 1900.03859031 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.567233017 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.524139125 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.402497707 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.419501917 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.400314649 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.401662794 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.41202856 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.400929764 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.400605284 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.400919125 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.401857212 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.616840418 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.436890661 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.401560907 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.401518671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.49849601 seconds)
  done (took 28.364208463 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.432331568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.409683698 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.533225984 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.411985029 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.432993633 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.614604458 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.472418932 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.40627854 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.598904431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.431689313 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.396504659 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.44913844 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.406663886 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.41343797 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.430743863 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.613561881 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.702984937 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.420478949 seconds)
  done (took 30.854845155 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.917320023 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.43318127 seconds)
  done (took 5.627256715 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.428195402 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.40812973 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.40960922 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.406102179 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.397972314 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.404235763 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.406606442 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.403803375 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.410029843 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.551194393 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.413610004 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.42130567 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.406576199 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.408962943 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.416465125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.455156854 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.573329833 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.416715015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.41462362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.413189212 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.405623725 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.506201641 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.453903561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.41715907 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.545971504 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.415161453 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.416726113 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.41537829 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.52802131 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.418963961 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.409326355 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.409364867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.409294844 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.401639013 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.979740754 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.406838808 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.435040367 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.41778863 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.417509252 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.549251376 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.411100811 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.416861385 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.411330991 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974733156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.527521906 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.537546484 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.403070673 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.412693611 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.41085311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.480275384 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.411782866 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.41110613 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.473030985 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.232137913 seconds)
  done (took 89.727293254 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.455316626 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.402173675 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591211805 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.419809346 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40339597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419858496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.421939263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724761374 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.428821485 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406244442 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.738378046 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.061586767 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409689238 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.468529831 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.444319667 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452094198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405058635 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423223225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.40524633 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.406851249 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.997236501 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40826505 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.40447885 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.495128007 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.446289938 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.9920055 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.406351191 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.42067437 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.406830887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.404200017 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.036808617 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.418400395 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.461929409 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.408300399 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.70980029 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.84181793 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801001 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.413386065 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.405397974 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.405323628 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.430478799 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993816179 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.822103062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.406267602 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.407213933 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992151743 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.405124107 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.416942785 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.407961937 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.68270869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.405121861 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.407112781 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.410023785 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.405038928 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.40717785 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.458148419 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452737664 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99461694 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408436277 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.407945042 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413839594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.409168551 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.412955997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405425049 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.410921068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.826292623 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660591873 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.411405124 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824619701 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.025027387 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.407211495 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125470184 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406855085 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.427355306 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.454023628 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.408063892 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.406586262 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988221231 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.428113751 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405413925 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802909383 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411295669 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.728782522 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.42765338 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408639158 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016545763 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.414229477 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.460261539 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.409402801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.426003745 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.408030339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412712152 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.717313495 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.456583813 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.409746334 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.411514389 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.443656741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.40969019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.409425606 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.418866667 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106999742 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.41524241 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.409434195 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.431746699 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408296193 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.428314357 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41052964 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413178559 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.696274041 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.41186039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.432072897 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411125664 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411635442 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.437956631 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.503791745 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.419188086 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.759127651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412856397 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41596272 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412081029 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410098699 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441882841 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411398787 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.432524028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.411049977 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.766477955 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.430768873 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.41148927 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412931173 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410717324 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.412651191 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415469934 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.465181858 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414894573 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.229485044 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.45089761 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.414051197 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.410948772 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425354727 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411203299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.42595524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415508515 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725056974 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.717688076 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.662359848 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.416393148 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.412751296 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.253920147 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.424569344 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601156911 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432271261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411262146 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.717949952 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.640611078 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.416062033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.412861781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.414791105 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.699371481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412128779 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760414568 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.057113338 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413612112 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.419817322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.231932163 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.249871951 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.414169846 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.413853605 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.730238174 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.433629644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.412902298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.413065542 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.41695495 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413539632 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.416443822 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.416564327 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.4133421 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.415690159 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.757303564 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.61373216 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.433627839 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.420039235 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996269598 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434570211 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416837795 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.419182655 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.415622907 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.414484042 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473985622 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.421496677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.430598136 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.416302169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.426944404 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068876145 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.415344999 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.415443541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.615536029 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.198209236 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.423139432 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.416230033 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.41547561 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.469377627 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028753545 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.45508586 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.766188825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.42578405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.45916633 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424507452 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42900089 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028095874 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419337898 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415493376 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.20321398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.418411279 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.89717755 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.418081044 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.41789239 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.139354325 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.417328901 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.418549525 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.416298905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.417671193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.724241355 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.417365167 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.460569025 seconds)
  done (took 518.384189145 seconds)
done (took 674.236046114 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417977949 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424394811 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.423518279 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.422683746 seconds)
  done (took 10.98404846 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.436269507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.424594847 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.433963753 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.425730181 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.435010987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.425474574 seconds)
  done (took 9.877277502 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417321677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424930681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.425097143 seconds)
  done (took 8.56354059 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.651617729 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.439121089 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.822749649 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.432872359 seconds)
  done (took 9.642460895 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.435305944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.435138712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.436261 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.436788947 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.435489431 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.438806092 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.43807362 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.435451679 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.438178697 seconds)
  done (took 14.223684375 seconds)
done (took 54.587449446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.44084116 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.441783788 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.584565246 seconds)
    (4/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.437586798 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.460359537 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491811424 seconds)
    (7/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.4505006 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.578306415 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.45533464 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.814252904 seconds)
    (11/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.401422515 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.585339619 seconds)
    (13/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.460268919 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.430292058 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.554196435 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.590286173 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.432872046 seconds)
    (18/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.508509839 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.421938934 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.701941462 seconds)
    (21/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.455326516 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.504266911 seconds)
    (23/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.649657906 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.764246905 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.541365024 seconds)
    (26/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.612657274 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.502983496 seconds)
    (28/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400455061 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.518383759 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.50690311 seconds)
    (31/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.501433423 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.527045449 seconds)
    (33/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.509946891 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.58720584 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.496423573 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.617910907 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.524071504 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.659556975 seconds)
    (39/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.522604773 seconds)
    (40/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.459009706 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.453866144 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.49334351 seconds)
    (43/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.402339584 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.656000306 seconds)
    (45/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.732359295 seconds)
    (46/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.508254055 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.401579972 seconds)
    (48/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.452100624 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.588597003 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.995044739 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.740344237 seconds)
    (52/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.588699692 seconds)
    (53/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.403167027 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.589366788 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.425600275 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.51359264 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.423965645 seconds)
    (58/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.416539871 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.444799703 seconds)
    (60/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.824541566 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.818433877 seconds)
    (62/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.40816545 seconds)
    (63/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.497393325 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.516360999 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.55470797 seconds)
    (66/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.438466478 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.464422277 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.817346222 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.40890021 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.457295731 seconds)
    (71/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.898572218 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.59471848 seconds)
    (73/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.412135472 seconds)
    (74/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.554445015 seconds)
    (75/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.604810706 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.518563819 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.550480176 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513526781 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.524020671 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.521162037 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.533371249 seconds)
    (82/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.629459374 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.588641565 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.735799231 seconds)
    (85/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.695661246 seconds)
    (86/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.467918455 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.492949254 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.533786314 seconds)
    (89/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.829810022 seconds)
    (90/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.606445116 seconds)
    (91/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.404074281 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.595863336 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.551386294 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.460431643 seconds)
    (95/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.461699359 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.757236021 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.457199436 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.480166255 seconds)
    (99/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.415068072 seconds)
    (100/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.458186139 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.617194364 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.508385234 seconds)
    (103/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.739436744 seconds)
    (104/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.662330567 seconds)
    (105/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.699909236 seconds)
    (106/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.406135796 seconds)
    (107/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.511009754 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.406211972 seconds)
    (109/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.591235896 seconds)
    (110/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.546812138 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.406502162 seconds)
    (112/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.513850693 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.458463521 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.408038208 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.70693616 seconds)
    (116/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.551821844 seconds)
    (117/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.547599199 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.471236543 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.543219212 seconds)
    (120/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.516567688 seconds)
    (121/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.5303631 seconds)
    (122/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.407301463 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.428604775 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.551121536 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.765486261 seconds)
    (126/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.407496194 seconds)
    (127/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.47423592 seconds)
    (128/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.530275947 seconds)
    (129/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.40959081 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.66372516 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.536913543 seconds)
    (132/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.531233286 seconds)
    (133/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.996515718 seconds)
    (134/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.408936324 seconds)
    (135/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.651090735 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.579272108 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.520973816 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.699340296 seconds)
    (139/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.47049035 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.692605633 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.499351439 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.498785374 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.561161733 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.644747407 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.63211178 seconds)
    (146/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.442056865 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.591023499 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.569204191 seconds)
    (149/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.594030475 seconds)
    (150/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.458874883 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.792809017 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.509110356 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.693938614 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.408885719 seconds)
    (155/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.550235234 seconds)
    (156/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.700124563 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.660007428 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.58845163 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.619644444 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.49562603 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.556788322 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.445975399 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.563940873 seconds)
    (164/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.409846012 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.473009664 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.507842592 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.464960654 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409549145 seconds)
    (169/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.624469218 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.545586652 seconds)
    (171/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.662407033 seconds)
    (172/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.519361713 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.495911654 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.74624408 seconds)
    (175/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.471542833 seconds)
    (176/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.452443473 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.432175546 seconds)
    (178/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.572528074 seconds)
    (179/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.439962745 seconds)
    (180/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.66380231 seconds)
    (181/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.600087547 seconds)
    (182/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.410789519 seconds)
    (183/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.5414455 seconds)
    (184/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.613212512 seconds)
    (185/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.749242338 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.639339182 seconds)
    (187/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.466963891 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.415655402 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.696412059 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.414259397 seconds)
    (191/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.552035391 seconds)
    (192/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.413126578 seconds)
  done (took 346.247652167 seconds)
done (took 347.546057086 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467821831 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.528719833 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.444617709 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.442978791 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444686121 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.434781234 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.467648112 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.444086398 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.459390391 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.461030603 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.436643474 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.454769875 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.459362302 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.457074685 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.476012522 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.442751786 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.4441943 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.455557239 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.4597 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.462841349 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.44595886 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445353446 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.471739253 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.443617522 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452154316 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452030852 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.450616457 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.436776676 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.4569345 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.462145453 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.451346901 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.456995825 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.463829725 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.458707343 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445689078 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.457100136 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447248825 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530589333 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.467988693 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.459899382 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.453960801 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.464117674 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.449770645 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.449914697 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.458315146 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.474323297 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454516461 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.459731771 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.436651121 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.458286763 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.47194322 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.460893181 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.455699756 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.45090912 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.456143683 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.465235993 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.457269936 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46943328 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.455063398 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.449040627 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.481066851 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467762216 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.459658082 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457181793 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.457577681 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.462430043 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.458658886 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.464656461 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.456427763 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449724168 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44945428 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.45856986 seconds)
done (took 114.30228234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.570678509 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.443060241 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.606574867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.456467657 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.617815578 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.571529318 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.45443285 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.456451506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.454411087 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.248551177 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.455915823 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.455349857 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.443937382 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.455646689 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.570647251 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.455865863 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.455134036 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.147421383 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.456925085 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.584123507 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.448334513 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.455335765 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.457453557 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.24514992 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.444540665 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.441859509 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.584682648 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.457357128 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.144058752 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.439216061 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.4429589 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.143225508 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.584083077 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.475538995 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.465927251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.4642821 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.617530597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.459577701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.572870228 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.57296619 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.609624117 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.49697541 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.442099973 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.447736389 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.461092986 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.459120012 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.458655547 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.486085657 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.446633056 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.458897139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.148189694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.468219921 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.468128216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.457534213 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.458873495 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.47844941 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.459634928 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.460745895 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.586081626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.461956264 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.574778477 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247594681 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.252712992 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.459090263 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.445513108 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.459325135 seconds)
  done (took 116.245964485 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.519413054 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.525872633 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.570181647 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.450718416 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.501064854 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.57069716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.450322453 seconds)
  done (took 11.905105517 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.455840026 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.459419281 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.499241229 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.500614612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.459389153 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.622971717 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459395609 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.462464878 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.460211512 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.501592738 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461029854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4605365 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.468875568 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.450840362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.498689871 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.463717568 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.569401111 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.452970171 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461340866 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.606672872 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.459025397 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.470064899 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.50272687 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.461710544 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.463080987 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.460121036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.237370975 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462617054 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.461410895 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.460874541 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.461758058 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.52045788 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.46238916 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.451054083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.461722995 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.568309176 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.463449521 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.462788262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.462682857 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.454593519 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.46413913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.463281427 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.462554635 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.462180454 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.46259505 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.477795503 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.462420299 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.462751131 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.462329369 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.463961201 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.503131381 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.46372546 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.464075991 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.463886043 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.508115044 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.472198797 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.46394843 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.463727758 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.462745373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.463915192 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.609682568 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.50327182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.463641438 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.503747986 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463852327 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.464466568 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.46451642 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.464294466 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.547693525 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.465432316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.504063158 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.461898374 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.637514603 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.48164547 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466787609 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.459226479 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.459079081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46510238 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.453137758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.463155985 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.464804168 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.458303834 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.464143561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.464872638 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.464555291 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.613476595 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.565571238 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.46716525 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.471772491 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.463762817 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.46589596 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.507780395 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.466950351 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.466463768 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50809543 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.575375484 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.508990027 seconds)
  done (took 149.875476304 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.470005688 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.470455459 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.462389356 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.485695966 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.458972442 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.45692448 seconds)
  done (took 10.126863734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.460826451 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.470123486 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.466814365 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.469490429 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.468244615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.467633129 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.46830812 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.459119966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.472988013 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.468320275 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.468731128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.469648754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.468885158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.469676607 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.468200586 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.467377453 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.468430473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.468426776 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.468118451 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469311274 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.456836041 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.470541425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470508025 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.460697105 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.472398375 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.470365973 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.485145916 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.47000867 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.469655131 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.465438733 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.472109669 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.472286818 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.462869176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.465314208 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.474879731 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.463126902 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.472419755 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.472187878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.470428848 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.472177057 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.470429741 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472275428 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.472664173 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.471059188 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.463764751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.466034883 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.476445518 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.485860338 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.470338859 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.471359944 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.471446259 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.470673866 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.471807653 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.471744322 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.46654846 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466862303 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.475356563 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.471757321 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.472964808 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.465509971 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.474101444 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.473335059 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.464848047 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.477047976 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.472538555 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.473062443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.46417864 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.47688412 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473555973 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.472423646 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.472697136 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.472138901 seconds)
  done (took 108.167356525 seconds)
done (took 397.634880858 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.013615423 seconds)
  done (took 4.341157883 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.560948877 seconds)
  done (took 3.889443426 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.250581764 seconds)
  done (took 26.583642879 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.568183846 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.557577945 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.49376026 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.456421974 seconds)
  done (took 11.402054372 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.791441372 seconds)
  done (took 4.119190662 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.46583662 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.482013969 seconds)
  done (took 6.277523464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.760128141 seconds)
  done (took 4.087562045 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.806691279 seconds)
  done (took 4.140263973 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.480611708 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.487569696 seconds)
  done (took 6.304160662 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.441740704 seconds)
  done (took 3.769911499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.291903242 seconds)
  done (took 22.621522796 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.484623689 seconds)
  done (took 3.816285415 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.508097633 seconds)
  done (took 3.837128933 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.611897509 seconds)
  done (took 6.940475338 seconds)
done (took 113.460360728 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.456793653 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.462208539 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.464788583 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.464872285 seconds)
  done (took 11.178507667 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.53860736 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.538138265 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.54703897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.534007327 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.532361712 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.540314359 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.501572103 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.500348682 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.531284074 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.526892982 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.543312429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.53251696 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.541843828 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.501208576 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.525557033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.544100307 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.531416973 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.54797735 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.50228223 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.532656568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.47478831 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.535169835 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.526452108 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.475099933 seconds)
  done (took 37.935605312 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.9608409 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.537884534 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.621456346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.517717904 seconds)
  done (took 7.969044073 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.58038819 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.581248522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.600453288 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.636963525 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.662218335 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.595827995 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.503117036 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.496334539 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.484576836 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.581437446 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.65846926 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.580235054 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.795693165 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.476500913 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.794064704 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.475424234 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.476693802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.581485805 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.630261282 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.661002642 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.478872073 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.581649977 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.583840575 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.580050956 seconds)
  done (took 39.407509195 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.485008674 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.493962646 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.478809021 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.493685457 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.479195067 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.478390361 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.480691991 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.486206077 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.477395711 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.477691867 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.479922022 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.493434241 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.478645787 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.477763281 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.485316402 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.481005126 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.480299293 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.486323988 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.488824187 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.480279073 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.479948011 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.488055573 seconds)
  done (took 33.96448952 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.463738134 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.461413059 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.815915878 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.719422757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.461775592 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.461350345 seconds)
  done (took 14.71909419 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.550764311 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.713742869 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.47616639 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.878082312 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.963660461 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.471543237 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.470528781 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.75422389 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.104821107 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.110569503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.537227851 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.550043922 seconds)
  done (took 21.915464635 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554782948 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473770509 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474396372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49588911 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474594164 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477613657 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480460479 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224895901 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.481342513 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750927643 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490711044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560138716 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.72424388 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47536311 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482854944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.452465583 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704680282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043276982 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48276257 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476307133 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507856273 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475442344 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482404504 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.714034488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477008855 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47586247 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.738502604 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475635348 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800125762 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776834184 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775073101 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480353222 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754190759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17933433 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583426236 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712762419 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495741217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483510818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.487265677 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.477970326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498391383 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47901178 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775537147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481729076 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477010655 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477908341 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250494493 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.485954457 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.479097561 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478032148 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779235563 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563254441 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.484229563 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479075893 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557658698 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478433914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.486563247 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616976105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123014889 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493936811 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496399675 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.485259638 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469095986 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503655168 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187473026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487132887 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.484901395 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.485344868 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478717403 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478883817 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501688656 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478226346 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.502092173 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479247916 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335908581 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497033574 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47983034 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087073508 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501506991 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.485540852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708367749 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481308843 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480031846 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.479379817 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478717148 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305253893 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488245537 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.449717546 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524184804 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234001066 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.717247213 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500953798 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509905526 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704051104 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.449080742 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481988004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.499476196 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483445084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503608355 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245975038 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481228131 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.487989849 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731486825 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.694150262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483706268 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.4720352 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006179839 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500342846 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.508415737 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486956282 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.723888268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.175109227 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788377875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484416052 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515405474 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48147279 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37482827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498569817 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49356232 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499285426 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788680734 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.40143966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483830131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556898958 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492708975 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482616767 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485878929 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483645507 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48239263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.69879726 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491678227 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789195146 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.485177481 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482313983 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.493733906 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484953637 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.484777734 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.707189184 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48194847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782566062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484689529 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483816031 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48438051 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.705097869 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496238845 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.491412134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823935651 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484461288 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513650757 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790619715 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518223395 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598006555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516127866 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.48720996 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.739361406 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.491103582 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.490946403 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487422112 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48662911 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486071214 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.492917977 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47628665 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192779655 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463738476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49557947 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484577108 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.502263646 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560581138 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495549084 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722396162 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.490174257 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499776957 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.494376388 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.484477099 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709988905 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786965748 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.487316015 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658051002 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.008246785 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19128082 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508064591 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.488379774 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.485699807 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.485636294 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487549889 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484625408 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488969705 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72461111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794816434 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499165253 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193292739 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494628401 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487611099 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.495430025 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788747327 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.497866579 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488696367 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.503391347 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486720272 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495678556 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795720578 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710425093 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.50431315 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488124867 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.051088889 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497879647 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48782429 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488531992 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516259722 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492639957 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395646618 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830406528 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503356097 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791578317 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490874575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.507742191 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.488289673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501701042 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502042524 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.501171696 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523855081 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.728394548 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496078082 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494058946 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130425444 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354277214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120469606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499529802 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.502162133 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49492873 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252445749 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489395403 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490414933 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765177979 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25306412 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490559906 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016310514 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.493895045 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360862774 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794204327 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720292518 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49927331 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.493881761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796129507 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.706136886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519384761 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491621079 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497127934 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.461262115 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092934179 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491466486 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671140282 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254121366 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507815608 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493927846 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.505833495 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.512842455 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945462712 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492789978 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492205369 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499022115 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513556538 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3986878 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502022153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492572681 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211712501 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500467451 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.027190967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493249564 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733720835 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797366422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.776260994 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.51173627 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.494907126 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.740625138 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798364878 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494919219 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499315765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130910513 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.353433429 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.500809903 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495101917 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375909608 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495222891 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849743709 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.497100262 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.499780106 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501549545 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495480625 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494959861 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.496400862 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501998812 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46696474 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066123077 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.498463651 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506132025 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503657203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502013949 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.744360138 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.512473022 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.193176771 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725256916 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492891813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534560936 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.500437344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495935292 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.465923144 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494709742 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496668182 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561545109 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719357767 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495923566 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.465129118 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.55548163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710368941 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496132947 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49687088 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.767951028 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.498771658 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.495570602 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367341223 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528620658 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497238443 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498369024 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.514742356 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542081953 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573019354 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736936986 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.803643795 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.801512798 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952956974 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498477099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521605127 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.515333992 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579569173 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497959115 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.514260909 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.502830633 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205092512 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367983766 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202963417 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806899251 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500959997 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498792583 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497798255 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74081128 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497943111 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774709106 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498581475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.489024035 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526937473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498051346 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504425952 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717455988 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773214094 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499592658 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498036417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50475473 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.498704018 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809554785 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.714640682 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074430324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126088431 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506784818 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50142077 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2753841 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777654421 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500368993 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502555997 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501213842 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.507977141 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503139341 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.509708226 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49908493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725436711 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804354477 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218098822 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804678898 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.537264897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.43699413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501070486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.770666861 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343206137 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.741419829 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209010666 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345722676 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762660171 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575497741 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743153747 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.503065521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740250221 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.516146065 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506694204 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501533074 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501955851 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.501607604 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.80615102 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227771985 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768208315 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.507769964 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.513634106 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539320691 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.744893584 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.727158156 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.345156968 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.72520677 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812120907 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511844646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50277406 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212437631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811657188 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506304151 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.509934313 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753450138 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505411903 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540336588 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.380305298 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.50457676 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132216727 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.721799371 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526457327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517352582 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353996966 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218938293 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.5072176 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106184747 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51217707 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512537575 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787397871 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.513538781 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522333529 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791994343 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.51140792 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522710511 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754307574 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.204958267 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383367923 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.524746872 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522917988 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.508005354 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507263583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548652928 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505603546 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5154257 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.968948968 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505872144 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506022026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519421429 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.518553511 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518148181 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.510638567 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507117673 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.51611821 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.484400374 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.477594427 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518601951 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644422849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117559352 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508006264 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.124684606 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.843618344 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.75612997 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.523134302 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.481713567 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.51351377 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507121952 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507544917 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50744003 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520826501 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118340753 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.52225278 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.817492762 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517024467 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.722293292 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720658326 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508528825 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753575665 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523002113 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533386312 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.478372144 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508156128 seconds)
  done (took 1044.879064047 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.512861898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.555604606 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.523062481 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.586625246 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.521647121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.638705825 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.606690785 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.617456318 seconds)
  done (took 21.92800339 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.516982622 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.514684546 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.513049638 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.514544849 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.513031002 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.05237202 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.516267591 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.514953091 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.523484525 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.507015341 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.518058654 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.218545968 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.510368466 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.518022604 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.516201706 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.514586299 seconds)
  done (took 34.853193416 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.629935862 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.685516559 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.93181066 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.559003925 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.522219315 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.53216228 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.849037638 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.518601399 seconds)
  done (took 28.594469917 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.515098059 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.516060901 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.515933492 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.516851616 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.517499001 seconds)
  done (took 8.946255923 seconds)
done (took 1307.622633101 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.51865504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.51790416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.517259895 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.518722902 seconds)
  done (took 7.440498413 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.481574446 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.481736898 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.485244858 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.504516166 seconds)
  done (took 10.319169888 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.321829368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.102535758 seconds)
  done (took 5.792581128 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.069763416 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.067157742 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.064336385 seconds)
  done (took 7.568533618 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.810286356 seconds)
  done (took 3.177984555 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.503291119 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.52036075 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.508399211 seconds)
  done (took 8.900432175 seconds)
done (took 44.567224106 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.516195673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.270951943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.6584874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511387757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.666335823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.660901398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.779632185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507821878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510420555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.508323215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514301205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.667195186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.769673955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.26787094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.768054196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.274170753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.666115349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502734034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.506497883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.518125474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.782609661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.507031266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.514270664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.508443937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.667683964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.650497179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.518206614 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.275241923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504893845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505809095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.670763259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.508995989 seconds)
  done (took 87.028769628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.504561154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.506507777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.506513797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.538450626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511247936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.506666079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.527604422 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.506661043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.506349642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.504253689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514537752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51067857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.503539988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.512628257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.508308625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.519533703 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.506539516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.505879097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.515052598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.505450185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.526915043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506020666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.506586342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.507033032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521215272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.507143566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.540979225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.506313639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.525059089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.519755776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.507655557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527802376 seconds)
  done (took 81.793081077 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.52258516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.506667622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528148142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.525131507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.508520365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.513474654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.529757736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.524765692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.51280373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.507396743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.507425236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.507938818 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.51045846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.507538854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.511903752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.509434453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.509026064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.530624675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.508689479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.508654993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.511093219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.523285639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.522958538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.519663589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.513999275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.509754658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.54156819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.50855159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.515684447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.514162439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.513750609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.531178788 seconds)
  done (took 81.888596957 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.753496956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.526333075 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.527294424 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.519206113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.528690576 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.524501588 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.52025265 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.756242048 seconds)
  done (took 16.029091552 seconds)
done (took 268.110124482 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.519669087 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084604204 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.554705101 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.519238374 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.543452808 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.547788361 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.748298823 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.546994594 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.734362243 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.538833207 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.536156852 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.522577607 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.462576102 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.66738342 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.389107735 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.520407444 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.512193062 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.52530963 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.162912797 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.778773816 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.547816222 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.512903421 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39496346 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.524588128 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.495045468 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.592942471 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.593375827 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.690282491 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.649089943 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.59220601 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.066941437 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.524496224 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.52596708 seconds)
  done (took 69.501052838 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.519412565 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.52914164 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.530606913 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.53012443 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.52902953 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.530699948 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.521452416 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.530376307 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.530602628 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.529325135 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.530407454 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.532059369 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.530265502 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.530535928 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.531269771 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.504009869 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.520962347 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.530079763 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.521807142 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.502126716 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.529065973 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.531742319 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.531133538 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.530499881 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.530811123 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.531445425 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.532007072 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.531149427 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.531408439 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.531144242 seconds)
  done (took 47.202639629 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.530570025 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.174522718 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.351029412 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.529977092 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.521731245 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.52812355 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.869434599 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.537493314 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.525682985 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.52569961 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.049057467 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.5352642 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.559512765 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.361135337 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.526636734 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.532393401 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.532202805 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.524528118 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.184919222 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.532897194 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.860383796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.532750152 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.862405739 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.533192132 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.527732215 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.525832887 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.531600589 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.377910826 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.548141846 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.04879567 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.466603173 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.86175563 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.316774183 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.428673981 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.479311261 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.541680797 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.532967476 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.056976538 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.527703062 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.525433739 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.869511007 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.530823539 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.387455124 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.237104561 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.546300709 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.535237969 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.410767568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.056611926 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.817258238 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.534786234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.418918406 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.534390873 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.537679049 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.527919336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.811618998 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.52912213 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.525463182 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.470596122 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.530910212 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.865187935 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.538786162 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.527765793 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.185009109 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.526432466 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.180463998 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.528870622 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.535155073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.52858313 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.389814383 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535787359 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.254847405 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.54917356 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.538208442 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.054912799 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.19521266 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.46461397 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.528379672 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.198694885 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.358257088 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.890922335 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.53855284 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350433669 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.894968855 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.538677865 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.540590407 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.53880512 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.538758872 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.605553344 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.873220247 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.176162612 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.249895473 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.517899597 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.885580581 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.541454521 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.53128486 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.4748948 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.53847136 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.537399209 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.387341736 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.260134193 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.549365348 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.535767674 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.243692574 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.55210282 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.879651093 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.539775303 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.435433258 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.535724002 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.607277184 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.538623272 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.53691113 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.535152102 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.877286417 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.540240669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.540382016 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.240043001 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.100014227 seconds)
  done (took 214.398095475 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.538318369 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.523935606 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.53925624 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.52520551 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.524691662 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.533323633 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.524892294 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.526016556 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.530983666 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.527122342 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.523166324 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.534768697 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.530881029 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.525251161 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.527154407 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.526169425 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.524642647 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.527694855 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.524712378 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.52663307 seconds)
  done (took 47.950082736 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.542384763 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.207145313 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.180444752 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.548173521 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.541908351 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.534000478 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.597547925 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.544450596 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.542895294 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.881302622 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.742524785 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.548240314 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.54361078 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.54381601 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.176228492 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.519172121 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.882524973 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.225634759 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.548806382 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.222317522 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.52102267 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.542830834 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.532223296 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.219132237 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.91435253 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.882667883 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.606350325 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.2183568 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.549236785 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.544808801 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.215186931 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.550364683 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.53482663 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.210871426 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.54970674 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.558858974 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.543668049 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.602961786 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.603246712 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.889533535 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.196307083 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.890816901 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.561979045 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.720467862 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.548593522 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.515047826 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.200477051 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.546143964 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.517486274 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.545442753 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.551008324 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.189503065 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.540395356 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.190462256 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.550197142 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.54478097 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.19197194 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.192183061 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.186129461 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.747974215 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.540903393 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.881691902 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.551755151 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.201837133 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.546679479 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.545233025 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.544915505 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.745740275 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.202947396 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.88344724 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.891708658 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.889724936 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.546339274 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.615046801 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.546744349 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.888215052 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.612505843 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.986595004 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.893120177 seconds)
  done (took 140.895665988 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.849807054 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.663485207 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.962276484 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.159446354 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.092491002 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.685300453 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.663189908 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.804322283 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.543311392 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.647937285 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.278013327 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.643552779 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.387905222 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.618203594 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.658758568 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.669543164 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.982906074 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.537509378 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233801665 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.253157601 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.54181188 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.651005385 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.076522367 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.767829286 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.557901349 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.180625228 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.559582391 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.125326126 seconds)
  done (took 58.186627085 seconds)
done (took 579.510686692 seconds)
SAVING RESULT...
DONE!
