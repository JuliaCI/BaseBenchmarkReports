cset: moving following pidspec: 21989
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345375272 seconds)
loading group "string"... done (took 0.557294624 seconds)
loading group "linalg"... done (took 7.625042787 seconds)
loading group "parallel"... done (took 0.168932298 seconds)
loading group "find"... done (took 1.273640987 seconds)
loading group "tuple"... done (took 1.941733726 seconds)
loading group "dates"... done (took 1.403035816 seconds)
loading group "micro"... done (took 0.244339135 seconds)
loading group "io"... done (took 0.988291855 seconds)
loading group "scalar"... done (took 40.763695497 seconds)
loading group "sparse"... done (took 13.409789613 seconds)
loading group "broadcast"... done (took 1.042114878 seconds)
loading group "union"... done (took 14.269607313 seconds)
loading group "simd"... done (took 4.762250068 seconds)
loading group "random"... done (took 9.659474129 seconds)
loading group "problem"... done (took 1.985729299 seconds)
loading group "array"... done (took 22.729816522 seconds)
loading group "misc"... done (took 2.055026196 seconds)
loading group "sort"... done (took 3.456332189 seconds)
loading group "collection"... done (took 19.66256738 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576070982 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14332208 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149785107 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131205709 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205179947 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155739611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158386836 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09914531 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.969448656 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182463858 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15384699 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528744034 seconds)
done (took 5.192020166 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.26342219 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094576641 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104596095 seconds)
  done (took 0.885175114 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07783625 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145971101 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09589823 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078689737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095290671 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079469284 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097339334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079759732 seconds)
  done (took 1.363982865 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086370587 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097673934 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081139883 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097564436 seconds)
  done (took 1.056497651 seconds)
done (took 4.341930694 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735739451 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274671027 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205492305 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466059986 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193585936 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217356178 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685321434 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.369246886 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256826876 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099274868 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135535253 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389168227 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137808137 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685311377 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089473491 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124639043 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180185677 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45832498 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082728195 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109960102 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116828576 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143840453 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127706082 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091181712 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18268839 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083292978 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194193885 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108725374 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080424469 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275139105 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200875598 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691194229 seconds)
  done (took 10.923351131 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110802033 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134833414 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09780656 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138532278 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137956884 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102737932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086620615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099086683 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125439041 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176108521 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130906977 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121908443 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096555499 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082572832 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115549743 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245657021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120328479 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09983254 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100751066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089793882 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138277877 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11407214 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109277884 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094165884 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167751498 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226218391 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113761287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127970867 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099745189 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115709652 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145767037 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146187351 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097276803 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082017898 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176942308 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127340238 seconds)
  done (took 5.200503493 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09890588 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191597055 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12233867 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171586365 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080653055 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142983533 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095612486 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113671684 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25750185 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187537476 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49190653 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142442151 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099487276 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099600054 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082669173 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097902474 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.623868294 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123038588 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150900589 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115697477 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103053298 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086728792 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37030861 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096219482 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080659973 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099134251 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066870243 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163850698 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100059086 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.153374146 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102211914 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102378325 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134709344 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194692007 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127977394 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127352761 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136165574 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080158486 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098636313 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176957918 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087315305 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099117807 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121851733 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136821476 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121650213 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101587466 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09980765 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205199699 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095858088 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098100796 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.934692579 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183219826 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105660773 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098193491 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288184542 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116826164 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096742219 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082738627 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295655954 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195822573 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100244949 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081146388 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098003681 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080482663 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396738805 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08170108 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.975604471 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086233865 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.111007057 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083576995 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097218539 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12145512 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087098157 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104260306 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098052039 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095752076 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079401075 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099719891 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095637296 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079577105 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098406847 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091385495 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.231096056 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082115899 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096787452 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079234593 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117230863 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127428102 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085585039 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096534722 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116034122 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10178164 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099215754 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078133385 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.1348493 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081052141 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10913147 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099023469 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143154316 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082638972 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.151732789 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081355616 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126042312 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099903195 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114731002 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114664385 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099208498 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169615164 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078499009 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095516211 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080101216 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09771519 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081798465 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101210328 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112290363 seconds)
  done (took 23.210430729 seconds)
done (took 41.123802792 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324238067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103603446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103807823 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10318181 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101207594 seconds)
  done (took 1.503390132 seconds)
done (took 2.243053706 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287762087 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17486399 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097436502 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167982186 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093434548 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164891022 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160436764 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094967492 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219834586 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094156916 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161164567 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076900825 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094491656 seconds)
  done (took 2.655034429 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094682192 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115176299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082478633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110657351 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078248451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113520183 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096016201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120056442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112026592 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08809506 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097142124 seconds)
  done (took 1.844924688 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095018961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11465017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08464524 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11272218 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079191012 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1126753 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094415406 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119981279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112510518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087436099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09573702 seconds)
  done (took 1.845012522 seconds)
done (took 7.074492322 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091368062 seconds)
  done (took 0.824278499 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.946659929 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.727313631 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1127671 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149327992 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314656577 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171595361 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466047668 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124491835 seconds)
  done (took 10.953739772 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.146811577 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084454832 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102508067 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086800871 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103400603 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087217512 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105292461 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103031891 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085641514 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102084331 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085664082 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106102714 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101902665 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088616303 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101147632 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088578068 seconds)
  done (took 2.380688227 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12050741 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118176215 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107435404 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108512498 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087774802 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106016082 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107784558 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090229307 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105310577 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106713102 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093524409 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108709508 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105052659 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082287664 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109366741 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109698725 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088800071 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1085217 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108784291 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09283145 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109625819 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097618834 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090016368 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109014842 seconds)
  done (took 3.321144011 seconds)
done (took 18.219102667 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16012232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109480685 seconds)
  done (took 1.009152663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095745741 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112886939 seconds)
  done (took 0.953815815 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098661013 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096504175 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123548248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111620544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083588444 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099872439 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123587145 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082859366 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099315748 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082522302 seconds)
  done (took 1.750138181 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08329515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110653803 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102219662 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096056193 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10786811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097142037 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092157943 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101460072 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113987756 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079894715 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10496745 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117728474 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088763626 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119500051 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10768469 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086069919 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105134033 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100630297 seconds)
  done (took 2.570318535 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080530406 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098017084 seconds)
  done (took 0.930499842 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0820326 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094658926 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081689027 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098911937 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096310041 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079445264 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096810289 seconds)
  done (took 1.380460066 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485216893 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136525568 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260566416 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103825895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106161629 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302812735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099003669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085391436 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103900093 seconds)
  done (took 2.496292594 seconds)
done (took 11.835737153 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094115311 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114592331 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114506203 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468573786 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108631218 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098632914 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148056955 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254352132 seconds)
done (took 2.156116046 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143723186 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604385411 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.430480988 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232689691 seconds)
  done (took 2.025152419 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405606944 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.10044517 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086132642 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083459129 seconds)
  done (took 1.43552109 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080631045 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099891335 seconds)
  done (took 0.937294283 seconds)
done (took 5.297977988 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081124337 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097740988 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078460729 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097797375 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078401112 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095296879 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0808102 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098125378 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.082996222 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.099486617 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082463317 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131098468 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095471473 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07902573 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100070361 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080797265 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098301338 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080434247 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096756599 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082685903 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097105291 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080569776 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097342518 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083083274 seconds)
  done (took 2.968543945 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10051926 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098375434 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103930054 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087241115 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102935995 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086929643 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105420897 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099729742 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089391798 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104112993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104049965 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089329819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101220806 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087019023 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10322757 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104241793 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08882273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100920632 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084727614 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105378263 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10565375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083936044 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105204814 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105701004 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087139717 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10399307 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084829227 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101153475 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105784578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087366046 seconds)
  done (took 3.679132865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085914884 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094962456 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079797264 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104399634 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08038468 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100039115 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080370714 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098127047 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082293826 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097947714 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08215398 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097855942 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08061406 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099639874 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081139589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102469141 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114402986 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081255265 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097902075 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081417428 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100985881 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080730782 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09875523 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080614674 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096841939 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079455054 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097421102 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079792899 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097270241 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079572263 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101315944 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08476783 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099022293 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087470511 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102242682 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079498474 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102368661 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079311641 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098861082 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096845613 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080480661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097252212 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080973865 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104234205 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081385372 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099972815 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081180312 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099422333 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08191097 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101380521 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080397026 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097836509 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082194764 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099795129 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084507801 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099142985 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098121242 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081099357 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099479806 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081271744 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097139578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080982875 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099925639 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081664383 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113466454 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088126122 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098462939 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083633284 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099498407 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082674918 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100405325 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112903744 seconds)
  done (took 7.36158831 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102885326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127550964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098542245 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099878716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079784855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098917697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085804351 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098206657 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08384166 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105133948 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098658418 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082864685 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100267133 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097096456 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098871265 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083435331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106163789 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096795461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081303479 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102796221 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082251773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10177604 seconds)
  done (took 2.882225747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210327293 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106789856 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145856289 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110192329 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085888974 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109795335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104770599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090010387 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105075785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085600675 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104447326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105271618 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.198593419 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103070449 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103074289 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087735692 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104596949 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087899022 seconds)
  done (took 2.819303866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094043116 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099231694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099593514 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101543392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10120979 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087332945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108046579 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110912271 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085293278 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09892055 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091815719 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101761686 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100836461 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081907099 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101710678 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082159871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101451647 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082130476 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109009931 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104447176 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088229271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108141352 seconds)
  done (took 2.913572565 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097738707 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10086499 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118741518 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085640507 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09553715 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081185665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105180607 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082158169 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107858649 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099733553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083212687 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097767986 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088338548 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099659349 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104023275 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082015672 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100619649 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083497373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101114721 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078306215 seconds)
  done (took 2.665776666 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103330973 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100544022 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101010994 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093248299 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101866066 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082580797 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111121478 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09999455 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082898452 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125789484 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100110068 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083559122 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112313964 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109201413 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103241247 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095369946 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112720485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112689527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085154238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103398352 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127681303 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084814409 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112044373 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102759389 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085935798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103421598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10253795 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090698413 seconds)
  done (took 3.605245248 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081932465 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09856397 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081763649 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096425687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080504101 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098880211 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081442331 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098586959 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084578777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09892971 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084825103 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101438989 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084182266 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101028459 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083948499 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101519345 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084480693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099477682 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081717539 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099198012 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084327348 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101516558 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084188579 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099751387 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081329653 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101726255 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081559309 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099514796 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083485449 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099366423 seconds)
  done (took 3.520130819 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091917045 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106324801 seconds)
  done (took 0.976969842 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080274386 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115386502 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079749306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103814205 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087280005 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101043398 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107516991 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086611695 seconds)
  done (took 1.539048318 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097773202 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109865909 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083523543 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114721537 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109376628 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099302047 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172148077 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101196217 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087789942 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098344568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112822097 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081074689 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107683814 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083535925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108097118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090707319 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100996822 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108539548 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088857224 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100958466 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086452645 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11553282 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087066448 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100889329 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103676674 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094972906 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116910925 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085636457 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107472622 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110096733 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090953774 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096638176 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084431465 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104203103 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08183534 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113703713 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120046897 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088429789 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113188092 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104504085 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096645281 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097841642 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088953543 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108812198 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110957068 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084839804 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104013156 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080081261 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100444674 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086944645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098039974 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084787161 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098536439 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091342037 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106590304 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112008238 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083988439 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104174243 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087145109 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107406689 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09101037 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.1058299 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104398109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084023238 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109587125 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087824018 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112244679 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094424975 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077028202 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098314462 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095480677 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124580288 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106806347 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083874534 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101140005 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081168692 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103364042 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084189936 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106478837 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105940259 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083679306 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107700576 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089889839 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100443013 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10184545 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091392933 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097965446 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085627104 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097529801 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117829005 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082464701 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098025998 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082000663 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115352478 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088055113 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103921146 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082021542 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111883108 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096406326 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087410682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104125575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086429831 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116180344 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10930505 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090726488 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11147361 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108444727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082908198 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103157567 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079939745 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102179384 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085597155 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106900887 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076530308 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103564404 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083677556 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103336792 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109406782 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081797698 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100162863 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090115143 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107237978 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098904536 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079922756 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103240512 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083294645 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10428704 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091098417 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099948996 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077285764 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096202694 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103010854 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083955484 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103162125 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088183892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104376538 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077000433 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099979301 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104585985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093048762 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100750608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082863328 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107776374 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10083987 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08290556 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106278552 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086492224 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099535357 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088071406 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101732128 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076886586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104734521 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102612038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082116307 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103893062 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087295847 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104262488 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100660992 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082102758 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106164853 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084612459 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099258973 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082425175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09954444 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110535681 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084799508 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095284224 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080828375 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108736206 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080458545 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100557995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081635924 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104011737 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101370885 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08186635 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099024976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084811834 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113510482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10499486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08460693 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106527937 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095591355 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101577829 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085395809 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100702273 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101462784 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084042602 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110636714 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089029531 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106710079 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102580174 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080279771 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105856361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090888888 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100041417 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081198355 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099777076 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104666809 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088833336 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104300428 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08422266 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100387399 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083469675 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105150715 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102831834 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083323063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099521365 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088461419 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100782077 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108168982 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084764964 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112411307 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086418556 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097789187 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086564755 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100408783 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106652333 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079238556 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098231538 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083255621 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102147853 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082685386 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104001617 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077022562 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108733059 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107716373 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083610806 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099763768 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084327115 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107848857 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084196831 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105099259 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086058598 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108123853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112548361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08290197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104882198 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093821477 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103746575 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094737003 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088413504 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099465005 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082784694 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099353069 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080858832 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10468987 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110280453 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090760728 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094670419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086663197 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099977183 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081566919 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09802525 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087693612 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104637854 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101326681 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090276069 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10242086 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086321081 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105153189 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082307535 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103353569 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101704365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087137715 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101859949 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087023726 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100613051 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085674656 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101481392 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080891464 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103043263 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101012086 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084018878 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106742419 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082716005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101559881 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0854702 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10296536 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10134014 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08449399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10020457 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087268267 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101846929 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083785692 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104900938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078174296 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109325321 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081892569 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110751025 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101218433 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079984855 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106024769 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085360248 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107630046 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10177909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08476505 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10316865 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083214756 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104487301 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08928322 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099737271 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112967841 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092707486 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10156374 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085990262 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102232752 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08432303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101576434 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101548192 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085084632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101717299 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083660809 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106368187 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086900825 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102687883 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085722032 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103872417 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100705231 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085574364 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096108821 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083547029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101615165 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084515623 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112467534 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10158341 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086573098 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099908978 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085026289 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100427195 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080248871 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110486584 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11111567 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085517768 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109639032 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082137103 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103779814 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112184666 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078241129 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100047779 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082100496 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099003207 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092025359 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103051346 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099965709 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102514123 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100336088 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081473479 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101761855 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082687606 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095593653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082179708 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105961396 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086275371 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100679232 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082797125 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105310587 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102004653 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094154332 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101356428 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08460169 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102682927 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08011164 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102084533 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099704448 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087089149 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102552191 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081379504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098455828 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084290453 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10228272 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084531035 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102304357 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084752581 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110107744 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10055713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08659065 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10622653 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077733045 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10510671 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082614684 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101849682 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09992224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088697419 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104534199 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084774019 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.1112075 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083323503 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10361878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102387269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08236068 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101710924 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083626637 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102219748 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082652872 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103764049 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091173634 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101164302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105186728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084357008 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101821163 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090769942 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103211767 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08649931 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111181889 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104169178 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085453652 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110707036 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087049776 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107060759 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102320415 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085738299 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108224348 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082543025 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108884273 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082414949 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103721256 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103632437 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081569978 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101228242 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085655913 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101025472 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090524981 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10426655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082072829 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102140052 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100480505 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087085221 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106795487 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092691327 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106246638 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086588236 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098619663 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079902488 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104428797 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099775082 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085847627 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104734331 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09034236 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106232889 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083941477 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103074852 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111579534 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090492988 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106418315 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082659926 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10738221 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085010085 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10502602 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103280793 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084522502 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103778242 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088466529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104417544 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083166302 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110130897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087110804 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105465874 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103803091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085405452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10286675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080028796 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104300423 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085982248 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109398749 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104305713 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085557967 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113937748 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102761632 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087535727 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103587122 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106685579 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080605722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103727427 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086808654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105352279 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07972602 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10299398 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081211553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10628112 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082023259 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098483015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113150401 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094385757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106464143 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082725113 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102303788 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078424249 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098811496 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101702742 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086807066 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103731676 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095789294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.1026422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08301072 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099102181 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083254067 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106749067 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106110659 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081787959 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098904848 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083589196 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105935649 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089748281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102203578 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083749016 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10735057 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105141351 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083307107 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107112681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081434113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106888608 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116228127 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086610847 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103512997 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091621015 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112343799 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084893873 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098947252 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103765185 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087973706 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102669983 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086291972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104628692 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119777338 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088214805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101218254 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083842252 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105479184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084628651 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112223831 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104045998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086046839 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107662247 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08748853 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113728359 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086338314 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11371258 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107044411 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088088603 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103565028 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084775556 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102523803 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082695111 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105821513 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104013377 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090470799 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114525038 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085014239 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120624922 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117212212 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092905628 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104077262 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086760522 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107573641 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080059441 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108267991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082044906 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103266609 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101462747 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083842172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103713194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091458055 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104536981 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085669489 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104104017 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078110837 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106709 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086180047 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10540694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100496825 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085629776 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104606057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089662364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107862416 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085316637 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105720024 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085737686 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104904582 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098691748 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092731198 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102170419 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088391217 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102579491 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084887617 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105228467 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087641447 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1113815 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104745411 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087111259 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116824996 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08608311 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102624883 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100456435 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090712557 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101400718 seconds)
  done (took 58.300739941 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147041456 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082000367 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098773741 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080722029 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113724233 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09945344 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080141444 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100396758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081325306 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103345067 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080391668 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100040414 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109655674 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125276125 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094338662 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105503216 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079531059 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102263216 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098812203 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082093105 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110137318 seconds)
  done (took 2.902742533 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105116783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121282628 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116538012 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119773746 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090486587 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116007562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115501726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11541457 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099247079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112362534 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119578844 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115799375 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092436782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113167958 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111404263 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093866817 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119219553 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111183388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115322654 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096517702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113596959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115572901 seconds)
  done (took 3.258652925 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086345264 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103301517 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08609168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09867131 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084865729 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098044334 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089030797 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101598936 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087195286 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103516629 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081716695 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103614664 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105009031 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080147815 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103094828 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082641484 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15316438 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108476572 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084159483 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106679515 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079168869 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107570602 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099212059 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081121487 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102908285 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088985874 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10547598 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082233082 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103635541 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082858371 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104949529 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081548001 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105771498 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103759062 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084737244 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102070892 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084756736 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103662541 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080881165 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102298132 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085272943 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100062702 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086136377 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105855021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081545206 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102966366 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085002102 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105121442 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098195956 seconds)
  done (took 5.516879169 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104785531 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162255066 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086942944 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144864088 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121408286 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113284762 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08853427 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14261487 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103191825 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082412078 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12330014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121687377 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104705582 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091288688 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108300073 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103974657 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08655776 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103382136 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089391852 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105010682 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108674025 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091921081 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120566032 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119026924 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10810959 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083810192 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104222494 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108895544 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099046528 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110383332 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108473785 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090583795 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122551195 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110524176 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083993076 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10791185 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122054889 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083857862 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107891546 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101017638 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088128754 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109879994 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110541881 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10305473 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105945321 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109842777 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085622602 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102576621 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118240364 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089119329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113829548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119669343 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088680367 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106790855 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109395034 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121075648 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085311223 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102528692 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089026233 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119344593 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102800612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089391217 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119792463 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106888203 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092914602 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121006713 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110552972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108298699 seconds)
  done (took 8.187471464 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093529849 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111797567 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121420171 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121349546 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091762868 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11238409 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110757177 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091897293 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112172473 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117637051 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111115099 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134821349 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086888019 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114944314 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111497146 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092205243 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11258491 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111364899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091367219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111901864 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111959974 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120484998 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091125949 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120966501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142991194 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106303601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091044761 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113210925 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120857187 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11104527 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124963412 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092162707 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112468651 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12065452 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123901235 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092472464 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104317491 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1102142 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092247238 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112162538 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106267173 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101527586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111694862 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106439253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09130121 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113684866 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121558983 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125005307 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11505518 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098168499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113341261 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12071898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11100032 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092469336 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120864951 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147980464 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121201594 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121611053 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111737883 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100946209 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122116911 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128846915 seconds)
  done (took 7.724305025 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10762806 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116296411 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118215489 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100854495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084292444 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109622514 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082763226 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103848949 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114172103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095026009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117997006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108647862 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092763588 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118073694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11027169 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112957545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089336732 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109470116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114415305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088723743 seconds)
  done (took 2.941150755 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095215562 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125112266 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084999049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113384299 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109107678 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091422557 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108135811 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107834428 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087371286 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109072436 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096090508 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117213422 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106794803 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092312357 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117522216 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112799515 seconds)
  done (took 2.524920721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100437361 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117862262 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121442869 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084655005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105312749 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081413409 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106583758 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100994459 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082192061 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120596769 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085685799 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109884943 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105386798 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083699233 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102346246 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088245208 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102421933 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082513172 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106353861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120453244 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09681047 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105547956 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105681378 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087768911 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106623942 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090815873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107032443 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103028325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084761101 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105819185 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085753795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11432937 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102040766 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084317608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103074878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083139071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106369872 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085529242 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109204664 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105599773 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084731518 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105678207 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085530505 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107847358 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081158128 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107717304 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100992823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092519936 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103313336 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086017846 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10572942 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086751094 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108301829 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116511838 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088875136 seconds)
  done (took 6.293148914 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099507394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1093569 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080957229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10450997 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08741732 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108682679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108859113 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089456456 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107976682 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08383637 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108205443 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090317892 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108820616 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109057802 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088723887 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109213982 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080968266 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108831753 seconds)
  done (took 2.640684786 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092512015 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105604469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093172781 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106753359 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085095329 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109587048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080893065 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106486984 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103591294 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086650632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106092202 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089119965 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104119796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087866679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107183746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08496708 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109497248 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103425346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086771862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101353879 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088178174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104313972 seconds)
  done (took 2.997439813 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.1190986 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126003987 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093430597 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231693832 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104596712 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133587981 seconds)
  done (took 1.663052573 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110105054 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121002505 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105849961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10828633 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115487072 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086606894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108788973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109041619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117786456 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102850002 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108980724 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118438194 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117628236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097798144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116095399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114809645 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107400534 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087763207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107576945 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128574875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088550588 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11895281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108419823 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087083619 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109827582 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117598468 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119086613 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122760862 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088187275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119223082 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114585089 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088053094 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119062925 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122708015 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108864606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098953638 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109372622 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128607353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114126739 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097156863 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110158003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114860625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098126697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115442965 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118408252 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107484507 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093432545 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108810499 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108182478 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136087625 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095180932 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118370359 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11509384 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118438101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098279192 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155327417 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102523704 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118337078 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116435414 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122661602 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117913306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094952924 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118370971 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12350336 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115788044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096553475 seconds)
  done (took 8.169322782 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103454819 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127072085 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108335309 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124008752 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098224454 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10903888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108175927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088679102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109507287 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107542887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152068133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090696274 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118425269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11875186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087813329 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109847067 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109198917 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117399883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088744441 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134963421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108758616 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117771907 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117874933 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097109651 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123673142 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115766068 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107681994 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088478701 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108939306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107666781 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09424342 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110213493 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118249788 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087258864 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119137704 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109753498 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087686176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114879594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108996222 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114488402 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09769832 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129345336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110405313 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10903276 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102938819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110024414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109246109 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087590494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10986459 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107339164 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101828581 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123112142 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123655229 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118896354 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108742943 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088718951 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109859227 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108592968 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089036553 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116376804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118249076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087754675 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135753726 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110090652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10908448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118351787 seconds)
  done (took 8.078405198 seconds)
done (took 156.882936087 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.237070162 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201962069 seconds)
  done (took 1.29941198 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088964704 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13702803 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096722308 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172094697 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08587344 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141542404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138888598 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099054745 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107101197 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086291893 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107429859 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087976415 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.177661676 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086774706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107531465 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108036055 seconds)
  done (took 2.695628772 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118952686 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255399666 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126402983 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105309153 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0901603 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110153793 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084729978 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112302886 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089866343 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10592502 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088794565 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108755083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083704366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108330528 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110656638 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089582337 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105100286 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090341763 seconds)
  done (took 2.853048552 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114639155 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148952317 seconds)
  done (took 1.139068981 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242841819 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.16441037 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232083478 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475995384 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277308752 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368140735 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20589218 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.214748487 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167010107 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.211334594 seconds)
  done (took 3.428479293 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120064385 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182494247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319112853 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156074036 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10744512 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130605426 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157830971 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131650099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.12329858 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101374018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123761317 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119337638 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138429962 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09646535 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116433438 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117915483 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121387281 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115485492 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115006677 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09620353 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138935723 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084874432 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116731224 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113259979 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097891058 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120251845 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106706072 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08513747 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116822262 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093050887 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114560438 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126396604 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118508962 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156395614 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123383103 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157896206 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118679563 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09223303 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116060944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091164872 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120584382 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119626373 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124985706 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098420332 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106647901 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097904967 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107250989 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083988064 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116236794 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119139142 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093900091 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114987058 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153644091 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11989788 seconds)
  done (took 7.427555815 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790164148 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156829667 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0894991 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880841153 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135955708 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10500402 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775985787 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112127642 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255960233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752341708 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13381186 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1200616 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207000401 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26014181 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.003145769 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292829206 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.643428238 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127252519 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153598504 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154040074 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119058349 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115486777 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132048517 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453216918 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117906465 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089038401 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119150292 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119697526 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161223358 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125322456 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092528945 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200603407 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251543003 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205263707 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094579267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113201885 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088531189 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193380295 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266713541 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196187885 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180874865 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109675883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089315739 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123230381 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133042233 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086306648 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185922189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175482977 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171884049 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11573025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118865137 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098014217 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122468522 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164523032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123093011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324061873 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317102796 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089468453 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121880995 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126508267 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240718744 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124874807 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226753893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140639519 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190873857 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113143306 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805316907 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170607195 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096285918 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120992065 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116225251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099014044 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169866394 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393722122 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125367909 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115112176 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090494123 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22702405 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103397132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113058766 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162572998 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118063 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120747203 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102532245 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123285626 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169396354 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256644572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101092131 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120292141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115589571 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104132594 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117924562 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212080921 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219780182 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163218738 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232278961 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101129939 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185951657 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170319212 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118989161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173846881 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119758962 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103718454 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124063559 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217220772 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146105094 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123963163 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094633291 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120241504 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148939554 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126957408 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097930734 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1927727 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479615888 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168780721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111114987 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127965714 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098916787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183518938 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097009749 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264182851 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122043641 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170219663 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118848735 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088458082 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121591398 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163559903 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123232984 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098712603 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12377838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120948968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235480569 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217000219 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121646074 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221984594 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18395 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119125365 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172475078 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123096987 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16783677 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120795169 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098247822 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11852684 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784656311 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123407702 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098703082 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116880949 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196488408 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089344526 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125929878 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12584163 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086448184 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777098282 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128231713 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12153441 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10357357 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11886658 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120475496 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095938014 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117385198 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162324526 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231005132 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12013445 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0980385 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126375265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162328102 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118402397 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125961707 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124515379 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104456817 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123539317 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115185027 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10392519 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19204585 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165835807 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220417982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572846981 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114749239 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125873375 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204969523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115104921 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289735712 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119455087 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206068618 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186331872 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099663227 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313344674 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164092379 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197695959 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12886669 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175431111 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110717461 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11846654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16527688 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111604361 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097088651 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16290896 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126476066 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124346605 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958721126 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089724735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247855441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088172496 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171754346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118351881 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12018415 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296891448 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091488266 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128872783 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16627087 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116531596 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124002736 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702489042 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125317307 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09985352 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119004103 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223107324 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164593615 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121873848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120126313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097362439 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209699671 seconds)
  done (took 44.194272323 seconds)
done (took 63.902251469 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280279358 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219515579 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270301019 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17251202 seconds)
  done (took 1.920728715 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172575381 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150048322 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122621248 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109167015 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151122999 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084476758 seconds)
  done (took 1.688970107 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365507627 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281415292 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244891351 seconds)
  done (took 1.793971134 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320488839 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250760246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.480098815 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32690732 seconds)
  done (took 2.378482718 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21178957 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133726776 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111825267 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104337154 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198945256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247385118 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142712958 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203430135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098244461 seconds)
  done (took 2.397687763 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19896816 seconds)
done (took 11.282708835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.183738299 seconds)
    (2/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.169920442 seconds)
    (3/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.255376993 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.216134369 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.123922134 seconds)
    (6/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.253758252 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 0.171144357 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098040305 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.228266089 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.145834948 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.214296405 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127792954 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.136030263 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099960635 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118474616 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096374322 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.150173952 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.193265478 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212500103 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098103637 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.197941177 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.223380872 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217269565 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117028043 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176707903 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.166414606 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098346924 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.156005142 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123928182 seconds)
    (30/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.196821442 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113763909 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135235186 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.182214395 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.088519081 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11936578 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204359852 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.182422107 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127158869 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118456314 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.208701017 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.218754876 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.085994725 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091414669 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098188618 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.252170648 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.126787853 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.170872325 seconds)
    (48/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149296999 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.220968021 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112685449 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119002325 seconds)
    (52/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198976364 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098321107 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090931976 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092613824 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137012787 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.201662899 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135068281 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142559513 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175554716 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093546328 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106849768 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094020249 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154562221 seconds)
    (65/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.115360681 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11127856 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.12119459 seconds)
    (68/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.188345728 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149694528 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134272768 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067597368 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111916372 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.226305278 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083231602 seconds)
    (75/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.178260662 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089514378 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188899394 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141941042 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118313532 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096195328 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 0.189749967 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225308078 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090454465 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.196187608 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.121983892 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.187843263 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195623185 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087150966 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.182586506 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162335395 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120791539 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139155944 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118551955 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097656179 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.216457147 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.11112449 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090642233 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111003088 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11392546 seconds)
    (100/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120660639 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225930546 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.141841582 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087482602 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112612841 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.191816856 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09469186 seconds)
    (107/309) benchmarking ("sort", Float32, false)...
    done (took 0.174429848 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068004365 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112918777 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084421252 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.15565741 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126637317 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0983959 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125961797 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066854557 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217811562 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132269884 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.348088517 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111408818 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.199890035 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.114454946 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092508076 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068066222 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076071582 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101165199 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068247972 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154997086 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086271336 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117548198 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093579235 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091015161 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086756099 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.09843288 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.150231618 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092454515 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170497134 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112646954 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108533218 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151163684 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114035579 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.121815438 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.181116527 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11992066 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 0.181302622 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095718028 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11795318 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093997633 seconds)
    (148/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116641992 seconds)
    (149/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.114831527 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116023393 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092085849 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117859473 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137905798 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19527451 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076938638 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085595999 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.150100604 seconds)
    (158/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08314546 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128129061 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117140461 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089111111 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121348039 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075993598 seconds)
    (164/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072964019 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109591843 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084856931 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117982973 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066755101 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157324656 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066331941 seconds)
    (171/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.10609595 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119303647 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118881037 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090792653 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119863337 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109835265 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068466482 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09436458 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124625879 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065675704 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110658787 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095582496 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137794892 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172735006 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099709966 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.097289434 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.190490968 seconds)
    (188/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068351559 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.136426998 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069212396 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132745996 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067892825 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09190087 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120983557 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187449363 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085699071 seconds)
    (197/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.138002742 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117277965 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118173414 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071879098 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.154619549 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119669916 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.126285048 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113438227 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109907008 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103449555 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.148195213 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087694837 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109134209 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068686138 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.175116262 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087089436 seconds)
    (213/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092025683 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070135432 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116715732 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087407854 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066759758 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111907379 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066774466 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120798806 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093844386 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11684883 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067084296 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176084514 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066700232 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135888523 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137094466 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067730413 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115218826 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.162121823 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110044248 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.136318006 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087694552 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06656989 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177187675 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111825953 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190847766 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093725966 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067325982 seconds)
    (240/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092238358 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087130981 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100023434 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069518821 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091738269 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.091133848 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067656228 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178964609 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093118182 seconds)
    (249/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177058488 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067068305 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.093092866 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094407743 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135534968 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067421535 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132802796 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087889481 seconds)
    (257/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141713112 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109287287 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176926597 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113174963 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066634293 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092315902 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068562869 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067907189 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118360934 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067044564 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222219985 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.091649582 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088921298 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110989784 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098147589 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091014163 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090481497 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100832088 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094785219 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10986403 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069024569 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088844249 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134610709 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108629175 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089739068 seconds)
    (282/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075122422 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124392087 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117099103 seconds)
    (285/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078638135 seconds)
    (286/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12818561 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110118232 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119614356 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085772771 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110335241 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094465345 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.103284331 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095162127 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092150487 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112926717 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135864973 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09299921 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.091548396 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088609752 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111017834 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06863369 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113294813 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156783581 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217233896 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136554031 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093712872 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119144744 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092216648 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21437873 seconds)
  done (took 39.891943322 seconds)
done (took 40.798000339 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101192063 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149526496 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096011017 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137920291 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124621754 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092488499 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119492839 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097844801 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125384622 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125335123 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098672862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094160595 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097740901 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121838597 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096781158 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14028762 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124427067 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094580477 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12068937 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086386361 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120712008 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086428553 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114495775 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072699406 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122938936 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094106919 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118131268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120858812 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087711136 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110983008 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092030482 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.1178438 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088081952 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125507089 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093101343 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120358328 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096923181 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121846749 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087475452 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112749243 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119254497 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088387098 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117442056 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095387998 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116208951 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093544704 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119039992 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100064739 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140417399 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116463962 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096311158 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122120765 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097220911 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118648449 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091055814 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123542134 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091950176 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14285211 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121668769 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092964069 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119643507 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095378074 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11791482 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095444034 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120929516 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122643412 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099017449 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117097224 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098337189 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11805972 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087130057 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12082068 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09032404 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112756459 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09583372 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123870746 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109511456 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094395079 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117449039 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093575351 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110545064 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09089953 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112783275 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094158472 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114329659 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071669218 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114680963 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094989597 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110837362 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096624618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117958346 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095099582 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113033192 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098931656 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111932065 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092928741 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112669735 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086772858 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114483063 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091091115 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112103894 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089931469 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121248943 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088898464 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119524606 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12415675 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088738122 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11757472 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087758782 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110654316 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102581665 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122977013 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087093437 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118599952 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086665329 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120648375 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086014146 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112743387 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086745119 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112006368 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093197013 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112861028 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113624783 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096253412 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125126162 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088270467 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114918622 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091166508 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111754707 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093504919 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11228757 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087947938 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.1141603 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078914646 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114240415 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08859531 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118575633 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091773444 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.12069144 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089022324 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121860631 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092217603 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118762921 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092499669 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112524289 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074510678 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117147938 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089849245 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114323353 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08768922 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115183421 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087106581 seconds)
done (took 17.091519134 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088289359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186943602 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153075441 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143230119 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108486364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113907455 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122726371 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120637283 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114811147 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144443703 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111607279 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134081323 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149121669 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087039114 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112703243 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091775027 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114320442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103125681 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148644976 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134243927 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166172228 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087073501 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149261137 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137520796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121860085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115065121 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112747397 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092667435 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11652087 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104567949 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134168248 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090717981 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11444372 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134765885 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105883161 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121762296 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087597816 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121347065 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087280303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114252539 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143742451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134971856 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094042149 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118819583 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0923346 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115375873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090401098 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122422745 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0988843 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118423054 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127472681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158409267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091855551 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123510523 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08776948 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12528695 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121433682 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091372699 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112817004 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09159459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111993413 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.093157225 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129385972 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142995469 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092258762 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123113916 seconds)
  done (took 8.710369783 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105264436 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140483276 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105754434 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.150179958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112376925 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088853175 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113622279 seconds)
  done (took 1.787104402 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08909261 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134564614 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112525261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137575813 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132436457 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109684093 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12367546 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088773249 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132717609 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089310856 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136203063 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153261525 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090416545 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12192523 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138367335 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089477617 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138361119 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08916402 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118103912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112406689 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1176985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136126635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091863517 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114189965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10340758 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114916899 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163022622 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094817132 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115581975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092929806 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113502472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167780598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106157975 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127192455 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088311327 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130270294 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128819546 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088922935 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131253145 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094278949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129290788 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08935299 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116539692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087091517 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120298299 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124816663 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090985725 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115209817 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092318704 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134711343 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090455665 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127937956 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089245456 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121435015 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090446966 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121868267 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123613648 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090734339 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133861597 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091324052 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131610954 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106305035 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130203798 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131419284 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093377796 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128114099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103811449 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118572075 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090477167 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118933595 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131680632 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087827388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116041811 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100637407 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116337069 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112849487 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139367601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117055592 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100852994 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114333045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090589283 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114972067 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113373267 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118391026 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089570399 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12021295 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092568589 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113204351 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087733581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118831252 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086799989 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117157574 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117930886 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090688812 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116862355 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107492295 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115471161 seconds)
  done (took 11.916711973 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091585119 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114998199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09300325 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115383303 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091741248 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11621317 seconds)
  done (took 1.605174037 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115645636 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118861672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10519923 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122789159 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157592561 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104977389 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131024609 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124851533 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108418184 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129598791 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130535013 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106984966 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137935483 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121938818 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10495254 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121939377 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130137025 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101087719 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128216906 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097098395 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138534397 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121867925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098457295 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133326304 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119470977 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097307726 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126821098 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103185124 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129684496 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124313649 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097412325 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119129585 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095806645 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125058734 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130440712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096384222 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122938889 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119503101 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101207804 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119133454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106314902 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124437546 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127752072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094685051 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125742886 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122535569 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095674588 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126627333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130700494 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095008613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120323509 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096786842 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119415234 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094179518 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122945517 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123956067 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095226167 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131275109 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121927455 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097339976 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119067083 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094314682 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12517358 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119102218 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105476233 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121026659 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096517698 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122781523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12112373 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097405342 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120270232 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093909431 seconds)
  done (took 9.313764134 seconds)
done (took 34.300041301 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690574728 seconds)
  done (took 1.671446959 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.745799466 seconds)
  done (took 1.729684815 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.845250102 seconds)
  done (took 17.827726036 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506323669 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592985293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.887917435 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18209272 seconds)
  done (took 3.152035578 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961538801 seconds)
  done (took 1.961451232 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298324536 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259385605 seconds)
  done (took 1.544094379 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7820836 seconds)
  done (took 1.775290369 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358600593 seconds)
  done (took 2.34629942 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333173862 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18564057 seconds)
  done (took 1.516180158 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547405521 seconds)
  done (took 1.544910273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.111142721 seconds)
  done (took 8.114699783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269460948 seconds)
  done (took 1.276801295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30231907 seconds)
  done (took 1.300434981 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.527074047 seconds)
  done (took 4.52800296 seconds)
done (took 51.282723631 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099566166 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1271827 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103571041 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124503037 seconds)
  done (took 1.448939262 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102257966 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121169219 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10101822 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121846977 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127237298 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097156108 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124067961 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101517083 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.1209468 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096628898 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122372127 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121069651 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100062917 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123553861 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094223133 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124779409 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100427805 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121840882 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12426334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097324413 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119127566 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098492942 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125519559 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0944142 seconds)
  done (took 3.686078466 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101129194 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119928193 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09780828 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118583373 seconds)
  done (took 1.447653676 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100526195 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143925412 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139757919 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101250231 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144447569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136944195 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092868417 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117677949 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09496598 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126189127 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091074141 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149462695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138334092 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099906949 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127821894 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08876699 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118600165 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138482501 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10063219 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127035066 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095634096 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12620601 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090713847 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14115729 seconds)
  done (took 3.837990223 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171442338 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.149075586 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13992253 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096137486 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161557571 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141705901 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088537252 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141889415 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087871831 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132239254 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118356617 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133613731 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130881072 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08778129 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114559643 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087777632 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130004586 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130194939 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091729993 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141728701 seconds)
  done (took 3.488659599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098548857 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118019736 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089092181 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117101122 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099611504 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12133323 seconds)
  done (took 1.654694565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091015358 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115414334 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090626613 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115285475 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094869984 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115046661 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090263516 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11647965 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090183171 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115645776 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090337576 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113816134 seconds)
  done (took 2.250234548 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466095046 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093541284 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121749254 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114738976 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097414459 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115727952 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104317466 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119946984 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142051756 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090302694 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115597619 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092102366 seconds)
  done (took 2.684731665 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235295613 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126987076 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288233117 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274258367 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159240972 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173371167 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283285397 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162449185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226962096 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159822696 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205757882 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225678359 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153407692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190376502 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139534957 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119223852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22782776 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241642875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153633824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203356814 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226814773 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167704449 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180867665 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152284267 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112807961 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198526994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096174234 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130825707 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208095186 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204998819 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190999694 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162904488 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148802427 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239436714 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255814763 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194274714 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285571398 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136923742 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1730681 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169000261 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265988219 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112990066 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232919898 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156099302 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132463036 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19397712 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167330788 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177077296 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151846878 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141005119 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222105521 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213218646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220139191 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112122596 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233696997 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157417379 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169721732 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194272875 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252690828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225240736 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180212967 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094273203 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214780407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19276344 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186833394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.196083924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181923714 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149771373 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192143695 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189501068 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193357842 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18782464 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188132446 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142799765 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171136182 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174174223 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200070213 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23169139 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205031364 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095805137 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171577634 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15168566 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135573797 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197826718 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099682298 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242501211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148260869 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137500052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241671472 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161009827 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161987514 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203611261 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222898373 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149457146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08552046 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155706004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156334229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193166275 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141960098 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160244252 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163716738 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130034506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180823741 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09798673 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205607529 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091945893 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17510062 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211344354 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100592097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162604793 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153499889 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151098903 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174981594 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199561488 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143104366 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135105915 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210398977 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206323655 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123942015 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205501812 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203950629 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14581406 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150367444 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20097057 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24734725 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140306333 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205413476 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158216958 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136366096 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105445701 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208786665 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155826791 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134757106 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135459378 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184472974 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236183609 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125757601 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112660044 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21260454 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107678926 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133152404 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161958112 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151002319 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139594944 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120942573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154469893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211359934 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178846892 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15582814 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166327409 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153950392 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25528886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142881675 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124898869 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150863142 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122021063 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19370154 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228523786 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104121124 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234564007 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173746442 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203615197 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1953803 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109502004 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178605603 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131321556 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093566403 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222766635 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169358023 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163123004 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198076146 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226434878 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181955348 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184706517 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201491452 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175671469 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165831135 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156960945 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112464199 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162367304 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167583888 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125357718 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144535373 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134066057 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12203967 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145754939 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135270012 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196759989 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197472718 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191375243 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159995068 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151462263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183496814 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129232133 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174519551 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180347419 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149717516 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201062309 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223267512 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189625186 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145196965 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203499072 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122535289 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098540533 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144187825 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17120598 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135464752 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13695299 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168126604 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183489197 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182813084 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176927707 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237989198 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171617272 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191028908 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123605361 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16906558 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187468611 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177063183 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188207278 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141871114 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15093817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178338347 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159107969 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255287779 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16886666 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177630522 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208233375 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152775743 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133668422 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153173065 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188154458 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155912158 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179151281 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150141544 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143500191 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163874745 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133337902 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161074842 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186176842 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164614395 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216296046 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125005706 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21503949 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10114642 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166895577 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160474329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165663448 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11000189 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176965682 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232405307 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12198234 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196664091 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19185445 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131959786 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307718624 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212609479 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219964706 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111044662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159757426 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161893162 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16589114 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172179494 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179880866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159815685 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217963965 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160321375 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110720508 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143680375 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150313549 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152826849 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104395961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150841611 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.205044633 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112917645 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213738959 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163856168 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159073842 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175438067 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122255868 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145632872 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152272252 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244404002 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178614497 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213130608 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152753046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180492093 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235736497 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127049341 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105681941 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136141771 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180962981 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137624319 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193058957 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189676508 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230398524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182130417 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214610552 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113080872 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122034532 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158448428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175252346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206948948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151888122 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160210394 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234298844 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115043132 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134725493 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175248511 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224795816 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120866087 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227627642 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080561042 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282624392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126944749 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132471869 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137596744 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235421182 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137719825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185945818 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172646744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170743029 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165565403 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151413489 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192230805 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213951451 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231556582 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182582231 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135041085 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157891587 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178918847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194319191 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159016771 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142035327 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233775507 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196591471 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198656584 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144422193 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170710089 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172520923 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159944416 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216822828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109313793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2362996 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10718186 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222812064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154921788 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143935739 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179421865 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1897422 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142012526 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189137529 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203580227 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108711901 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134278856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170553461 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179676341 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158664472 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129383414 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181411911 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127920827 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192962685 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261043555 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136468682 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155211133 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121790899 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137385938 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158788123 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159686141 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14263941 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140751032 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230424697 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135975379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193223924 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233788141 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172101555 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176535575 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146382243 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695344795 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131673739 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197594476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157215867 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207735713 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151507573 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174995325 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160432679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170029639 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22600754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162672038 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233333642 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195535785 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179237707 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134382595 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159596568 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162943811 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146262888 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153218292 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170933021 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162063371 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154389113 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179393532 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170174352 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136460962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140253988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202891496 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156673311 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184901697 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182490378 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140613196 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175437119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18737994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135497624 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180761736 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238940638 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143771512 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15419129 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105621635 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156209064 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265700544 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126227306 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201803504 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177752104 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160683751 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170452531 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148192045 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222673711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159811996 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180224327 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147902814 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160902662 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158371598 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138845626 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102925803 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157613227 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169403674 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151810606 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161427212 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164834128 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197519281 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096246162 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146764966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225946843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193761116 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245058115 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108504969 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137884122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165022428 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152511989 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178211256 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183082628 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137440534 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136535127 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109020066 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160323066 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113065156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157250917 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196135668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196099671 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209200707 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13843029 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27879252 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11338013 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158015728 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11656023 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105230187 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151547874 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148524299 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160920579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194257681 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262115079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149195412 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134363678 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151318011 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098389462 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138482507 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166310662 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165200244 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179084599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146735117 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081470176 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16034943 seconds)
  done (took 83.27671634 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166829629 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132735477 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147623044 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202204387 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177447825 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271665016 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209995844 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255840137 seconds)
  done (took 2.667837624 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094325488 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14613255 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159248584 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13415562 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09269741 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120406386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.348092633 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134413618 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116592262 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115583192 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173848826 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094021225 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.55505366 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090998306 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120406956 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108585793 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092496659 seconds)
  done (took 3.794542756 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478623268 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72484834 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512112176 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098303567 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.213351937 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113177387 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.808048054 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198701839 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115191751 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48857522 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778218554 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165257877 seconds)
  done (took 18.799809455 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099476963 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122632784 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107727351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137057588 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096659529 seconds)
  done (took 1.674828883 seconds)
done (took 131.709313224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104943237 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407455317 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072194153 seconds)
  done (took 1.620591163 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108292863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138109176 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108456158 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136413774 seconds)
  done (took 1.60780289 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099015836 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128195694 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109386944 seconds)
  done (took 1.447889027 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324111356 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192066276 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164814808 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106898458 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130139599 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103475242 seconds)
  done (took 1.45523236 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097781141 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129069288 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097552363 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131199226 seconds)
  done (took 1.571110051 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095300078 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070612815 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101998641 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075412298 seconds)
  done (took 1.455271446 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113610136 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134496947 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104955648 seconds)
  done (took 1.469720277 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130472378 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139671049 seconds)
  done (took 1.387302453 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106255639 seconds)
  done (took 1.218681959 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.12055272 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171559283 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191143547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167498182 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231130918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166651698 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142642567 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114934028 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132795247 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144818192 seconds)
  done (took 2.700799485 seconds)
done (took 17.831361482 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103624629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519847331 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.4131453 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118175891 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.753194018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380852872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.061174008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148094888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166566771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093692814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141143264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673243312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.083447598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.476336095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.04373026 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378070479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705004792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093577287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120602533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095112232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.041445105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092524823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122466674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093131493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702528281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42735047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096047302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375644316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092799964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12757882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384279901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124349914 seconds)
  done (took 17.3532118 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095764409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175166592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098933314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138894905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124652565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095207561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125631754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093273509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180926869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124552777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110813839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122423605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127433219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096398104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14382386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092827633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127261534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09366518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123294798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122798302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111979428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1207817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094944677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123243551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094156305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13625025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123794785 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094692485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122466883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099472113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129046298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095312856 seconds)
  done (took 4.878491566 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142040541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185006113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129804466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127818794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170460505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125209175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201267168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119740922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183975833 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124807907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141522447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094147168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158079186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124411987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115457975 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123214776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098627329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12465208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093373452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124674436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141180728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09358136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122778848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094053858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124476158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108236639 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125104263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123743601 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09484272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128077011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10148038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125626101 seconds)
  done (took 5.216249917 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098560146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127663115 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110408033 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140373379 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096089921 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126894414 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097453454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125531535 seconds)
  done (took 2.04486036 seconds)
done (took 30.605823665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111801389 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128226834 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107581676 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135457403 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102952789 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133316115 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091215192 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135364268 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135941957 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10279785 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138280118 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093333288 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123502515 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09224049 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136649475 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097695096 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133598069 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103753796 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134981436 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134049007 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09632919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135021191 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104184795 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134977149 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10469246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135183673 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138261088 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100191956 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125036499 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094690322 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125857044 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104196728 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12638133 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106345958 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128119551 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097964952 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12560554 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094619925 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134450121 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133684719 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100599741 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134834513 seconds)
  done (took 6.067494839 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108276434 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140731123 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10535964 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08219874 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11837586 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081227277 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139408381 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079343016 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110950307 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108331779 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075293761 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107764601 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078945418 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10279396 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078375728 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075563028 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109510951 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075928296 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076917604 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106973376 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080548714 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07358495 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109212926 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079249737 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07597068 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111904826 seconds)
  done (took 3.619315028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100138446 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136810445 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112297181 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185953886 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16262902 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099600435 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13383899 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140687216 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109560846 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121767376 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096996303 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150380359 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111581027 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130807695 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092722693 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138402755 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136713028 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095046767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129371987 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113529384 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139161391 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103737428 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144274435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133448201 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092293248 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124793999 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097303601 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136827036 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097925857 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1327795 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096113914 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126482747 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123651531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1053947 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127573504 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094240129 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143227572 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102907603 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132104487 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094002653 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127473695 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12257706 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114849689 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170268605 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093063454 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130728373 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129499184 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104401608 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122803893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111143631 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132544068 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092975702 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127048122 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092639148 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123352208 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107446539 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125390522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097793867 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132165822 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125933271 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105664494 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126233142 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1087636 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122720563 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100651616 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122150118 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093472716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122161897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144355276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094498771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164852379 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093638875 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124456533 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101459144 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13137318 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129783293 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094113 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139780736 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103391356 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127635773 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10294141 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127632853 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095424103 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142141783 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125294792 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096774728 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123455422 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100524218 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125684593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095806189 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137866061 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093405931 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126580265 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11140696 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122819437 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124336257 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100445556 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127801535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093322143 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136274609 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098997002 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12422735 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103498943 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122975486 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125217155 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104256312 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12787358 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093718733 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128719644 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099702509 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124108139 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095048935 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126872038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095692358 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13364938 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100809283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128745391 seconds)
  done (took 14.962160903 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23054633 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216744658 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239698598 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263941739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13717674 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115178176 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213573978 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157566575 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124883224 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163230226 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163433123 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182915384 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140990284 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182064899 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141663435 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12253477 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112017707 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167536512 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216664359 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294740629 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112558849 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134227679 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162877796 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162914979 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106435273 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134387287 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141283077 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105671417 seconds)
  done (took 5.79069557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108475201 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15836311 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098607028 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146861218 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150579115 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093239931 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129407763 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094785875 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13811388 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138371012 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093043379 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132137329 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101557963 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13487583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125216617 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103525343 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135473846 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096209878 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12806651 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097576201 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132188349 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102432893 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130403419 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123439997 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103403728 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123457109 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087997855 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144403859 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123664456 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116576537 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123167212 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100674614 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135703684 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093127705 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125472409 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096431641 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128281234 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095947548 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127509462 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09211849 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123648308 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077887805 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.125003067 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140570095 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101046178 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08028876 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132948631 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130274608 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095371298 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122631189 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097243086 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127068246 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097524792 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132095878 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098356836 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127292926 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096995048 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118933881 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100714246 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128547597 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086046529 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12324606 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100139123 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120815806 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102295993 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130863372 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092409144 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.128319208 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.099503469 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1327458 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.097306685 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130151642 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093029926 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.129018821 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096693319 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130715107 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098913298 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124008788 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124924624 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096345108 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075949309 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12711687 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078235829 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129522168 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094264731 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124893378 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097166671 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132614599 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140828995 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095771859 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134275963 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094552476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125026805 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097069644 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.116988197 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098419074 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142503838 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143416393 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093596065 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124053133 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107135007 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128970041 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092804331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108768733 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101886733 seconds)
  done (took 13.164658787 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128083754 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157516573 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098831912 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.146902556 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158493821 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159098218 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102880526 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132744305 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098045601 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144121008 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094419337 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135119123 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09765044 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140525997 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160191119 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104677452 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128671504 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107551408 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135594824 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174684866 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112907535 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.146700355 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11181247 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128363282 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130996368 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111889489 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165268686 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108515825 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141102329 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143903229 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108870381 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163471886 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145867474 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104098264 seconds)
  done (took 5.590292985 seconds)
done (took 50.315991034 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225268385 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.474265278 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.224805111 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.236672142 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.269506282 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.246185074 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.235972019 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.219715319 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.824707188 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.225063793 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.491248593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.871323196 seconds)
done (took 60.695783224 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.268892641 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352083688 seconds)
    (2/2) benchmarking "String"...
    done (took 1.487474096 seconds)
  done (took 3.988523937 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.569670527 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.181370327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.483468309 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.222504342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.222277571 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.517418324 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.924276573 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.600876851 seconds)
  done (took 28.300821707 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.221587631 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.619480766 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.088547398 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.083761858 seconds)
  done (took 19.164763835 seconds)
done (took 61.441535579 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209777577 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.259508906 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234024499 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.199678027 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.356664424 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.258006317 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.554908676 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.240021237 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.246396609 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198865428 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.242282548 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.219827905 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232836414 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.608614726 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.225556461 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.220700951 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.248949802 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.729827848 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62973263 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.237695018 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.257453514 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.257997933 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.232316329 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.219531451 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.250799597 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.232006956 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219968786 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.241227123 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.823907155 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.218624282 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.236206418 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.758891746 seconds)
  done (took 191.452782796 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.217407345 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.119196125 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.226303041 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.287511542 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.339249782 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.41824282 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349925728 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.665944389 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.241686529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.231559696 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.376202933 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214211781 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.451506633 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196525136 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.223203499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.222238587 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.430537012 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.474349599 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240727055 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.435593529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21795764 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.333563272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.228593978 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.348193487 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.222249291 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.316229485 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.244697974 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.261271002 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.410161453 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.326139486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.260288748 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.228232166 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834603755 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.079794351 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.236853387 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.225069992 seconds)
  done (took 149.282893607 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.511056451 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.216023338 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.216747296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216578352 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247916723 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216526891 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.793300725 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80013672 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719593861 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.646513739 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.281337802 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480019324 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.216053075 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312299835 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.229958306 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.217820786 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.232116437 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.259056824 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224005189 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216947975 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794329821 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236454937 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419196192 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223824198 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217223878 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249544621 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607685155 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217759539 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249588938 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.547489263 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.267398713 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217936168 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.621028533 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.709592473 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.223845545 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331194336 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219459379 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24947809 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.218330866 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.498088555 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.219053601 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.218541594 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.221300945 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901474691 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.222533905 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795518395 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223900016 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193443703 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.223730158 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218971471 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.606551064 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.924629915 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.24071147 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218089256 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.221024965 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217897813 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218461006 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251716773 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.614777156 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315004709 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235932329 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.222015882 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249434684 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.218863152 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.435863101 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218843916 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.984194269 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276654004 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.436826869 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795275699 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226247034 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.218848934 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31734766 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339817869 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.220114526 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220015491 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.219673558 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22035357 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.220314379 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.330229067 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220544456 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.638436727 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226601362 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.222303006 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279664959 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318376874 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.220809109 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620156839 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.225679338 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220630887 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03315489 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323894241 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.2204488 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.220012093 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.220033965 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220718375 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.647289445 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799912641 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494618595 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.227559311 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.575376504 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.225938989 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660128814 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772998179 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920447553 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.227636848 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333774415 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225807897 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222637781 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221245162 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251100232 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.240444919 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282268746 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.222343028 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.6203628 seconds)
  done (took 349.692549741 seconds)
done (took 693.08944709 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.891949238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.87625397 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991563149 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877658953 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854068999 seconds)
  done (took 10.642582495 seconds)
done (took 11.794169743 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406788588 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407725965 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284106367 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409057184 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252256755 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426677919 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388578592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.243750465 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.326677301 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312134784 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324140486 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284138966 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253331924 seconds)
  done (took 18.472316779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539384876 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530701728 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286742356 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540434521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263692986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538221363 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428138503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441560652 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449396989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261036652 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2365231 seconds)
  done (took 16.669093461 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569087514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.543550135 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289896938 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545075593 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264334023 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548187091 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436848937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.444891132 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468656317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26026585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236715373 seconds)
  done (took 16.760900587 seconds)
done (took 53.053036768 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.232627587 seconds)
  done (took 2.385630749 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268536143 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432437893 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.257194337 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.238366377 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233625308 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234887828 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.238127131 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.234206783 seconds)
  done (took 11.291782515 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.233528995 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.2292653 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.230230252 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231728171 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.230753345 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.232394268 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.232976272 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.233074017 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230257049 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.231278515 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.230316527 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233667139 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.231529811 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.233352259 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.230834133 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.233804872 seconds)
  done (took 20.863536878 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234018267 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230931913 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231106654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232288701 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.231748106 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.232064874 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.232625065 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.231965161 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.231820627 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.232382794 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.231828419 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.232292101 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232454154 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232187495 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.232753087 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232888627 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232191036 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233327068 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.236869945 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232442089 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.234090191 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.232027334 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.23278328 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233058241 seconds)
  done (took 30.739243768 seconds)
done (took 66.432941307 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.426602959 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.014559698 seconds)
  done (took 9.598150043 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.235339278 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23460838 seconds)
  done (took 3.628485532 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235816512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235305181 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.233828025 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234800296 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.235295011 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.236133749 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235600919 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.234699513 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.235031485 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.236553136 seconds)
  done (took 13.509408965 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.235869636 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234586232 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.233419997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236081968 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.236114756 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233914855 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.235742854 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.236157013 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235363235 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.234491767 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.236166275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233920511 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.235586231 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.234872902 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.236814103 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.23367905 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234639029 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.234413909 seconds)
  done (took 23.389320188 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.2371213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.236326812 seconds)
  done (took 3.631939173 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.235347437 seconds)
    (2/7) benchmarking "second"...
    done (took 1.235374268 seconds)
    (3/7) benchmarking "month"...
    done (took 1.235070662 seconds)
    (4/7) benchmarking "year"...
    done (took 1.234225068 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.235168889 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.235528041 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.235166628 seconds)
  done (took 9.803704304 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238900908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408200261 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.490913829 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.849797958 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23820374 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241509686 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105529071 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240975315 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.243575309 seconds)
  done (took 14.216379556 seconds)
done (took 78.932825565 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.256572367 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.249010659 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.447059425 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.24909391 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.25506701 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.580059832 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.287158763 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.365645659 seconds)
done (took 37.848198159 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.241763961 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.979733773 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.991047057 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.236247044 seconds)
  done (took 11.365937318 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.214977232 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.190177149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222560447 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.250430375 seconds)
  done (took 18.03920548 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.289676874 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577393131 seconds)
  done (took 5.02622182 seconds)
done (took 41.831376469 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240570495 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239578491 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.236815971 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.239432972 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.236862428 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.237421452 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240211095 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.240769286 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.239659548 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.240229613 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239825555 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239676155 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237065009 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237799469 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239157018 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236439862 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.237642183 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238451764 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23798509 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240580716 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.236953251 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238070859 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.2376974 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.240335349 seconds)
  done (took 30.889812489 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.241031951 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.238527672 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239798187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.240525531 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.238316044 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240195155 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240898566 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238349251 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240716834 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.24202952 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237474211 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.237966554 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.241822024 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.237836301 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24109385 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238996559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240901693 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238291506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240139295 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238953171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241386876 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238628249 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.238783506 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242354605 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238706901 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238874896 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.243047287 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.240400203 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241532456 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.243186115 seconds)
  done (took 38.363596681 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.246624625 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.248582465 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241754934 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2436101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.242761753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241876349 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242145252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241749275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242034624 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.243228483 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24245795 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242218832 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.24312727 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243368847 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243423275 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242296244 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243201649 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.243246835 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243393286 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242398381 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.243865418 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242700249 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244788104 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.243188118 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243676456 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24345279 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243473842 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243058032 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243674777 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.24377338 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.244200491 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.243814404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244105776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.244436089 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244301412 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244353874 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24911813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251078525 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245640328 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244664384 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.244647509 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.244657541 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.245455681 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245510905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.24517081 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244789839 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246575219 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.245474165 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.24445799 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244370109 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244676542 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245030762 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245942424 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.245507702 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24530368 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244807312 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.24438096 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245719568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24583888 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.245274388 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245072716 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244882539 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246383996 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.24587686 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.247042665 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247384424 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245641406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246041963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246033867 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246997546 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245772128 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246413647 seconds)
  done (took 90.776252842 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245901502 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245077383 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243709527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244245777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242906935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246229785 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243839051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245990446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243044598 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246225005 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245850834 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244330339 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244594602 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247509542 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246822207 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244790513 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247587085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245113522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.246857503 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24844041 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24734385 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246116024 seconds)
  done (took 28.569959897 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247694432 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249756348 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245516078 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247928883 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245531797 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247691272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247167704 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250270296 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247908028 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245282516 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245328633 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248034607 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245394471 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246020093 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250828842 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247348529 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247703211 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247989839 seconds)
  done (took 23.62241408 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246581908 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246225858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.24944033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246744072 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246906692 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249764197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246784687 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249802982 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24898227 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.246696525 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248781227 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250123144 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.250463576 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247926089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249299384 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24739389 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249657999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247986175 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248769707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246982136 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247591086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24901606 seconds)
  done (took 28.631454737 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249826385 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.250088952 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248122015 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248109577 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24800633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250176006 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250808974 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247787981 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251487047 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250169013 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24755844 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250168372 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.249701987 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248658505 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248386969 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248641407 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250935715 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248632141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250791664 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247636462 seconds)
  done (took 26.15547866 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251921656 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252954463 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253521387 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253046292 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25368757 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253825763 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252250832 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253226908 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253744139 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253617614 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2531088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253092947 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253623205 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254520513 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252589708 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254136206 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252171814 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253966106 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252798927 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254431671 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253137743 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254144474 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253420488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253636841 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252767011 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25328947 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254621883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254701965 seconds)
  done (took 36.268543819 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254064549 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254173811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251343317 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.25113798 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251275725 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251581455 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25119473 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25182271 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254319927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251748205 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254453777 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25427244 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254599828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254470022 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253857881 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253859159 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253529088 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252960393 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252993385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252015177 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254875786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254736531 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254516303 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2524013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251277386 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.253202695 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252324669 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25273352 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254665722 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252140912 seconds)
  done (took 38.767372323 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272824633 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272923001 seconds)
  done (took 3.721021195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253428387 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254533166 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255359947 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252793166 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252162587 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255218924 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256085708 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252858625 seconds)
  done (took 11.207700368 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.255770271 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.254866926 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255525073 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255783316 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255716775 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255700877 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262520314 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27569014 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255971865 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257422637 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262222962 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263860904 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257443139 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256213838 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.25602134 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258256658 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256620903 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256327039 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257679966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256705519 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258290148 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259645493 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258748234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254791593 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.258397202 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2670948 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.281083563 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257376158 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25772792 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.262174095 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.256888028 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254765468 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258590199 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.25886997 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258928434 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258580073 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2665677 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277951729 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263689878 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279117477 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259428589 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.255857176 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.258643114 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259272103 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259893675 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259375146 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259008876 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.256230382 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.259237896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.26244249 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264466424 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259126291 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255940316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26039602 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259272735 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265259459 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278456342 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.263056084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268528527 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268936773 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292434175 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284786848 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260537881 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260250129 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270781423 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282754054 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265801231 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277253798 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257923068 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260038936 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265315393 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292122616 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285458306 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260165825 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260799121 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260977512 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261500011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260579995 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266818019 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282989546 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26177923 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261325539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271526488 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283997527 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260779947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.262064745 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.262698195 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262613943 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262595308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271919317 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280868073 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262209106 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.261196357 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262030022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.263181244 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262886501 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.262504246 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262474189 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259999136 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261654854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262148735 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267365262 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270824449 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262503111 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263006804 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.268988186 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.282710035 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261452037 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267873906 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262779065 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262940149 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264240453 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268835324 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259858146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266302661 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270797828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262169519 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264449773 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262226578 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263992831 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273969316 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289346814 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263796012 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264515908 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268180625 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274742561 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264024409 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267637294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264982964 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26193638 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.261925284 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265395436 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264241841 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264574063 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264379785 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265715326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263605008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.26546335 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.265468404 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265963091 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265381788 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265495831 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26553769 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266877897 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.265927384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.265769024 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270448622 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285544417 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265330584 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265995815 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.263087062 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266103258 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.266717526 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265769696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.266096432 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266611439 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266040075 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266873111 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26700273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265746924 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265487232 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266640353 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270110325 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265680712 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270002173 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265541581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263878378 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266461496 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267361795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265108414 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26573591 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266127346 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269585942 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274278628 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266466255 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265546933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.268595986 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266718482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267837518 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267934467 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269998959 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275250257 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26713725 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273437402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.287607269 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268496822 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.269171731 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267517663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268113535 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268215515 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271222351 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275896331 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279456978 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293565079 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270441918 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272407846 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270611798 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272276973 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272435738 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269159803 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269687209 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269336059 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269405651 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269113927 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270987876 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269681455 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.269703402 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270539598 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.27013488 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.270303829 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269937043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.27112323 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270386226 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266812598 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27049104 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270759909 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269762186 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267175444 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269624302 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270601346 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.270662792 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270463811 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275293723 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267527652 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271914996 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271689898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270170894 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.269783608 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270582171 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272271521 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26976087 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276735968 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289263311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27081168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276569306 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289707368 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.271225551 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.272403226 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.270025147 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268936984 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273294001 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27936969 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272132251 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271520556 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272569912 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270382687 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271748917 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276951946 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.289482076 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271208852 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272122924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.271774027 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269953344 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.272889312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.271519432 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272247943 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273215614 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271541909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272413079 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273827735 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272879592 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272099231 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.274165786 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276124679 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281529344 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277620887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272958944 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275194742 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275066233 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277010795 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272997951 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273658254 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.274553807 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285354315 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29886127 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2801244 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294888723 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.276065098 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278171829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294629047 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277094725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275150811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274387179 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273526044 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273834122 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.27227178 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274970941 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273727249 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276522037 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275507217 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279047521 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274093551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274458364 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275075528 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275454905 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276143134 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274965086 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277017353 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277486745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276811981 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274843288 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274599718 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280814313 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295113437 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275109986 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.277266785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.276374813 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275200178 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275185132 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.276251976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.280093721 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283995327 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279589758 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.284808147 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277410219 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283821348 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.278675884 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279962027 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28512416 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.27591429 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275945206 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276175855 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276074277 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282497962 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296874126 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.281139771 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281570061 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278130405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277759642 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277508133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277623922 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278689577 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277891555 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284372418 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297705558 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.283306119 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279445114 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.27613936 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278135162 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278434492 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.278333179 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280437839 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.279711061 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278914282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278498023 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278191134 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278901961 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.278642821 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.280454575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275825782 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.279298713 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285429711 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299620557 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285369709 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279172483 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285758547 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.301376413 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285127684 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298628896 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279391843 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279379299 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279700223 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.28011109 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.280327163 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280666514 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.280261433 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.28053526 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283137952 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279785367 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.282016949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280342547 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280690284 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.280150059 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289309603 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303750361 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281873972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284682752 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278446165 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281653871 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284531009 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.281658158 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.280522632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283175718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290389253 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289304332 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280144761 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280946535 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282029039 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280468472 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281524 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281182727 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281868032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281292504 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.282038301 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281455282 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283659687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281874699 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.281231468 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282797911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282585972 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.291243457 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.302562843 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282677427 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281984391 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282996716 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282633003 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282314341 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282454556 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283150377 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28381718 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283292061 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289199068 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28955772 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285217374 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282608123 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.282525792 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283958356 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282591683 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283689342 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282858286 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284685316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283292824 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283713406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283595628 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.284025065 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28379464 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283492011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284283137 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285842186 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291352164 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283828044 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.282471076 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284664163 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284264634 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.284840301 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.285379456 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290464634 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30895496 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.295073334 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.292780965 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288868246 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.28556097 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287255228 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.293490571 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.28411843 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284945061 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284803778 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285719589 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285045991 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.289543168 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286156742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290985268 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.307008224 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285456845 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293430482 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.305451564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285210306 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287084032 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290469442 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285750534 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284255942 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285488287 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285614329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292009544 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306275219 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286339245 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287885704 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285677648 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.288544986 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291428622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286451914 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287276765 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284419999 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.28629548 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288071902 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287747832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284882133 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286461255 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286202852 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.291382319 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.295250942 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.286189641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289179138 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.288131598 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288318657 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28932308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288772073 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.286892884 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285556185 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.287671057 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287814551 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289022179 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290160437 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287380612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28817297 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290190002 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287864045 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291392475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299047443 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295831398 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.285378181 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288261254 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288510034 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290893412 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289275374 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289539562 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289285608 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289303136 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288794151 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28900046 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290265714 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.292092728 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304863701 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307492641 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289747403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.289510913 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292495758 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.290317789 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287755175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290083569 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291604288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.29348252 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297467521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290576145 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296492508 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309557555 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291749701 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296053423 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293984308 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.299119362 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292779817 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290989267 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291884681 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.295707702 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305365725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291591946 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301614046 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321078888 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311850863 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.292539819 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291618098 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290372029 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291546295 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.293138069 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292309997 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291078952 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291273207 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.29218908 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292237062 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297384234 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293802114 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292970491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.292069322 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.291235001 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.293338795 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.288995217 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291629912 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.293356524 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.292799152 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292320325 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.29209382 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292656326 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30361209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.3202599 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.293043573 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.29302979 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290742136 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296138854 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294797261 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304169712 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.30122314 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293661893 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293525336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293549866 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29345652 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292297073 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.293144364 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293986392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292848893 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290339485 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.30645634 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320438476 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.298080136 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293567599 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295233795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295752659 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295583175 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29452393 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295223786 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296173972 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.297568647 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299976488 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295459462 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295278323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297828079 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.303729281 seconds)
  done (took 763.063248718 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293800036 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292852278 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293621535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293673574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293886937 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293021672 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293477914 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294734417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293469033 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295216398 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293517425 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293972579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293953673 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295084887 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294160087 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295079152 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292000272 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294409006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293480606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294170107 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294265875 seconds)
  done (took 28.383999476 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.296333187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.294581392 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294418688 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29706689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295318023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297520041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294461946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297014581 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296714041 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294409905 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297341708 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296026851 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294237794 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295313909 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294165117 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297248233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29704752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295252212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297739805 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294988743 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29759449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295264558 seconds)
  done (took 29.723219412 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297775544 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297099593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296183143 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295225802 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.298622714 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.294994261 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.296958296 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.297451319 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.29866309 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29883225 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297293349 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.299084402 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305418688 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303701021 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.298237174 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.298307152 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442370555 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298668405 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.299035835 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.298771575 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296355984 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303233989 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.317520737 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.297147193 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297979143 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299707551 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299510868 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.300658746 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299436804 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.301170942 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304365739 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.300093104 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29965796 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301745505 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.298759988 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.300316312 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304526073 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300326541 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297019928 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299309894 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309872705 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.32153836 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300969933 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305366121 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.322902828 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299732123 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302925092 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308249873 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297594679 seconds)
  done (took 65.116225882 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300498334 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300431905 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298441346 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300812874 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.302828074 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.30086376 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.301516121 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301501019 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297681573 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29796457 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301733755 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299209473 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299376626 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301083379 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302031089 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300128424 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299717696 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.30064802 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.29974164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300926169 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.30103184 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302648373 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303603797 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30205645 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302513147 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.30011243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301713742 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.303336045 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30117586 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.301308391 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302770988 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304002557 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.30464354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302629779 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301327842 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303720944 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.304276838 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.301707669 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303520302 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301158438 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.305324261 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303955441 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303998837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.30492972 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301264746 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.302315723 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301303256 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301434295 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.301629593 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.30395715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30318068 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302178856 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303507662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.302356044 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305882796 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.305164648 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302507388 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.302050377 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305222591 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.303280114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.304317371 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305572035 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303810627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.306141214 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.305722663 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.30391822 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.30303675 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306784093 seconds)
  done (took 89.780745235 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305448748 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304461811 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306543028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304836649 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306373293 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305440454 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305693118 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304622534 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305602606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304933624 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306062117 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305736116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.305120317 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30546082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305154823 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304160227 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305063133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305462007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305322707 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306631581 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.306209478 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305651385 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305402747 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305809956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306499797 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306026354 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306149813 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306471601 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306384466 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306836148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306211164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306841701 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306224485 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307265978 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307121422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305577121 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306410034 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306594071 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306905525 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307441528 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306648351 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306844425 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307102436 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306834495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306765511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308112255 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30835402 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307634048 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308277019 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306958354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307428218 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307844795 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308391264 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307722232 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30796649 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308577932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308355071 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308749972 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308748912 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308687602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309410398 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309185885 seconds)
  done (took 82.234750683 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309909418 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309756618 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307494143 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306192289 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309805951 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306775007 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309827141 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309840874 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310315348 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309858759 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310299284 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30882641 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307928184 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310570441 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307714973 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30735533 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308222525 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308588275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30995694 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.307848049 seconds)
  done (took 27.402204493 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307852786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310751045 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.308232904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308951703 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.311679543 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308838167 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.31107488 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3107726 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308836435 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31237232 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311942389 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312684531 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30863952 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308968891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311108486 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308841607 seconds)
  done (took 22.188184834 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308655688 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311449664 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.311313548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310376102 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309402045 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.309669396 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311799715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.310314312 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309214482 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311561231 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.313261898 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311619769 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312679791 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312561756 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.3103024 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.31200631 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309341527 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.310304595 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312105996 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311759281 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.311564385 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310268128 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313158334 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.312401848 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31027863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.311787459 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.310674892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309604638 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.311004929 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312659954 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310373121 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310946592 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310741959 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310807333 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.31347335 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311677738 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.314483242 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.315494941 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313462224 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.314527749 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314280531 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.311100318 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.314821485 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314386104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.311586581 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.313710253 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.31248289 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31265733 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.3113395 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311750542 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314377449 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.31331246 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.315744146 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.315243289 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.316209348 seconds)
  done (took 73.39056174 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314917215 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315960921 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312967819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315726968 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314705028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.312926262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316680987 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314537866 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313547675 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315620518 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313347395 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316471018 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31362258 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315591027 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314335825 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315721913 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313240302 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314191298 seconds)
  done (took 24.894476942 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313452123 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3140752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315338267 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.314743668 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314249747 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316866516 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313966305 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315338681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316850928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314077028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312683997 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.316582821 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316158673 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.317003287 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314356517 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312999391 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316644283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31700283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314025094 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315078769 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317475027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316877692 seconds)
  done (took 30.168429377 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.314621091 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.316390804 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.316593283 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.333185992 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.335879517 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.33871178 seconds)
  done (took 9.1868659 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324375426 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316753211 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314893777 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318120427 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318530696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315715353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314618904 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31474404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317564037 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315792905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315759035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318972306 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318901554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315372471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318446473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319259362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31770537 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315541439 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316834511 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319713977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316673727 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318454054 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316089656 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316646709 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316493467 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317078452 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318816304 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317084915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317823805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320498358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320148281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318578169 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320215495 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317753642 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320558762 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320281644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316971247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320389617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319940142 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318421156 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320024953 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319358602 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320305873 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318280939 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319666373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317285437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317622404 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318285967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317784891 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321060909 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321251105 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318016306 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321076682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320991244 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321435512 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321372675 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318988466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318007441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320943347 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319162017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318686622 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321679442 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318901575 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319847797 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321978406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319149988 seconds)
  done (took 88.286060508 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318976794 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319093278 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319130748 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319022342 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319723836 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318968667 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319527284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319257139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32054314 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318589846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322297105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31937844 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319803967 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320038461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319912592 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320414221 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320199917 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319343234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320898992 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323367009 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321143601 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321070517 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320842054 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320777987 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320664859 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324004825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321186407 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32069272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321547016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321135789 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321969418 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321543223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320569504 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321069192 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322075256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321414922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321576003 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321602252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322294202 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323647055 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321413386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325272349 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321825631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322147134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322745901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321174841 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322116084 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322534924 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322192013 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321938414 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323335267 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322918283 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323362923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32264562 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322733841 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322847087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323166568 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322316822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323312538 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325348521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324386398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324497584 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325628993 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322353951 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322918341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323402368 seconds)
  done (took 88.466464231 seconds)
done (took 1780.419092189 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.358068328 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.311671521 seconds)
  done (took 13.911510685 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488264945 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.440151553 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.324726439 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.374313198 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.323272066 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.336237335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.333312746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.324908301 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.325282879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.325362908 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.3251599 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510471802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.32802679 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32567741 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326235431 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.420637937 seconds)
  done (took 43.08362417 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.353555165 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.33112596 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.44918157 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.349684293 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354088514 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.526521144 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.383684489 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329867206 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.508783804 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.37298932 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.976680068 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354295269 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.330298556 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.498556695 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.348232534 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.524734581 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.585330894 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.980961498 seconds)
  done (took 30.801707385 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808282325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.364777553 seconds)
  done (took 9.416147204 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.343784295 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.358616332 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.367530731 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.323116125 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.386262982 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.362293052 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.324470732 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.385583874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.37614489 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.362531828 seconds)
  done (took 64.843475592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349993001 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330961791 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.331770434 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.329362147 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.320503003 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.322687044 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328819722 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.321735233 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.257894451 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.462029068 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332110697 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338091516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.351402384 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3314093 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.329997953 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366667349 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.485615898 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330692683 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.329950139 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.338721465 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.331755181 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.418342427 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374345981 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.329169693 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463904656 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.263738207 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334673894 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.340395359 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.514595679 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.329928755 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.331374533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332776334 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.334160345 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.947740552 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.818110691 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.341246173 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.357344339 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340671153 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.330423486 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.491542043 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.334268483 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.339939247 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.329028537 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.816380972 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462891322 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.452362735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.643050215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.351773485 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.335174788 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395796944 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333994433 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.334239361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363492822 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.103719938 seconds)
  done (took 112.058583296 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.342502945 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.723886487 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496008923 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.345859567 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17003473 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.081963538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343362167 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.633798243 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.371705627 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325638161 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.63315384 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854921548 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345750672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.372721606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.880469639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384355567 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326423583 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.172770258 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.345441693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.334022227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838445467 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32858249 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.341488597 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.566922876 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.367758627 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800813373 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.828670404 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.793162907 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.345715598 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.327274914 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816904268 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.348066664 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.374844714 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332492436 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.598401741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704387674 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696402424 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.347336437 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349555442 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.331988072 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.350575415 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796000021 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704996146 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.355038772 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329438471 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801058818 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34522956 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.33615081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331655297 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538395127 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.169595044 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.329806143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.812047892 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.329676046 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.701182469 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.425675966 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34965161 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830020507 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348376999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.519538428 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37485685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.331636721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334730384 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333902024 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.331704493 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696024415 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690949582 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.337589612 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692591238 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828666947 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.362144896 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873856538 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.254091439 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335587234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.387072957 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329813744 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.021422847 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842204194 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.353374853 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330452833 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681842905 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.348731908 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.622478948 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.347626828 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350668448 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85622168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.342280978 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.371486574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.340854927 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.330704202 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.089818967 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33222448 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.626363053 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.388139195 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.332277489 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.3323854 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.359560065 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332974257 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.333014677 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.333764166 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877625012 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.354881219 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.314447227 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349003112 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332127302 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.354683358 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.336722893 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.332392874 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559277276 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.939276767 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.355821218 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333063503 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.333408862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.340669683 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.568401606 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.333832443 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.659731843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.353142375 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333196215 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337688753 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.0654369 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353535338 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333954843 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.355172866 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.233953072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54275802 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350770119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.333714699 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334480417 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.351803792 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.641354872 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.354122665 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.413827953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338326454 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061869578 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.374507084 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.363863194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.83500354 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.34072275 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316924171 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.356336728 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334973684 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623415058 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608561237 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.575298096 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.334747631 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.351646828 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.053072168 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.354357089 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483766891 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357274425 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332986351 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534974256 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.558327188 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.336109116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.94439056 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.336746119 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55627259 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.336740942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636598488 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847323944 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353982326 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339487047 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066098876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.049468706 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.010737403 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.34083729 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.621344899 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.286992848 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.816214108 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.337961018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338427307 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.920687916 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336659367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.336641993 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.337399529 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33693733 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.488768701 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510851439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.534651308 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339272844 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80811637 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399802436 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337762583 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339381105 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341087482 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.684108252 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376902443 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.338743145 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.347169644 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.339305605 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342798923 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829986959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.294621339 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.339168138 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497883705 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99201202 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.355311227 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.339947525 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.083071802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.551984743 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904017026 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.395715359 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.666638733 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.365323947 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377119903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.084970909 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.43489972 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.830780083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.358469496 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.339145047 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955505063 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.35519242 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.397734859 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.339432282 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.339578499 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893926097 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.356413999 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.343425459 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.637343571 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.360489832 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596998561 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.339307306 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.352089866 seconds)
  done (took 1113.498293316 seconds)
done (took 1388.853491594 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.34089363 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.340998057 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.325642789 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345295302 seconds)
  done (took 26.613886624 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.349846652 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34688863 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347655729 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.346221113 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.350240384 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.345988345 seconds)
  done (took 9.348763063 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.46524967 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.34770739 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345910378 seconds)
  done (took 19.420550284 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.561017155 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.719455665 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.732177185 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.744067757 seconds)
  done (took 11.021607037 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.348630918 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349038271 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349666742 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351252714 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.351855931 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.352496697 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351051008 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351546209 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.352465477 seconds)
  done (took 13.420590601 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.543683913 seconds)
done (took 86.628721325 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.322345627 seconds)
    (2/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.412378758 seconds)
    (3/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.142567463 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.005166523 seconds)
    (5/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.439219752 seconds)
    (6/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876648553 seconds)
    (7/309) benchmarking ("sort", Float64, false)...
    done (took 5.653849709 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352169396 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.332475558 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.361363615 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.295710466 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597722811 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.400582448 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.385752695 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.467061542 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.37020988 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.253587602 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.58777065 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.324169771 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.355300138 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.444783226 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.326041628 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.341521044 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.410428311 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.324222973 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.540809955 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.418294107 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.104635488 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.455259004 seconds)
    (30/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.008325731 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.763614534 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.520854869 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.293881292 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.378156601 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.831373414 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.1625467 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.385806397 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.344866954 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.515326927 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32988433 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.298488733 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.344562069 seconds)
    (43/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.344820372 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.371269936 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.345636859 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.745970681 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.070809202 seconds)
    (48/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.883125476 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.188316924 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.447414105 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.230287576 seconds)
    (52/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.325952624 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.356709519 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.327374731 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.851942344 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.374949406 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.121952727 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.38207045 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.419119787 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.327435593 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.487630684 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.3287771 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.609208452 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.414817735 seconds)
    (65/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.558380029 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.788999996 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.363291564 seconds)
    (68/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.362345098 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.11891918 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.93441164 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.656941288 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.422054421 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.347226666 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.364930223 seconds)
    (75/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.603117287 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.428489696 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.346334213 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.922264591 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.37434874 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.3483652 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 4.466641578 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.347432379 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.211205817 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.370054314 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.446950936 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.3674488 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.364364408 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.859350227 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.349224167 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.364708994 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.359114498 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.352135116 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.358977617 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.433230799 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.466508408 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.612106461 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.412835611 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.349700707 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.28270263 seconds)
    (100/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.434138936 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.642295519 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.787610003 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.15419678 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.029212141 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.330420368 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364953041 seconds)
    (107/309) benchmarking ("sort", Float32, false)...
    done (took 5.377521509 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.390378096 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.379939551 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.035111659 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.331163618 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.776908716 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.359016503 seconds)
    (114/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.479373974 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.590039692 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.366645151 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.981647817 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.734411738 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.768921292 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.347621472 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.537242031 seconds)
    (122/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.343071478 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.336615836 seconds)
    (124/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.756468263 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.032771659 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.474985639 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.252688963 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.714245219 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.394501749 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.550351162 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.364228043 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.352315692 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.7498344 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.365548975 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.353224926 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.372112367 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.388448086 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.437683995 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.787482911 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370074407 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332664942 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.443986964 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.43688193 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 1.871605852 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.393170193 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613845598 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.379001194 seconds)
    (148/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.440366268 seconds)
    (149/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.540194464 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.18358374 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.166818838 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613002725 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.214414769 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.371271151 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.725947938 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.716406449 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.350010049 seconds)
    (158/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.053751537 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.082259771 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.50266332 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.453746366 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.483366851 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.72962386 seconds)
    (164/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.335421722 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.474703597 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.175573175 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.379409235 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.753594856 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.470817201 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.333658128 seconds)
    (171/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.928348934 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.812759365 seconds)
    (173/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.380822826 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.575737685 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.413180237 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.11887831 seconds)
    (177/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.981002601 seconds)
    (178/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.395335596 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.811697183 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.605079775 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.613677296 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.42078308 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.938774252 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.329135121 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.483554743 seconds)
    (186/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.335852924 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.350732589 seconds)
    (188/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.024904631 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.022870387 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.371241298 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.779350807 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.529959422 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.400596028 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.355358531 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.865280798 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.26017548 seconds)
    (197/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.543605159 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.424009952 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.381200141 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.337437775 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.342763418 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.398399332 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.221531267 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.414828941 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35528117 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.945040099 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.746228233 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.064257837 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.413549408 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.954908989 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.448977079 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.354909725 seconds)
    (213/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.035734541 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.385516842 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.191566647 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.972206831 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.336701149 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.375357461 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.351753893 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.988933604 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.576478911 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.438269045 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.932691345 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.368884022 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.337933199 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.377319247 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.219619071 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.356658961 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.398171132 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.337944138 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.414576377 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.903467292 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.33673636 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.339229044 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.781057126 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.357942433 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.408479685 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.399950647 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.352381416 seconds)
    (240/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.064790905 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.195827924 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.926513351 seconds)
    (243/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.94571751 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.447036587 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.875523371 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.656406167 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.459140081 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385049752 seconds)
    (249/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.348751897 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.337874656 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.339939217 seconds)
    (252/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.38554786 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.779320064 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.356583067 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.114460456 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.470774578 seconds)
    (257/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.758426148 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.599833511 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.376045977 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.359139475 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.41925263 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.340235415 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.061067733 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.340283754 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.405463675 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.646850117 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 6.358700723 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.068980067 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.478642309 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.340237936 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.74468143 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.633835948 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.447427382 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.344517332 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.3873656 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.376596413 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.341392131 seconds)
    (278/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.536998798 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.539159038 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.879841117 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.477887721 seconds)
    (282/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.731936922 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.859859126 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.377632923 seconds)
    (285/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.216178966 seconds)
    (286/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.734803005 seconds)
    (287/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.377113196 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.453838799 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.444459906 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.478905634 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.220680673 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.34238777 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.387240138 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.344272414 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.444482415 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.04246816 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.4050999 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.179363949 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.382010913 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.349692029 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.455337949 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.446405254 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.362218251 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.380446417 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.407345747 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.38517134 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.388829181 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.494572015 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.361913424 seconds)
  done (took 1051.590996273 seconds)
done (took 1052.855415381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.397818988 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393614241 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.375865702 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.396627554 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485601968 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.398752027 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.38571458 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.378219502 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.423232343 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.42616543 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.375010186 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.398219955 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.376893314 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.377552556 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.376799513 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390667712 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.481817835 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.377443157 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.392066462 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.386976638 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.392685381 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.375264746 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.426334745 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.399723954 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.379966448 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.380293868 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.378989561 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.396344224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.488267358 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.380298607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.380780577 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.387317819 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.482524313 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.374822792 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.372709675 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.395582897 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.388719606 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.387563946 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380596112 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.408735809 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.922043858 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.396145146 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.378716656 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.379303938 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.3785815 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.383032893 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.378218626 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.385920752 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390296195 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393129834 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.91404916 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.411840535 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.381573547 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.379983192 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.390211579 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.377548567 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.382672185 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396276675 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.398186695 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395667906 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.470862117 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.385110894 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.381208714 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.39597003 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.387383054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.950132472 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.393947631 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.384068896 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.922657135 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.404434893 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.947625713 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.406929751 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.381723289 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.394593612 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.411588069 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.479551069 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.374662552 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.380372616 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.387648777 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.379971787 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.39118579 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394420875 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385507119 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.381381826 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39586601 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.404841087 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.391381684 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.38182691 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391246381 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.401252791 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.388613777 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.393955971 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.385274616 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.377155993 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391439121 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.385919058 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.383901699 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.3844551 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.386668168 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.392819512 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.923537421 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.419352891 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.380220756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.379572011 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.380813449 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395340412 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.924041223 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.401992744 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.405487349 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.429746414 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.384340324 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.47464805 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.385283905 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401354624 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.391669969 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.384865697 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.378623597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.478794109 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.915941875 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.415800059 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.386181953 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.380248553 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401555838 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.385827351 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.379865684 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.489780584 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.384465223 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398038128 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503543954 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.395341145 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.416324822 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.382781094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.387954757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.407082721 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403360702 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.416626374 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.3868412 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401569403 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.400301177 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.382234218 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394727941 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.3951195 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385051417 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.392162874 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.379721705 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.408685474 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398593636 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399295484 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.406333255 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.505395616 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.38264066 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.480964932 seconds)
done (took 234.132868176 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440994627 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.372025191 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471516534 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.381193784 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.482866457 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.503290009 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.379441319 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.378421603 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.378690874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.758982734 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.379300074 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.379007316 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.373797933 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.378095238 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.462414781 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379632001 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.377945852 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.75803321 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380999941 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.450964519 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.381736644 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378877007 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.380302925 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.803665837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.377420882 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.378344759 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.46505528 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381628318 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.726352043 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.376600357 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.381036419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.763175737 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.487807643 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398242752 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.391010154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.388202742 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.502493583 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400458745 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.482753199 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.464092128 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.487237293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.420662719 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.376677663 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.376140041 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.383871922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.383002437 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.381109101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.408883639 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.380333284 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.380329676 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.724572938 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.393474895 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.381570068 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.380706634 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.380826533 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.411311643 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.381397167 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.383609405 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474147229 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.384052405 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.455449914 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.7659895 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.804495413 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.383966291 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.383617609 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.381680152 seconds)
  done (took 151.917871758 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45073566 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.457816602 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.500704439 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.401485027 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.434866509 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505212859 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402839999 seconds)
  done (took 11.448513445 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390174306 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.385673426 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.433445074 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.434406155 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.385749033 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.532180617 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385864411 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.396355877 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.382259591 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.437994015 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.386757616 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386682492 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.392810339 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.38236802 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.434539106 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.397095725 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.500151109 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.387395271 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386224522 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.542117694 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383538257 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.393729248 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.443409951 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.396963391 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387311377 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.391151513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950590065 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387133053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383985103 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.387025301 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384305137 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.423592872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387956129 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.386290317 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383989308 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501661038 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.387419767 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384442301 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.38626388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.381472199 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.387733896 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.386934564 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.387016835 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384790343 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.387812067 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.408915095 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.387488777 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.387149252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.387180866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387970052 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.437154226 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.388232687 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.385741341 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.385234099 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.442832389 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395179491 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388316505 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.385932736 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38807365 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384470594 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546234956 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436770321 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.388729776 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435655309 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388980976 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38856218 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387784455 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.389352618 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443178121 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.389951907 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436908069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.387220765 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54511848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.412290137 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391259869 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.391146211 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.391983158 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388728875 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.385618479 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.397699331 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.388804932 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.390194345 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395957319 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386620699 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387397246 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.493549697 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500254869 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.390063154 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.403618827 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.397435805 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.389041449 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.443332199 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.390585001 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.386964805 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441579925 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.504508228 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.452869571 seconds)
  done (took 158.51046759 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.3946434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.398851973 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.392199488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.40729648 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.391399235 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389340612 seconds)
  done (took 9.673858865 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.392744752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.393505702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.390823872 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.392211706 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.391355484 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391828738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.39097092 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392177901 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.396389995 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.392533877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392431748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.393518412 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.39393711 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.390664252 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.39228816 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391991812 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.391351125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39049723 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.3925431 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39179329 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.490918581 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.392403087 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392137762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.393787548 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.397216061 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.39310355 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.400595937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.393999351 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.392317598 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.401388038 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.414917064 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.394288395 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.394303915 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.398919264 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.398344109 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.393815754 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397993765 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.395211005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391230724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.394969259 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.394188214 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393442457 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.393727378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394328342 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.395353831 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.399569957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.399807973 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401169155 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.393475556 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.396146301 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39631263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.395081826 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.39491154 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.395833716 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.396534833 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.416884424 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.401338342 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395576054 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.39465159 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.395626137 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.397638818 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.395287635 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397620732 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.399974923 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.402734234 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397137298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.39664907 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400401266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39585758 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.396280069 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.395900273 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3934019 seconds)
  done (took 102.88400099 seconds)
done (took 435.724877982 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.435988541 seconds)
  done (took 7.742535945 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.583601307 seconds)
  done (took 7.891390883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.271074156 seconds)
  done (took 23.582937183 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.422695709 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.470544607 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.411878766 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.395605187 seconds)
  done (took 27.006671445 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.92612338 seconds)
  done (took 8.23379165 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.387864291 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.417496676 seconds)
  done (took 14.112741198 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.576831698 seconds)
  done (took 7.883126275 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985987977 seconds)
  done (took 8.297549226 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876814095 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.390233495 seconds)
  done (took 14.8465173 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.37031031 seconds)
  done (took 7.67615565 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.579262203 seconds)
  done (took 8.886277598 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.392223711 seconds)
  done (took 7.699412035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.470988914 seconds)
  done (took 7.778268869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.112529465 seconds)
  done (took 10.419623046 seconds)
done (took 163.362797422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.387671911 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.389363439 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.388379948 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.388569561 seconds)
  done (took 26.861154578 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.429442897 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430388036 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.432023321 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.440968806 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43343962 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.43058524 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.42212709 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.422127405 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.441798008 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43325142 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.433318496 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432135324 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.430559666 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.421957061 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432237739 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.433514252 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.441479853 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.433125688 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.423032074 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.434025928 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.397859617 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443119999 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.434680398 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.399065002 seconds)
  done (took 35.612896217 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.924576852 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.47197243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.551320837 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.45086288 seconds)
  done (took 7.706860872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.448875476 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.452536068 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.465198671 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.502868213 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.532043068 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46814897 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.426452932 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.420887421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.406576675 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.45228062 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.527582935 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.46808942 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.545146984 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.398374927 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.634663316 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.398889425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.398847888 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.451696903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.502602478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.52061493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.400343963 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45143785 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.46243856 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.469320551 seconds)
  done (took 36.514971305 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398847143 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.407786401 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.399689227 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.399455791 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407308645 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.399613583 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.40006347 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.400956899 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.400082052 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.405776991 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.397793992 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.411318171 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.399698999 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.399084989 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.40612303 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.401363855 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.406527369 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.399324935 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.399602992 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.404556339 seconds)
  done (took 29.356114279 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.393175421 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.24632683 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.745460471 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.650337856 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.393033978 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.393171633 seconds)
  done (took 28.132350572 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.477137001 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633847526 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.400373416 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.793853885 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.88530542 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.419558176 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.401665637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.65734863 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020311587 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01859597 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.466113607 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.473740886 seconds)
  done (took 20.959291786 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.394979836 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.412705722 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.400883358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.413630956 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.461707862 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.422727129 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.4084184 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.397238416 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.465192799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.481730538 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.423421575 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.462183601 seconds)
  done (took 38.457496586 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483558123 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447407443 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.449040965 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422083576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122323409 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608929459 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.490133067 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854393174 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400101185 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671120849 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400636195 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493200561 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654610822 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397260355 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400487362 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.468422814 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650446539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903080544 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399510671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661147528 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429549679 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397975015 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.760758642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.432389738 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610549277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.544072908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.65754052 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175529595 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725379318 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416757666 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409665636 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399576865 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674595549 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112098169 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515788464 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410207333 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419542933 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947603401 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.382500288 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.677489357 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418473601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401215369 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410150021 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399027029 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333425447 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413357357 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864347481 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.4098594 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.111263023 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399867421 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411559842 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49541612 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403397368 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.974680026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404926404 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407474183 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.398468432 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425460278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990870712 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267369823 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407378832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.339100419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400671634 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.68840915 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08021495 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.521463242 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.40482783 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405239417 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335141667 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.6627144 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424103338 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545576839 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.425029232 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069211247 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167847483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433652292 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338107917 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96956546 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419283814 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.341290926 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633054243 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180272515 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343322187 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.352728366 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335478068 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14154006 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410785108 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.864758235 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427173711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.881015746 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414077102 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422213542 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428505373 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.627643802 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.284662864 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402410052 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.413999636 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530082864 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425298773 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862118612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341390412 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40780075 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661846262 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.615430176 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407443061 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.473684265 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647486076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426471581 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.422891145 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40273658 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.41999644 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.035058211 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434875288 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246417841 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425519696 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183068537 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163364034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41211906 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50834013 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405221873 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670969663 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.187837959 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.566114156 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473103731 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410706264 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405425134 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.773535684 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007917596 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.565981355 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.402163074 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417945181 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419474553 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.406640838 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367513129 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.418341314 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409616974 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.188009044 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632271443 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414628843 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684959434 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340271206 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55043216 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433866004 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.63094985 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.688080601 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.422809754 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669852223 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418950467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415966562 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421457537 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426603486 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508679761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429932258 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.421335637 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670224661 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.410436353 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.410996235 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.797203448 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.190843449 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408352451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.412912491 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408603227 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048909138 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408202258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412865324 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301797153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421674502 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47489127 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413988726 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418470336 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.417692242 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439350945 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41386482 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.405717332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632189482 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419874659 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.709732985 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491620908 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.627459449 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051424114 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44404493 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.343695799 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.11991842 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.101221669 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409853166 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.61104523 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409115974 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421400588 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421003874 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41445387 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047221087 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433113741 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.720846008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.421111825 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421204591 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416845962 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411004115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.392685226 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317396697 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415868713 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422587576 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554921884 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.425732502 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.345316111 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92692484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416320321 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410715409 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.188643318 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44650862 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.708073377 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917860346 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673633679 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411616936 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424095815 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.904734623 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.449251692 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.41748621 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415100893 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425425185 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.432210105 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419214438 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.422877805 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.783682792 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.800098583 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978679633 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226582791 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018193951 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453617458 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.416454315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.311352227 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873060015 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351935392 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07261444 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617838346 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894753316 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372531329 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636738525 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.70020607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263323198 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424778253 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64180904 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408738749 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.414531358 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446080465 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624863574 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448166165 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420026941 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346115289 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.931538031 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672133025 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423207825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491101574 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870954456 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413310944 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.197598325 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432465522 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.855767699 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626220054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.96581602 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.809583535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419167143 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433391004 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920375836 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41822024 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94350618 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077364332 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448104519 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.639470533 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358343153 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4264064 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.426098075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411862991 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.894604972 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.423884081 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.671575291 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427059945 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34952843 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419227164 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989890292 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.288506305 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.421785378 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415375807 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189724817 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417489249 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744385487 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.431846892 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.384524385 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438999324 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.351142231 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349845325 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.110345076 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426115581 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393525304 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938716717 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.425295261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435872994 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424822296 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268314276 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674992465 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.430468527 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058499675 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665582494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420446649 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43964257 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.517378087 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427348731 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.397832752 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.317423352 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653745957 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419945845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665281258 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.529598613 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.322612793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420075839 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633268273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309994042 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418572761 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715473124 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.147537947 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.42377167 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246475682 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46582676 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430746602 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448856762 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418462551 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438786791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511004518 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430907393 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430210782 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.429655429 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609585149 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422297225 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421264957 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.434085007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513338643 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.306519577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.395033353 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194308659 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057910523 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232356999 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075993633 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452338993 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421015095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422802397 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353912624 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571484725 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948012521 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694053558 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548407353 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.430956934 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444199764 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434460959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422613576 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65425347 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695884995 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396088865 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42890476 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214229231 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.302104772 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431458803 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.631959793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94936741 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00815636 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542158719 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432599455 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883757061 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699461796 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.513293309 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42148116 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014418677 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435965402 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.858440783 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.451420854 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426967454 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569069881 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431893447 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126646343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452656084 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.582191506 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.195449744 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845816123 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684783953 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.953763431 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.4336614 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060894883 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218686907 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690866127 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492996127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434283656 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.530566704 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570657949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.43041316 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.314639689 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423696473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270987289 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.133361999 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.434164553 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063981758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707729236 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.423000543 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.434394158 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446897551 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.433600112 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.649120941 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187707233 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653037067 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436331983 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432389234 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998164024 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063645486 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455699727 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35749318 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.428165452 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696036158 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680598494 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448851446 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.877630338 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.137138947 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999911552 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401063838 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446437035 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442392851 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203558106 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063823302 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.421566689 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95588648 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087977443 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426126743 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703492393 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.431754468 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435485217 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706108276 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.430926362 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428740316 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441198602 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.065224569 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286875336 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.441945989 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769062236 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.363503002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654009578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44733246 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363786162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427247569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.623390557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43145593 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55562597 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439812802 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.433381276 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442504392 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.179763267 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724703922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.433617815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.418115297 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.414063225 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438983966 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454506832 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707869174 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432962354 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.102074457 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.782022801 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68584038 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427898406 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.412469807 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.432321892 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428963655 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153687185 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447037679 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432881737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020233197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.435472124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.443001241 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433395206 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.646130225 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640621144 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430344685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441877166 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444919668 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448449122 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.336260786 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212356087 seconds)
  done (took 1690.187672083 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458666114 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.461925525 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.46690191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.511072907 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.480775755 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.504385975 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.537490787 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.507100488 seconds)
  done (took 53.272185196 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.429307359 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.58753404 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.462328956 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.429007968 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.438086863 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.428554278 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.936859845 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.455911234 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.437618369 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.439745939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.435550572 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.435624649 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.123034178 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.440256509 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.43717388 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.416190444 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.43827001 seconds)
  done (took 67.121141282 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.435813408 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.89806059 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.466477243 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.433627386 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.922929144 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.45989759 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.788289467 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.489279161 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.445427705 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.812290579 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.105995304 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.450926594 seconds)
  done (took 82.054397043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.439410743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.439921492 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.440087842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.439735198 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.439320359 seconds)
  done (took 8.542558758 seconds)
done (took 2126.08842239 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.79474695 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.189829664 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.114572093 seconds)
  done (took 5.649647833 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.578347937 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.629196636 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.769378343 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.786493138 seconds)
  done (took 8.108308715 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.711907347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.807273018 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623076596 seconds)
  done (took 6.488663173 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.010981651 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.447169832 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.456277316 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.433468148 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.435811848 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.43552026 seconds)
  done (took 20.65168592 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.435748498 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439916434 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.436323173 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.440566394 seconds)
  done (took 7.100707081 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.413679973 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.127119526 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.419442808 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432888244 seconds)
  done (took 18.739487562 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.182876919 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197424439 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.183313726 seconds)
  done (took 7.911055324 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.448831099 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.276955445 seconds)
  done (took 10.07372103 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.732384459 seconds)
  done (took 3.079409205 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.568239344 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.767238061 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.565683296 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.454506651 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.590210294 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.713697514 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.264350351 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.796095881 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421098563 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.865189672 seconds)
  done (took 30.355069297 seconds)
done (took 137.212975888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.605653362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836477335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.639187042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.575461434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.668353063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.639761184 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.840890276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.54599718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.085872677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.072964582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.618900598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.670278649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.994985181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838296131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.9969521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.458448074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.667517546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.639431686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.265518369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437442553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.843143943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.213855629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.448779129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.231556058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.666629341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.59275709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.796793979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.456114687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437296806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.811372743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.591927802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435122567 seconds)
  done (took 199.972274762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.446932849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.451425494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.436497228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435672803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.449798714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.436152085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.437772467 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.435921835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.4528809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.461653647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.435950211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.440582551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.437108227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456939954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438730511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.437118056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.436409408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.456611071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.436467602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.455666521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.43781687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.472036327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.436813026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.467626135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.437286091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438746002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441813122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.438059547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.456400999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.454776017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.443496823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437961516 seconds)
  done (took 207.590217433 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.440932327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437474191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437507054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.455697192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.460972102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.437245473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.459211053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.459159951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438923366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439222085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.438434456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.437892301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.437872518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43972018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438980646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438813448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.456720877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.458669171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.451297216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.438432564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.438864879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449601351 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.439746038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439205942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.458815852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.459340077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45648542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439856775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43955462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.439311609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440713786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.441372323 seconds)
  done (took 207.598126228 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.64504335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.448328747 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44883732 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.398739513 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.450086886 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.44851593 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.444357438 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.639479313 seconds)
  done (took 15.277311372 seconds)
done (took 631.785571173 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.900582158 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.60829339 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.656144217 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.469148711 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.339140339 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.487722675 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.469803131 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651104624 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.408632057 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.659894365 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.753739002 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.485356102 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.901798295 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.467779688 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.737278524 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.572229052 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.363669668 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.492274612 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804264593 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.068035125 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.742400517 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.985537067 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671986327 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.395137903 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.918432961 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.981924429 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.244189977 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.3528594 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.487544125 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.809934826 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.225181796 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.497012783 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.537308975 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.536240184 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.593169832 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.572760056 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.480934595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534296179 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.676525755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.748771462 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.102141477 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.217086747 seconds)
  done (took 97.963418358 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.432754668 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.43288363 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.432280575 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.43483105 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.434634503 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.43332017 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.433276451 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.433429299 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.434494087 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.433052188 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.433831778 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.434112968 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.433726897 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.434728206 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.433654627 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.433184686 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.434188884 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.437972943 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.434967415 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.433498496 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.435771343 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.434429926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.435314665 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.434490255 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.435794087 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.435299076 seconds)
  done (took 38.647784946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.452848046 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.713107462 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.886197908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.460340644 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.454284791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.456823815 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.539358265 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.455745679 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.456592898 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.45674968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.629498978 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.457228708 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491997737 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.918103295 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.456589752 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.456342686 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.455558434 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.454063006 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.721324705 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463762631 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.563775334 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.456458454 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.540593263 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464280487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.480020479 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455489487 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.45997354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.977908262 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.477036559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.629551171 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.446219394 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.539139061 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.930618082 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.920723829 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.447113975 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.457182333 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.45749554 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.635717481 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.457850255 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.456123773 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.541976481 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.457479111 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.898595719 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.087215174 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.475578007 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.457033649 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.000096897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.655656143 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.727764718 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464387068 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926125952 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.45992622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.460445199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.457592893 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.731007804 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.463677364 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.457213716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.008028334 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.483302143 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543155929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.458691442 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.457276033 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.729432748 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.457503839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.718810872 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.459254549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.465711584 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.478706439 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.901019215 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.459629512 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114840603 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476205851 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.459034335 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.632790087 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.717837045 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.036532179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.481361796 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.733712431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942922507 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.560940944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.461448556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.968837824 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.565075538 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.461288703 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.462101309 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.461670576 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459405801 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507947698 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.541736831 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.041489335 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124203282 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.025511974 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.566247736 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.472618748 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460668312 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.009490481 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.482045516 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.460125309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.896847146 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113521436 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.478971595 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.468881434 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.11735399 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.481586797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.546214701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.466617264 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.908969498 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.461164465 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.511112874 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.461238705 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.467233487 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485293607 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.547663688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463028562 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.461597385 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.081075842 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.659646909 seconds)
  done (took 191.561437948 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.45224847 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.453195929 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.46207397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.45330362 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.455686399 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.463019777 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.453735806 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.453896137 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.460595402 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.45623905 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.454869494 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.456561053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.455965366 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.465902723 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.466806367 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.46193268 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.06737145 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.456029428 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.456033134 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.473339624 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.28621297 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.456619514 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.456642905 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455460555 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.457000296 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.456441772 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.463261235 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.458300929 seconds)
  done (took 155.636087445 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.464028722 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086712411 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.483398138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.608560644 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.48465518 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.461642128 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.606283582 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.527360828 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.482137765 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.462665103 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.461979891 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.796330515 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.464249114 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.032289766 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.676654741 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.625062867 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031772863 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48417974 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.463911869 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.461628287 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.610945058 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469770533 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.798136358 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088288761 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.486085139 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088884666 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450560005 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.466684334 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.464474494 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.090815573 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.482365483 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798823756 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.548843188 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.529211111 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.109132111 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052493259 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.052768436 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.627333664 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.464004986 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.463579703 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.463676296 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.449169171 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09100692 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.486728666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.466530143 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.081846497 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486381162 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.467633417 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.472854131 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.464454311 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.529291022 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.550433441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.822199151 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.09787752 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.56909978 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.478871417 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.610229416 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.845049456 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.467388352 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.037314422 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.448539223 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.120270966 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.4902015 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.451272061 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.466498961 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471969255 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.630970272 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.610660504 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.038537509 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485857601 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.038535619 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.650259693 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.465262801 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.465737363 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46795502 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.100259614 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058381372 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.650601907 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.61545543 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.686126719 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.452199007 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.46717262 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.45155949 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.552980797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.466980935 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.133726709 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.060520352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488154745 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.470088098 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.470515431 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.469285656 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.668161934 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.151372366 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57559029 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.028775725 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.844184848 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.827975977 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.474437731 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.533682079 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.485970226 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.82815163 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.473643091 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531704924 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912469002 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.828103158 seconds)
  done (took 175.680433451 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.733292701 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.78204965 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.568593185 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.610281131 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.110100799 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.059328608 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.844108102 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.619127331 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.586762352 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.748324153 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.779753527 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56387969 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.655929207 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54758293 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.217400466 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.565316126 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584803461 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.629269216 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591448931 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.551612367 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170795352 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.777220547 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654993762 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.526437922 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.569970377 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.292876669 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.06176731 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.007708933 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.656072678 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.914959373 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.031862111 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.646231266 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.52921174 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.204796929 seconds)
  done (took 70.770526683 seconds)
done (took 731.61308225 seconds)
SAVING RESULT...
DONE!
